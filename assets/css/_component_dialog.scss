.dialog-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0,0,0,0.7);
  z-index: 2;
}
.dialog {
  z-index: 3;
  background: $color-2;
  padding: 0rem 2rem 2rem 2rem;
  width: 90%;
  max-width: 500px;
  position: fixed;
  top: 30%;
  left: 50%;
  transform: translate(-50%,-50%);
  @media(max-width: $breakpoint-1) {
    top: 50%;
  }
  #dialog-title {
    margin-bottom: 0.5rem;
  }
  #dialog-description {
    margin-bottom: 1rem;
  }
  .close-dialog {
    background: none;
    border: none;
    box-shadow: none;
    position: absolute;
    top: 0.5rem;
    right: 0.5rem;
    padding: 0;
    line-height: 1;
    margin: 0;
    cursor: pointer;
    display: inline-block;
    &:hover {
      transform: none;
    }
    &:active {
      transform: none;
      box-shadow: none;
    }
    svg {
      width: 1.2rem;
      height: 1.2rem;
    }
  }
  .lighthouse {
    display: flex;
    justify-content: space-between;
    .item {
      text-align: center;
      & > p {
        color: $color-1;
        font-size: 13px;
        font-weight: bold;
        margin: 0;
        @media(max-width: $breakpoint-1) {
          font-size: 10px;
          padding: 0 3px;
        }
      }
      .circular-progress { 
        position: relative;
        display: inline-block;
        width: 75px;
        height: 75px;
        border-radius: 50%;
        font-weight: bold;
        font-size: 0.8rem;
        @media(max-width: $breakpoint-1) {
          width: 50px;
          height: 50px;
          font-size: 0.8rem;
        }
        svg {
          transform: rotate(270deg);
          @media(max-width: $breakpoint-1) {
            width: 50px;
            height: 50px;
          }
        }
        circle {
          stroke-width: 10;
          fill: lighten($color-1, 15%);
          stroke-linecap: round;
        }
        circle:nth-of-type(1) {
          stroke: lighten($color-1, 30%);
        }
        circle:nth-of-type(2) {
          stroke: $color-1;
          stroke-dasharray: calc( 2 * (22 / 7) * 40 );
        }
        &#performance {
          circle:nth-of-type(2) {
            stroke-dashoffset: calc( 0.07 * ( 2 * (22 / 7) * 40 ) );
          }
        }
        &#accessibility {
          circle:nth-of-type(2) {
            stroke-dashoffset: calc( 0.11 * ( 2 * (22 / 7) * 40 ) );
          }
        }
        &#best-practice {
          circle:nth-of-type(2) {
            stroke-dashoffset: calc( 0 * ( 2 * (22 / 7) * 40 ) );
          }
        }
        &#seo {
          circle:nth-of-type(2) {
            stroke-dashoffset: calc( 0.07 * ( 2 * (22 / 7) * 40 ) );
          }
        }
        .pct {
          margin: 0;
          position: absolute;
          top: 50%;
          left: 50%;
          transform: translate( -50% , -50% );
          color: darken($color-1, 20%);
        }
      }
    }
  }
}

.dialog-overlay[aria-hidden="true"],
.dialog[aria-hidden="true"] {
  display: none;
}

.dialog-overlay:not([aria-hidden="true"]),
.dialog:not([aria-hidden="true"]) {
  display: block;
}