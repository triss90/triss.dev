[["Sass Mixin Grid system","sass-mixin-grid-system","15\/11\/2015","css","2015\/11\/15\/sass-mixin-grid-system\/","<h1>Sass Mixin Grid system<\/h1>\n<p class='timestamp'><time datetime='15-11-2015'>15-11-2015<\/time><\/p>\n<hr>\n<p>Regular CSS grid systems have many upsides, but certainly a few downsides as well. One of the bigger downsides is that you often end up with one <code>div<\/code> with a ton of class. This makes the markup clumsy and unreadable! To combat this I've made a SCSS Mixin grid system. It's modular, simple and incredibly easy to use.<\/p>\n<p>To use the grid system you'll need to use two separate Mixins. One for the container and one for every grid item.<\/p>\n<h3>The container Mixin<\/h3>\n<pre><code class=\"language-css\">@mixin row() {\n  font-size: 0;\n  box-sizing: border-box;\n  padding: 0 10px 0 10px;\n  max-width: 1200px;\n  margin: 0 auto;\n  @media only screen and (min-width: 750px) {\n    padding: 0 10% 0 10%;\n  }\n  @media only screen and (min-width: 975px) {\n    padding: 0 5% 0 5%;\n  }\n  @media only screen and (min-width: 1200px) {\n    padding: 0;\n  }\n}<\/code><\/pre>\n<h4>How to use<\/h4>\n<pre><code class=\"language-css\">.wrapper {\n  @include row();\n}<\/code><\/pre>\n<p>This Mixin takes no values. It simply sets the size and position of the container, and makes sure that it'll adapt to different screen sizes. It saves<\/p>\n<hr>\n<h3>The grid Item<\/h3>\n<pre><code class=\"language-css\">@mixin col($col, $sum, $gap: 1em, $align: top) {\n  width: 100%;\n  font-size: 16px;\n  display: inline-block;\n  vertical-align: $align;\n  box-sizing: border-box;\n  padding-left: $gap;\n  padding-right: $gap;\n  @media only screen and (min-width: 750px) {\n    width: percentage($col\/$sum);\n    vertical-align: $align;\n  }\n}<\/code><\/pre>\n<p>The grid Mixin is vastly more exiting. It takes 4 paramaters:<\/p>\n<ol>\n<li>$col - The amount of columns you want this grid item to take up<\/li>\n<li>$sum - The total amount of columns in your grid (12 is a good number)<\/li>\n<li>$gap - The left and right padding. The standard is <code>1em<\/code><\/li>\n<li>$align - The vertical alignment of the item<\/li>\n<\/ol>\n<p>You can easily modify the Mixin, for example to add additional breakpoints to modify the grid.<\/p>\n<h4>How to use<\/h4>\n<pre><code class=\"language-css\">.content {\n @include col(9,12,2em,bottom);\n}\n.sidebar {\n @include col(3,12);\n}<\/code><\/pre>\n<h3>Example<\/h3>\n<p data-height=\"450\" data-theme-id=\"16012\" data-slug-hash=\"LpozKX\" data-default-tab=\"result\" data-user=\"triss90\" class='codepen'>See the Pen <a href='http:\/\/codepen.io\/triss90\/pen\/LpozKX\/'>SASS Mixin Grid<\/a> by Tristan Oliver Mose Jensen White (<a href='http:\/\/codepen.io\/triss90'>@triss90<\/a>) on <a href='http:\/\/codepen.io'>CodePen<\/a>.<\/p>\n<script async src=\"\/\/assets.codepen.io\/assets\/embed\/ei.js\"><\/script>"],["Responsive Videos in HTML","responsive-videos-in-html","01\/12\/2015","css, html","2015\/12\/01\/responsive-videos-in-html\/","<style>\n.responsive-video {\n  position: relative;\n  padding-bottom: 56.25%;\n}\n.responsive-video iframe {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  background: $light-text-color;\n  padding: 10px;\n  border: 1px solid darken($light-text-color, 10%);\n  border-radius: 3px;\n}\n<\/style>\n<h1>Responsive Videos in HTML<\/h1>\n<p class='timestamp'><time datetime='01-12-2015'>01-12-2015<\/time><\/p>\n<hr>\n<p>I happened upon an effective way of making videos responsive, and immediately implemented it on this site. Try resizing the window, to see the video beneath, adjust to the width of the page, while remaining its aspect ratio.<\/p>\n<div class=\"responsive-video\">\n   <iframe src=\"https:\/\/www.youtube.com\/embed\/DgDg2ddiKIo\"><\/iframe>\n<\/div>\n<p><br><\/p>\n<p>The effect is achieved by adding a padding of 56.25% on the bottom of the div containing the video. We arrive at this number by dividing the aspect ratio's height and width and multiplying that number by 100 to get the result in percent. e.g. `( 9 \/ 16 ) * 100 = 56.25%<\/p>\n<p><br><\/p>\n<h3>The CSS<\/h3>\n<pre><code class=\"language-css\">.responsive-video {\n   position: relative;\n   padding-bottom: 56.25%;\n}\n\n.responsive-video iframe {\n   position: absolute;\n   width: 100%;\n   height: 100%;\n   top: 0;\n   left: 0;\n}<\/code><\/pre>\n<h3>The HTML<\/h3>\n<pre><code class=\"language-html\">&lt;div class=\"responsive-video\"&gt;\n   &lt;iframe src=\"https:\/\/www.youtube.com\/embed\/DgDg2ddiKIo\"&gt;&lt;\/iframe&gt;\n&lt;\/div&gt;<\/code><\/pre>"],["Pure CSS Line Numbers","pure-css-line-numbers","15\/07\/2016","css","2016\/07\/15\/pure-css-line-numbers\/","<h1>Pure CSS Line Numbers<\/h1>\n<p class='timestamp'><time datetime='15-07-2016'>15-07-2016<\/time><\/p>\n<hr>\n<p>I was messing around with an easy way of display code on my website, and stumbled upon a neat trick for making incrementing line numbers with CSS.<\/p>\n<pre><code class=\"language-css\">.codeblock {\n  counter-reset: step;\n  counter-increment: step 0;  \n}\n.codeblock .line:before {\n  content: counter(step);\n  counter-increment: step;\n}<\/code><\/pre>\n<p>The final result is awesome! Check it out:<\/p>\n<p data-height=\"700\" data-theme-id=\"light\" data-slug-hash=\"bZaQYJ\" data-default-tab=\"result\" data-user=\"triss90\" data-embed-version=\"2\" data-pen-title=\"CSS line numbers\" class=\"codepen\">See the Pen <a href=\"https:\/\/codepen.io\/triss90\/pen\/bZaQYJ\/\">CSS line numbers<\/a> by Tristan  White (<a href=\"https:\/\/codepen.io\/triss90\">@triss90<\/a>) on <a href=\"https:\/\/codepen.io\">CodePen<\/a>.<\/p>\n<script async src=\"https:\/\/static.codepen.io\/assets\/embed\/ei.js\"><\/script>"],["CSS Variables","css-variables","03\/01\/2017","css","2017\/01\/03\/css-variables\/","<h1>CSS Variables<\/h1>\n<p class='timestamp'><time datetime='03-01-2017'>03-01-2017<\/time><\/p>\n<hr>\n<p>I've been using a <code>scss<\/code> for a while. With that, comes variables which are easily defined like so: <code>$color-variable: #f06d06<\/code>. \nIf this is more or less the reason, why you're a using scss instead of regular css. You might not need to.<\/p>\n<p>You can use CSS's custom properties like so:<\/p>\n<pre><code class=\"language-css\">\/*\n    Declare the variables on the root element\n    to make them available globally\n*\/\n:root {\n    --color-1: red;\n    --color-2: blue;\n} \n\nhtml, body {\n    background-color: var(--color-1);\n    color: var(--color-2);\n}\n\n\/*\n    You can later overwrite variables \n    and scope to them to specific elements\n*\/\nmain {\n    --color-1: yellow;\n    background: var(--color-1);\n}<\/code><\/pre>\n<p>Pretty nifty if you ask me!<\/p>\n<h2>Manipulating the properties with JS<\/h2>\n<p>Manipulating CSS's custom properties is super easy! You can both get the values and set them like so:<\/p>\n<p class=\"codepen\" data-height=\"265\" data-theme-id=\"light\" data-default-tab=\"js\" data-user=\"triss90\" data-slug-hash=\"QRKyrR\" style=\"height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"CSS Custom Properties\">\n  <span>See the Pen <a href=\"https:\/\/codepen.io\/triss90\/pen\/QRKyrR\/\">\n  CSS Custom Properties<\/a> by Tristan  White (<a href=\"https:\/\/codepen.io\/triss90\">@triss90<\/a>)\n  on <a href=\"https:\/\/codepen.io\">CodePen<\/a>.<\/span>\n<\/p>\n<script async src=\"https:\/\/static.codepen.io\/assets\/embed\/ei.js\"><\/script>"],["SVG Header Waves","svg-header-waves","20\/04\/2018","svg, php","2018\/04\/20\/svg-header-waves\/","<h1>SVG Header Waves<\/h1>\n<p class='timestamp'><time datetime='20-04-2018'>20-04-2018<\/time><\/p>\n<hr>\n<p>The other day I was thinking about an elegant solution to creating non-rectangular headers with CSS. While there are many ways to achieve this effect, like <code>border-radius<\/code>, <code>transform: skew<\/code>, <code>clip-path<\/code>, <code>svg<\/code> and <code>img<\/code>.\nI ultimately ended up going with a simple SVG image as my specific situation called for a wave-like header.<\/p>\n<p>The problem I encountered with this solution, was creating a system that would be easy to maintain and expand upon. I would need to use the wave with several background colors and both on the top and on the bottom of sections.<\/p>\n<p>If you include the SVG code directly in your HTML, you can of course manipulate the SVG at you leisure, but I wanted to keep the HTML as clean as possible, preferably like this: <code>&lt;header class=\"wave-bottom\"&gt;This is some text&lt;\/header&gt;<\/code><\/p>\n<p>In order to do this, I would have to embed the SVG with with css <code>background-image<\/code>. This however would not let me manipulate the SVG code after the fact. And thus I'd need to create 10's of images to accommodate my need.<\/p>\n<p>Now enough talk, time to present my solution:<\/p>\n<h4>wave.php<\/h4>\n<pre><code class=\"language-php\">&lt;?php\n\n\/\/ Examples:\n\/\/ wave.php?color=000000&amp;orientation=180 # Hex-code without hashtag\n\/\/ wave.php?color=#333333&amp;orientation=0 # Hex-code with hashtag\n\/\/ wave.php?color=white&amp;orientation=180 # CSS Color Definition\n\/\/ wave.php?orientation=180 # No color, fallback to black\n\/\/ wave.php # No orientation, fallback to 0deg\n\nheader('Content-Type: image\/svg+xml');\n$color = ((ctype_xdigit($_GET['color']) ? \"#\".$_GET['color'] : $_GET['color']) ?:  \"#000000\");\n$orientation = ($_GET['orientation'] ? intval($_GET['orientation']) : '0') . \"deg\";\n\n?&gt;\n&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n\n&lt;svg width=\"100%\" height=\"130px\" viewBox=\"0 0 1440 130\" preserveAspectRatio=\"none\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" xmlns:xlink=\"http:\/\/www.w3.org\/1999\/xlink\" style=\"transform-origin: 50% 50%; transform: rotateX(&lt;?php echo $orientation; ?&gt;);\"&gt;&lt;path  id=\"wave-bottom-white\" fill=\"&lt;?php echo $color; ?&gt;\" d=\"M0,56.050526 C121.352261,18.683509 262.172393,0 422.460394,0 C662.892396,0 818.88453,115.474324 1058.94661,115.474324 C1218.988,115.474324 1342.92081,94.808741 1440,56 L1440,130 L0,130 L0,56.050526 Z\" &gt;&lt;\/path&gt;&lt;\/svg&gt;\n\n<\/code><\/pre>\n<p>As you can see above, I ended up embedding the SVG in a PHP file. This way I would have full control over any parameters I'd need to modify and would also easily be able to use the image like this: <a href=\"https:\/\/triss.dev\/examples\/wave.php?color=red&amp;orientation=180deg\">https:\/\/triss.dev\/examples\/wave.php?color=red&amp;orientation=180deg<\/a><\/p>\n<p>With this method I only have 1 SVG file to maintain, and endless ways to expand, should need be.<\/p>\n<h4>The finale result<\/h4>\n<p data-height=\"365\" data-theme-id=\"light\" data-slug-hash=\"bMNaZz\" data-default-tab=\"result\" data-user=\"triss90\" data-embed-version=\"2\" data-pen-title=\"background wave\" class=\"codepen\">See the Pen <a href=\"https:\/\/codepen.io\/triss90\/pen\/bMNaZz\/\">background wave<\/a> by Tristan  White (<a href=\"https:\/\/codepen.io\/triss90\">@triss90<\/a>) on <a href=\"https:\/\/codepen.io\">CodePen<\/a>.<\/p>\n<script async src=\"https:\/\/static.codepen.io\/assets\/embed\/ei.js\"><\/script>"],["HTML 5.2 Native modal","html-5-2-native-modal","23\/04\/2018","html, javascript","2018\/04\/23\/html-5-2-native-modal\/","<h1>HTML 5.2 Native modal<\/h1>\n<p class='timestamp'><time datetime='23-04-2018'>23-04-2018<\/time><\/p>\n<hr>\n<p>With HTML 5.2 creating and maintaining modals is super easy!!<\/p>\n<pre><code class=\"language-html\">&lt;button id=\"dialog-open\"&gt;Open dialog&lt;\/button&gt;\n\n&lt;dialog id=\"dialog\"&gt;\n    &lt;p&gt;This is a dialog&lt;\/p&gt;\n    &lt;button id=\"dialog-close\"&gt;close&lt;\/button&gt;\n&lt;\/dialog&gt;<\/code><\/pre>\n<p>Adding the <code>open<\/code> parameter to the dialog element forces it open.<\/p>\n<pre><code class=\"language-html\">&lt;dialog id=\"dialog\" open&gt;&lt;\/dialog&gt;<\/code><\/pre>\n<p>This can easily be manipulated with javascript using  <code>dialogElement.showModal();<\/code> and <code>dialogElement.close();<\/code><\/p>\n<p>You can edit the backdrop of the dialog using <code>::backdrop<\/code> like so:<\/p>\n<pre><code class=\"language-css\">#dialog::backdrop {\n    opacity: 0.3;\n    background: blue;\n}<\/code><\/pre>\n<p><br><\/p>\n<h3>Interactive example<\/h3>\n<p data-height=\"465\" data-theme-id=\"light\" data-slug-hash=\"wpxEEe\" data-default-tab=\"result\" data-user=\"triss90\" data-embed-version=\"2\" data-pen-title=\"HTML 5.2 Native modal\" class=\"codepen\">See the Pen <a href=\"https:\/\/codepen.io\/triss90\/pen\/wpxEEe\/\">HTML 5.2 Native modal<\/a> by Tristan  White (<a href=\"https:\/\/codepen.io\/triss90\">@triss90<\/a>) on <a href=\"https:\/\/codepen.io\">CodePen<\/a>.<\/p>\n<script async src=\"https:\/\/static.codepen.io\/assets\/embed\/ei.js\"><\/script>\n<p><br><\/p>\n<p>Unfortunately this awesome feature is very poorly supported. Currently only Google Chrome has support for this.<\/p>\n<p class=\"ciu_embed\" data-feature=\"dialog\" data-periods=\"future_1,current,past_1,past_2\" data-accessible-colours=\"false\">\n  <a href=\"https:\/\/caniuse.com\/#feat=dialog\">Method of easily creating custom dialog boxes to display to the user with modal or non-modal options. Also includes a ::backdrop pseudo-element for behind the element.<\/a>\n<\/p>\n<p>You can read more about this on the <a href=\"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTML\/Element\/dialog\">MDN Web Docs<\/a><\/p>\n<script src=\"https:\/\/cdn.jsdelivr.net\/gh\/ireade\/caniuse-embed\/caniuse-embed.min.js\"><\/script>"],["Animating My First SVG","animating-my-first-svg","24\/04\/2019","svg, css","2019\/04\/24\/animating-my-first-svg\/","<h1>Animating my first SVG<\/h1>\n<p class='timestamp'><time datetime='24-04-2019'>24-04-2019<\/time><\/p>\n<hr>\n<p>So! The goal was simple. I wanted to animate a simple menu icon on hover. I've worked with SVG for years, \nbut never directly manipulated the code other than perhaps simple transforms.\nFor this first project however, I wanted to try my luck, \nwith actually changing the size and dimension of SVG paths (Which turned out to be relatively easy).<\/p>\n<p><strong>Here's the SVG in question:<\/strong><\/p>\n<pre><code class=\"language-xml\">&lt;svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" width=\"101\" height=\"78\" viewBox=\"0 0 101 78\"&gt;\n  &lt;g fill=\"none\" fill-rule=\"evenodd\" stroke=\"#000\" stroke-width=\"4\"&gt;\n    &lt;g id=\"bar-top\"&gt;\n      &lt;circle cx=\"27.5\" cy=\"8.5\" r=\"6.5\"\/&gt;\n      &lt;path stroke-linecap=\"round\" d=\"M.5 8.5L20 8.5M45.5 8.5L97 8.5\"\/&gt;\n    &lt;\/g&gt;\n    &lt;g id=\"bar-middle\" transform=\"translate(0 30)\"&gt;\n      &lt;circle cx=\"54.5\" cy=\"8.5\" r=\"6.5\"\/&gt;\n      &lt;path stroke-linecap=\"round\" d=\"M.5 8.5L45.5 8.5M72.5 8.5L97 8.5\"\/&gt;\n    &lt;\/g&gt;\n    &lt;g id=\"bar-bottom\" transform=\"translate(1 61)\"&gt;\n      &lt;circle cx=\"41.5\" cy=\"8.5\" r=\"6.5\"\/&gt;\n      &lt;path stroke-linecap=\"round\" d=\"M.5 8.5L34 8.5M60.5 8.5L96 8.5\"\/&gt;\n    &lt;\/g&gt;\n  &lt;\/g&gt;\n&lt;\/svg&gt;<\/code><\/pre>\n<svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" width=\"101\" height=\"78\" viewBox=\"0 0 101 78\">\n  <g fill=\"none\" fill-rule=\"evenodd\" stroke=\"#000\" stroke-width=\"4\">\n    <g id=\"bar-top\">\n      <circle cx=\"27.5\" cy=\"8.5\" r=\"6.5\"\/>\n      <path stroke-linecap=\"round\" d=\"M.5 8.5L20 8.5M45.5 8.5L97 8.5\"\/>\n    <\/g>\n    <g id=\"bar-middle\" transform=\"translate(0 30)\">\n      <circle cx=\"54.5\" cy=\"8.5\" r=\"6.5\"\/>\n      <path stroke-linecap=\"round\" d=\"M.5 8.5L45.5 8.5M72.5 8.5L97 8.5\"\/>\n    <\/g>\n    <g id=\"bar-bottom\" transform=\"translate(1 61)\">\n      <circle cx=\"41.5\" cy=\"8.5\" r=\"6.5\"\/>\n      <path stroke-linecap=\"round\" d=\"M.5 8.5L34 8.5M60.5 8.5L96 8.5\"\/>\n    <\/g>\n  <\/g>\n<\/svg>\n<p>I created this SVG using sketch. As I don't know SVG intimately, I opted for creating a starting point(the image above),\nand an endpoint (the following): <\/p>\n<pre><code class=\"language-xml\">&lt;svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" width=\"101\" height=\"78\" viewBox=\"0 0 101 78\"&gt;\n  &lt;g fill=\"none\" fill-rule=\"evenodd\" stroke=\"#000\" stroke-width=\"4\"&gt;\n    &lt;g id=\"bar-top\"&gt;\n      &lt;circle cx=\"68.5\" cy=\"8.5\" r=\"6.5\"\/&gt;\n      &lt;path stroke-linecap=\"round\" d=\"M.5 8.5L61 8.5M88 8.5L97 8.5\"\/&gt;\n    &lt;\/g&gt;\n    &lt;g id=\"bar-middle\" transform=\"translate(0 30)\"&gt;\n      &lt;circle cx=\"26.5\" cy=\"8.5\" r=\"6.5\"\/&gt;\n      &lt;path stroke-linecap=\"round\" d=\"M.5 8.5L19 8.5M46 8.5L97 8.5\"\/&gt;\n    &lt;\/g&gt;\n    &lt;g id=\"bar-bottom\" transform=\"translate(1 61)\"&gt;\n      &lt;circle cx=\"52.5\" cy=\"8.5\" r=\"6.5\"\/&gt;\n      &lt;path stroke-linecap=\"round\" d=\"M.5 8.5L45 8.5M71 8.5L96 8.5\"\/&gt;\n    &lt;\/g&gt;\n  &lt;\/g&gt;\n&lt;\/svg&gt;<\/code><\/pre>\n<svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" width=\"101\" height=\"78\" viewBox=\"0 0 101 78\">\n  <g fill=\"none\" fill-rule=\"evenodd\" stroke=\"#000\" stroke-width=\"4\">\n    <g id=\"bar-top\">\n      <circle cx=\"68.5\" cy=\"8.5\" r=\"6.5\"\/>\n      <path stroke-linecap=\"round\" d=\"M.5 8.5L61 8.5M88 8.5L97 8.5\"\/>\n    <\/g>\n    <g id=\"bar-middle\" transform=\"translate(0 30)\">\n      <circle cx=\"26.5\" cy=\"8.5\" r=\"6.5\"\/>\n      <path stroke-linecap=\"round\" d=\"M.5 8.5L19 8.5M46 8.5L97 8.5\"\/>\n    <\/g>\n    <g id=\"bar-bottom\" transform=\"translate(1 61)\">\n      <circle cx=\"52.5\" cy=\"8.5\" r=\"6.5\"\/>\n      <path stroke-linecap=\"round\" d=\"M.5 8.5L45 8.5M71 8.5L96 8.5\"\/>\n    <\/g>\n  <\/g>\n<\/svg>\n<p>This way I could compare the the path values and then easily transition from one to the other.<\/p>\n<p>Transitioning the SVG \u2013 or more specifically, the paths \u2013 can be done using CSS like so:<\/p>\n<pre><code class=\"language-scss\">svg:hover {\n  #bar-top {\n    circle { transform: translateX(40px); }\n    path { d: path(\"M.5 8.5L61 8.5M88 8.5L97 8.5\"); }\n  }\n  #bar-middle {\n    circle { transform: translateX(-27px); }\n    path { d: path(\"M.5 8.5L19 8.5M46 8.5L97 8.5\");\n    }\n  }\n  #bar-bottom {\n    circle { transform: translateX(20px); }\n    path { d: path(\"M.5 8.5L45 8.5M71 8.5L96 8.5\"); }\n  }\n}<\/code><\/pre>\n<h2>Example<\/h2>\n<p class=\"codepen\" data-height=\"300\" data-theme-id=\"36048\" data-default-tab=\"result\" data-user=\"triss90\" data-slug-hash=\"EJrKpV\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid black; margin: 1em 0; padding: 1em;\" data-pen-title=\"Animated SVG settings icon\">\n  <span>See the Pen <a href=\"https:\/\/codepen.io\/triss90\/pen\/EJrKpV\/\">\n  Animated SVG settings icon<\/a> by Tristan  White (<a href=\"https:\/\/codepen.io\/triss90\">@triss90<\/a>)\n  on <a href=\"https:\/\/codepen.io\">CodePen<\/a>.<\/span>\n<\/p>\n<script async src=\"https:\/\/static.codepen.io\/assets\/embed\/ei.js\"><\/script>"],["HTML Details\/Summary","html-details-summary","02\/05\/2019","html, css","2019\/05\/02\/html-details-summary\/","<h1>HTML Details\/Summary<\/h1>\n<p class='timestamp'><time datetime='02-05-2019'>02-05-2019<\/time><\/p>\n<hr>\n<p>Making a dropdown can be tricky. Here's an easy, albeit not fully supported, way of making a html dropdown:<\/p>\n<pre><code class=\"language-html\">&lt;details&gt;\n    &lt;summary&gt;Dropdown&lt;\/summary&gt;\n    &lt;div&gt;Lorem ipsum dolor sit amet consectetur adipisicing elit. Cumque impedit in consectetur facere recusandae iure voluptatem quas nostrum, harum quasi qui magni, adipisci, obcaecati esse nisi itaque doloribus ab ullam.&lt;\/div&gt;\n&lt;\/details&gt;<\/code><\/pre>\n<p><strong>Result:<\/strong><\/p>\n<details>\n    <summary>Dropdown<\/summary>\n    <div>Lorem ipsum dolor sit amet consectetur adipisicing elit. Cumque impedit in consectetur facere recusandae iure voluptatem quas nostrum, harum quasi qui magni, adipisci, obcaecati esse nisi itaque doloribus ab ullam.<\/div>\n<\/details>\n<p>You can force the dropdown state <em>open<\/em> like so: <code>&lt;details open&gt;...&lt;\/details&gt;<\/code><\/p>\n<p>Interestingly, you can even manipulate the dropdown triangle indicator with css. Here's an example:<\/p>\n<pre><code class=\"language-css\">details summary::-webkit-details-marker {\n    display: none;\n}\ndetails summary:after {\n    content: \"+\"; \n}\ndetails[open] summary:after {\n    content: \"-\";\n}<\/code><\/pre>\n<p>The trick is to overwrite the default styles with <code>::-webkit-details-marker{}<\/code> and then again display the change in state with <code>details[open]<\/code>.<\/p>\n<p>Here's a full example:<\/p>\n<p class=\"codepen\" data-height=\"465\" data-theme-id=\"light\" data-default-tab=\"result\" data-user=\"triss90\" data-slug-hash=\"PgrzvQ\" style=\"height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid black; margin: 1em 0; padding: 1em;\" data-pen-title=\"HTML Details\/Summary\">\n  <span>See the Pen <a href=\"https:\/\/codepen.io\/triss90\/pen\/PgrzvQ\/\">\n  HTML Details\/Summary<\/a> by Tristan  White (<a href=\"https:\/\/codepen.io\/triss90\">@triss90<\/a>)\n  on <a href=\"https:\/\/codepen.io\">CodePen<\/a>.<\/span>\n<\/p>\n<script async src=\"https:\/\/static.codepen.io\/assets\/embed\/ei.js\"><\/script>\n<p>This awesome feature, does suffer from a lack of support in some key browsers though.<\/p>\n<p class=\"ciu_embed\" data-feature=\"details\" data-periods=\"future_1,current,past_1,past_2\" data-accessible-colours=\"false\">\n  <a href=\"https:\/\/caniuse.com\/#feat=details\">The details element generates a simple no-JavaScript widget to show\/hide element contents, optionally by clicking on its child summary element.<\/a>\n<\/p>\n<script src=\"https:\/\/cdn.jsdelivr.net\/gh\/ireade\/caniuse-embed\/caniuse-embed.min.js\"><\/script>"],["Creating a JS Library","creating-a-js-library","15\/05\/2019","js","2019\/05\/15\/creating-a-js-library\/","<h1>Creating a JS Library<\/h1>\n<p class='timestamp'><time datetime='15-05-2019'>15-05-2019<\/time><\/p>\n<hr>\n<p>Lately I've been dabbling in JS libraries. Specifically I've been trying my hand at creating a few.<\/p>\n<ul>\n<li><a href=\"https:\/\/github.com\/triss90\/muds.io\">Muds<\/a> - A simple, open source WYSIWYG editor<\/li>\n<li><a href=\"https:\/\/github.com\/triss90\/dotbot\">DobBot<\/a> - A framework for creating a randomized, dotted background pattern.<\/li>\n<\/ul>\n<p>While I don't claim to be an expert on the field. I did learn a thing or two in the process.<\/p>\n<h2>The dream!<\/h2>\n<pre><code class=\"language-javascript\">var instance = new myLibrary({\n  selector: \"#selector\",\n  anOption: 123,\n  anotherOption: \"Some option\"\n)};<\/code><\/pre>\n<p>The example above is a brilliant way of initializing a new instance of a library or module. My initial goal was create something that would adhere to this format.<\/p>\n<p>I found that It would take 3 simple steps.<\/p>\n<ul>\n<li>Create some way of handling initial settings or options<\/li>\n<li>Figure out a way of overwriting these<\/li>\n<li>Write the library logic itself<\/li>\n<\/ul>\n<h2>Creating the library<\/h2>\n<p>Start out by creating a new self invoking function like so<\/p>\n<pre><code class=\"language-javascript\">(function(){\n\n})();<\/code><\/pre>\n<p>Next step is to name the library, thus making it globally accessible: <code>window.myLib = myLib;<\/code><\/p>\n<p>You can now initialize the library like so<\/p>\n<pre><code class=\"language-html\">&lt;script src=\"path\/to\/my\/library.js\"&gt;&lt;\/script&gt;\n&lt;script&gt;\n    var instance = new myLib({\n\n    )};\n&lt;\/script&gt;<\/code><\/pre>\n<p>next we need to add some default options<\/p>\n<pre><code class=\"language-javascript\">(function(){\n    myLib.defaults = {\n        selector: '',\n        text: 'Hello World!',\n        color: 'black'\n    };\n    window.myLib = myLib;\n})();<\/code><\/pre>\n<p>With our default options in place. It's time to write the logic that'll merge our user-defined options with the defaults<\/p>\n<pre><code class=\"language-javascript\">(function(){\n    const myLib = function(opts) {\n        \/\/ Merge default options with user options\n        this.options = Object.assign(myLib.defaults, opts);\n\n        \/\/ Define merged options\n        this.selector = document.querySelector(this.options.selector);\n        this.text = this.options.text;\n        this.color = this.options.color;\n    }\n    myLib.defaults = {...};\n    window.myLib = myLib;\n})();<\/code><\/pre>\n<p>With this in place, all there's left to do, is to write the library logic itself. <\/p>\n<p>This demo library simply prints a text.<\/p>\n<pre><code class=\"language-javascript\">(function(){\n    const myLib = function(opts) {...}\n\n    \/\/ library logic\n    myLib.prototype.init = function() {     \n        this.selector.style.color = this.color;\n        this.selector.innerHTML = this.text;\n    };\n\n    myLib.defaults = {...};\n    window.myLib = myLib;\n})();<\/code><\/pre>\n<p>Now you can run the init function and you're all set!<\/p>\n<pre><code class=\"language-javascript\">(function(){\n    const myLib = function(opts) {\n        ...\n        this.init();\n    }\n\n    myLib.prototype.init = function() {...};\n    myLib.defaults = {...};\n    window.myLib = myLib;\n})();<\/code><\/pre>\n<h2>User options<\/h2>\n<p>The user can overwrite our default options when initializing the library like this:<\/p>\n<pre><code class=\"language-html\">&lt;script src=\"path\/to\/my\/library.js\"&gt;&lt;\/script&gt;\n&lt;script&gt;\n    var instance = new myLib({\n        selector: '#myLibrary',\n        text: 'Hello Earth!',\n        color: 'red'\n    )};\n&lt;\/script&gt;<\/code><\/pre>\n<h2>Browser support<\/h2>\n<p>While <code>Object.assign()<\/code> is amazing, it's not supported by Internet Explorer 11. So if you need to support IE11 you'll have to merge the options manually. \nMerging the the options can be done by looping through the attributes like this:<\/p>\n<pre><code class=\"language-javascript\">function merge_options(defaults,user_options) {\n    let new_options = {};\n    let attrname;\n    for (attrname in defaults) {\n        new_options[attrname] = defaults[attrname];\n    }\n    for (attrname in user_options) {\n        new_options[attrname] = user_options[attrname];\n    }\n    return new_options;\n}\nthis.options = merge_options(myLib.defaults, opts);<\/code><\/pre>\n<p>Simply replace the following with the example above<\/p>\n<pre><code class=\"language-javascript\">this.options = Object.assign(myLib.defaults, opts);<\/code><\/pre>\n<h2>Example<\/h2>\n<p class=\"codepen\" data-height=\"265\" data-theme-id=\"light\" data-default-tab=\"html,result\" data-user=\"triss90\" data-slug-hash=\"afd2a9184f4c76b101c916937c415075\" style=\"height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"JS Library example\">\n  <span>See the Pen <a href=\"https:\/\/codepen.io\/triss90\/pen\/afd2a9184f4c76b101c916937c415075\/\">\n  JS Library example<\/a> by Tristan  White (<a href=\"https:\/\/codepen.io\/triss90\">@triss90<\/a>)\n  on <a href=\"https:\/\/codepen.io\">CodePen<\/a>.<\/span>\n<\/p>\n<script async src=\"https:\/\/static.codepen.io\/assets\/embed\/ei.js\"><\/script>"],["Encode\/Decode HTML","encode-decode-html","01\/06\/2019","html, js","2019\/06\/01\/encode-decode-html\/","<h1>Encode\/Decode HTML<\/h1>\n<p class='timestamp'><time datetime='01-06-2019'>01-06-2019<\/time><\/p>\n<hr>\n<p>If you want to display html code on a website, you can't just type a <code>&lt;<\/code> in you index.html and expect it to show up. You have to use an equivalent html entity instead.<\/p>\n<h2>Client-side (Javascript)<\/h2>\n<p>The following javascript function is a handy way of encoding and decoding html, so you can display the code on your website.<\/p>\n<pre><code class=\"language-javascript\">window.htmlentities = {\n    encode : function(str) {\n        var buf = [];\n        for (var i=str.length-1;i&gt;=0;i--) {\n            buf.unshift(['&amp;#', str[i].charCodeAt(), ';'].join(''));\n        }\n        return buf.join('');\n    },\n    decode : function(str) {\n        return str.replace(\/&amp;#(\\d+);\/g, function(match, dec) {\n            return String.fromCharCode(dec);\n        });\n    }\n};<\/code><\/pre>\n<h3>Encode<\/h3>\n<pre><code class=\"language-javascript\">htmlentities.encode(\"Hello, this is a test str\u00edng &gt; &lt; with characters that could break html. Therefore we convert it to its html characters.\");<\/code><\/pre>\n<p><strong>Output:<\/strong>\n<em>\"Hello, this is a test str<code>&amp;#237;<\/code>ng <code>&amp;gt;<\/code> <code>&amp;lt;<\/code> with characters that could break html. Therefore we convert it to its html characters.\"<\/em><\/p>\n<h3>Decode<\/h3>\n<pre><code class=\"language-javascript\">htmlentities.decode(\"Hello, this is a test str&amp;#237;ng &amp;gt; &amp;lt; with characters that could break html. Therefore we convert it to its html characters.\");<\/code><\/pre>\n<p><strong>Output:<\/strong>\n<em>\"Hello, this is a test str\u00edng &gt; &lt; with characters that could break html. Therefore we convert it to its html characters.\"<\/em><\/p>\n<h2>Server-side (PHP)<\/h2>\n<p>If you need to convert html entities serverside, this can easily be done with PHP like so:<\/p>\n<pre><code class=\"language-PHP\">&lt;?php\n    $converted_html = htmlspecialchars(\"&lt;a href='test'&gt;Test&lt;\/a&gt;\", ENT_QUOTES);\n    echo $converted_html; \/\/ &amp;lt;a href=&amp;#039;test&amp;#039;&amp;gt;Test&amp;lt;\/a&amp;gt;\n?&gt;<\/code><\/pre>"],["Maintaining Aspect Ratio","maintaining-aspect-ration","07\/06\/2019","css","2019\/06\/07\/maintaining-aspect-ration\/","<h1>Maintaining Aspect Ratio<\/h1>\n<p class='timestamp'><time datetime='07-06-2019'>07-06-2019<\/time><\/p>\n<hr>\n<p>So, maintaining aspect ratio on a responsive element is surprisingly easy!\nYou know how adding <code>padding-top: 50%<\/code> does not actually add 50% of the original height of the element as padding?\nRather it adds 50% of the width of the parent element! <\/p>\n<p>With this in mind we can quickly force elements to maintain their aspect ratio when being resized:<\/p>\n<pre><code class=\"language-css\">.element {\n  width: 100%;\n  padding-bottom: 100%;\n  height: 0;\n}<\/code><\/pre>\n<p>I use this trick on <a href=\"https:\/\/colordrop.io\">colordrop.io<\/a>, to maintain the aspect ratio of the color palettes.<\/p>\n<p><strong>Here's a quick example from <a href=\"https:\/\/colordrop.io\">colordrop.io<\/a>:<\/strong><\/p>\n<p class=\"codepen\" data-height=\"465\" data-theme-id=\"light\" data-default-tab=\"html,result\" data-user=\"triss90\" data-slug-hash=\"ZNOyem\" style=\"height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"Aspect Ratio Example\">\n  <span>See the Pen <a href=\"https:\/\/codepen.io\/triss90\/pen\/ZNOyem\/\">\n  Aspect Ratio Example<\/a> by Tristan  White (<a href=\"https:\/\/codepen.io\/triss90\">@triss90<\/a>)\n  on <a href=\"https:\/\/codepen.io\">CodePen<\/a>.<\/span>\n<\/p>\n<script async src=\"https:\/\/static.codepen.io\/assets\/embed\/ei.js\"><\/script>"],["A Guide to Hex","a-guide-to-hex","12\/06\/2019","js, css","2019\/06\/12\/a-guide-to-hex\/","<h1>A Guide to Hex<\/h1>\n<p class='timestamp'><time datetime='12-06-2019'>12-06-2019<\/time><\/p>\n<hr>\n<p>Hex code is one way to communicate a color value to the browser, and in turn to the computer.\nHex is surprisingly similar to HSL and RGB, though at first sight it may not look like it.<\/p>\n<h2>Syntax<\/h2>\n<p>Hex: <code>#f2317f<\/code><\/p>\n<p>RGB: <code>rgb(242,49,127)<\/code><\/p>\n<p>HSL: <code>hsl(336%,88%,57%)<\/code><\/p>\n<p>The syntax of both RGB and HSL are very descriptive and easy to read. \nIt's easily deduced that, the RGB color listed above contains more red(242) than it does green(49),\nLeading to the conclusion that the color might lean towards the red side of the colorwheel.<\/p>\n<p>Hex codes are comprised of 6 values that are part of the hexadecimal system, or base 16. \nInstead of the 10 values we're used to with the decimal system(0-9), there are 16 (0-9 and A-F). <\/p>\n<p>Each of the hexadecimal values represent a decimal value:<\/p>\n<ul>\n<li>0: 0<\/li>\n<li>1: 1 <\/li>\n<li>2: 2<\/li>\n<li>3: 3<\/li>\n<li>4: 4<\/li>\n<li>5: 5<\/li>\n<li>6: 6<\/li>\n<li>7: 7<\/li>\n<li>8: 8<\/li>\n<li>9: 9<\/li>\n<li>A: 10<\/li>\n<li>B: 11<\/li>\n<li>C: 12<\/li>\n<li>D: 13<\/li>\n<li>E: 14<\/li>\n<li>F: 15<\/li>\n<\/ul>\n<p>The 6 values that comprise the Hex color code can be further divided into 3 value pairs.\nThe first pair defines the red amount. \nThe second pair defines the green amount. And you guessed it, \nthe last pair defines the blue amount. This sounds a lot like RGB, doesn't it?<\/p>\n<h2>#<span style=\"background:#f5c9c9;color:#e57373;padding:0 0.5rem;\">f2<\/span><span style=\"background:#ebf6ec;color:#a5d6a7;padding:0 0.5rem;\">31<\/span><span style=\"background:#e3f5fe;color:#81d4fa;padding:0 0.5rem;\">7f<\/span><\/h2>\n<h2>Converting Hex to RGB<\/h2>\n<p>Knowing that hex color codes are just pairs of values that represent red, green and blue amounts, \nwe can go ahead and convert these to their decimal counterparts.<\/p>\n<h3>Let's convert <code>#f2317f<\/code><\/h3>\n<p>We start by dividing it into its three pairs: <code>f2<\/code>, <code>31<\/code>, <code>7f<\/code>.\nConverting hexadecimal numbers to decimal is done using the following equation: <\/p>\n<pre><code>decimal = hex_value * (16 ^ position)<\/code><\/pre>\n<p>The Hex value is translated using the table above. E.g. <code>d<\/code> = <code>13<\/code>.<\/p>\n<p>To find the position, we start by assigning positional values to the first pair <code>f2<\/code>. \nWe do this from <strong>right<\/strong> to <strong>left<\/strong>. So <strong>2<\/strong> is assigned the value <code>0<\/code> and <strong>f<\/strong> is assigned the value <code>1<\/code>.<\/p>\n<h3>Example<\/h3>\n<pre><code>f: 15 * (16\u00b9) = 240\n2: 2 * (16\u2070) = 2<\/code><\/pre>\n<p>We now have two new values, <code>240<\/code> and <code>2<\/code>. The last step is to add these to values, which gives us 242. This is our new decimal value for the first hex pair.\nIn other words, this is our \"red\" value. <\/p>\n<p>Rinse and repeat, and we end up with <code>rgb(242,49,127)<\/code>.<\/p>\n<p>I've made a handy script to easily convert Hex to RGB:<\/p>\n<pre><code class=\"language-javascript\">function hexToRgb(input) {\n    const base16 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\n    const hex = input.split(\"\");\n    let r = hex.splice(0,2);\n    r = parseInt(base16[r[0]], 10)*(Math.pow(16, 1))+parseInt(base16[r[1]], 10)*(Math.pow(16, 0));\n    let g = hex.splice(0,2);\n    g = parseInt(base16[g[0]], 10)*(Math.pow(16, 1))+parseInt(base16[g[1]], 10)*(Math.pow(16, 0));\n    let b = hex.splice(0,2);\n    b = parseInt(base16[b[0]], 10)*(Math.pow(16, 1))+parseInt(base16[b[1]], 10)*(Math.pow(16, 0));\n    return {\n        'r': r,\n        'g': g,\n        'b': b,\n    };\n}\n\nconst rgb = hexToRgb('f06d06');\nconsole.log(rgb['r'],rgb['g'],rgb['b']);<\/code><\/pre>\n<p>Here's a live example of the script in action:<\/p>\n<p class=\"codepen\" data-height=\"265\" data-theme-id=\"light\" data-default-tab=\"js,result\" data-user=\"triss90\" data-slug-hash=\"GbRdZx\" style=\"height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"hex to rgb\">\n  <span>See the Pen <a href=\"https:\/\/codepen.io\/triss90\/pen\/GbRdZx\/\">\n  hex to rgb<\/a> by Tristan  White (<a href=\"https:\/\/codepen.io\/triss90\">@triss90<\/a>)\n  on <a href=\"https:\/\/codepen.io\">CodePen<\/a>.<\/span>\n<\/p>\n<script async src=\"https:\/\/static.codepen.io\/assets\/embed\/ei.js\"><\/script>"],["Breaking Max Width","breaking-max-width","23\/06\/2019","css","2019\/06\/23\/breaking-max-width\/","<h1>Breaking Max Width<\/h1>\n<p class='timestamp'><time datetime='23-06-2019'>23-06-2019<\/time><\/p>\n<hr>\n<p>Not every problem requires a complex solution! Today I want to show you a technique for breaking \nan image out of it\u2019s parent container using only CSS. Yep that's right, no Javascript is involved.<\/p>\n<p>But first, what am I talking about? <\/p>\n<p>The following image breaks its parent's container, which is centered and takes up a maximum of 32rems.<\/p>\n<style>\n.full-width {\n  width: 100vw;\n  position: relative;\n  left: 50%;\n  transform: translateX(-50%);\n}\n<\/style>\n<img src=\"https:\/\/triss.dev\/assets\/img\/blog\/example-pattern.jpg\" alt=\"abstract turquoise wave pattern\" class=\"full-width\">\n<p>There are a few ways of achieving this effect. <\/p>\n<p>You can dynamically calculate the difference and push the image to one side(This was my goto solution when first trying to solve this problem).<\/p>\n<pre><code class=\"language-css\">.full-width {\n    width: 100vw;\n    position: relative;\n    \/\/ 32rem is the width of the parent container. \n    \/\/ This could be set with an SCSS variable or CSS custom property.\n    left: calc(-50vw + (32rem \/ 2));\n    @media(max-width: 32rem) {\n        left: 0;\n    }\n}<\/code><\/pre>\n<p>Luckily there are a few other ways of achieving the same effect. Some a lot more elegant than my solution above.\nHere's an example by <a href=\"https:\/\/twitter.com\/Una\" target=\"_blank\" rel=\"noopener\">Una Kravets<\/a>:<\/p>\n<pre><code class=\"language-css\">.full-width {\n    left: 50%;\n    margin-left: -50vw;\n    margin-right: -50vw;\n    max-width: 100vw;\n    position: relative;\n    right: 50%;\n    width: 100vw;\n}<\/code><\/pre>\n<p>Playing around with that concept. Here's another similar solution, though expressed a bit more succinctly<\/p>\n<pre><code class=\"language-css\">.full-width {\n  width: 100vw;\n  position: relative;\n  left: 50%;\n  transform: translateX(-50%);\n}<\/code><\/pre>\n<h2>Example<\/h2>\n<p class=\"codepen\" data-height=\"265\" data-theme-id=\"light\" data-default-tab=\"result\" data-user=\"triss90\" data-slug-hash=\"arPLGG\" style=\"height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"Blogpost image - breaking max width\">\n  <span>See the Pen <a href=\"https:\/\/codepen.io\/triss90\/pen\/arPLGG\/\">\n  Blogpost image - breaking max width<\/a> by Tristan  White (<a href=\"https:\/\/codepen.io\/triss90\">@triss90<\/a>)\n  on <a href=\"https:\/\/codepen.io\">CodePen<\/a>.<\/span>\n<\/p>\n<script async src=\"https:\/\/static.codepen.io\/assets\/embed\/ei.js\"><\/script>"],["Converting Color Codes","converting-color-codes","02\/07\/2019","php","2019\/07\/02\/converting-color-codes\/","<h1>Converting Color Codes<\/h1>\n<p class='timestamp'><time datetime='02-07-2019'>02-07-2019<\/time><\/p>\n<hr>\n<p>I run <a href=\"https:\/\/colordrop.io\">colordrop.io<\/a>, a curated color management webapp. With that comes a need for converting colors to and from different formats. \nThe following is a simple collection of PHP scripts I use when converting color codes.<\/p>\n<h2>RGB to HEX<\/h2>\n<pre><code class=\"language-php\">function rgbToHex($R, $G, $B) {\n    $R = dechex($R);\n    if (strlen($R)&lt;2)\n    $R = '0'.$R;\n    $G = dechex($G);\n    if (strlen($G)&lt;2)\n    $G = '0'.$G;\n    $B = dechex($B);\n    if (strlen($B)&lt;2)\n    $B = '0'.$B;\n    return '#' . $R . $G . $B;\n}\n\/\/ Example\nrgbToHex(240, 109, 6);<\/code><\/pre>\n<p>HEX output: <code>#f06d06<\/code><\/p>\n<h2>RGB to CMYK<\/h2>\n<pre><code class=\"language-php\">function rgbToCmyk($var1,$g=0,$b=0) {\n    if (is_array($var1)) {\n        $r = $var1['r'];\n        $g = $var1['g'];\n        $b = $var1['b'];\n    } else {\n        $r = $var1;\n    }\n    $cyan = 255 - $r;\n    $magenta = 255 - $g;\n    $yellow = 255 - $b;\n    $black = min($cyan, $magenta, $yellow);\n    $cyan = @(($cyan    - $black) \/ (255 - $black));\n    $magenta = @(($magenta - $black) \/ (255 - $black));\n    $yellow = @(($yellow  - $black) \/ (255 - $black));\n    return array(\n        'c' =&gt; $cyan,\n        'm' =&gt; $magenta,\n        'y' =&gt; $yellow,\n        'k' =&gt; $black,\n    );\n}\n\/\/ Example\nrgbToCmyk(240, 109, 6);<\/code><\/pre>\n<p>CMYK output: <code>0, 0.5458333333333333, 0.975, 0.05882352941176472<\/code><\/p>\n<h2>RGB to HSV<\/h2>\n<pre><code class=\"language-php\">function rgbToHsv($R, $G, $B) { \n    $HSL = array();\n\n    $var_R = ($R \/ 255);\n    $var_G = ($G \/ 255);\n    $var_B = ($B \/ 255);\n\n    $var_Min = min($var_R, $var_G, $var_B);\n    $var_Max = max($var_R, $var_G, $var_B);\n    $del_Max = $var_Max - $var_Min;\n\n    $V = $var_Max;\n\n    if ($del_Max == 0) {\n        $H = 0;\n        $S = 0;\n    } else {\n        $S = $del_Max \/ $var_Max;\n\n        $del_R = ((($var_Max - $var_R) \/ 6) + ($del_Max \/ 2)) \/ $del_Max;\n        $del_G = ((($var_Max - $var_G) \/ 6) + ($del_Max \/ 2)) \/ $del_Max;\n        $del_B = ((($var_Max - $var_B) \/ 6) + ($del_Max \/ 2)) \/ $del_Max;\n\n        if ($var_R == $var_Max) $H = $del_B - $del_G;\n        else if ($var_G == $var_Max) $H = (1 \/ 3) + $del_R - $del_B;\n        else if ($var_B == $var_Max) $H = (2 \/ 3) + $del_G - $del_R;\n\n        if ($H &lt; 0) $H++;\n        if ($H &gt; 1) $H--;\n    }\n\n    $HSL['H'] = $H;\n    $HSL['S'] = $S;\n    $HSL['V'] = $V;\n\n    return $HSL;\n}\n\/\/ Example\nrgbToHsv(240, 109, 6);<\/code><\/pre>\n<p>HSV output: <code>26, 98, 94<\/code><\/p>\n<h2>HEX to HSL<\/h2>\n<pre><code class=\"language-php\">function hexToHsl($hex) {\n    $hex = array($hex[0].$hex[1], $hex[2].$hex[3], $hex[4].$hex[5]);\n    $rgb = array_map(function($part) {\n        return hexdec($part) \/ 255;\n    }, $hex);\n\n    $max = max($rgb);\n    $min = min($rgb);\n\n    $l = ($max + $min) \/ 2;\n\n    if ($max == $min) {\n        $h = $s = 0;\n    } else {\n        $diff = $max - $min;\n        $s = $l &gt; 0.5 ? $diff \/ (2 - $max - $min) : $diff \/ ($max + $min);\n\n        switch($max) {\n            case $rgb[0]:\n                $h = ($rgb[1] - $rgb[2]) \/ $diff + ($rgb[1] &lt; $rgb[2] ? 6 : 0);\n                break;\n            case $rgb[1]:\n                $h = ($rgb[2] - $rgb[0]) \/ $diff + 2;\n                break;\n            case $rgb[2]:\n                $h = ($rgb[0] - $rgb[1]) \/ $diff + 4;\n                break;\n        }\n\n        $h \/= 6;\n    }\n\n    return \"$h, $s, $l\";\n}\n\n\/\/ Example\nhexToHsl(f06d06);<\/code><\/pre>\n<p>HSL output: <code>26, 95, 48<\/code><\/p>\n<h2>HEX to RGB<\/h2>\n<pre><code class=\"language-php\">function hexToRgb($hex, $alpha = false) {\n    $hex = str_replace('#', '', $hex);\n    $length = strlen($hex);\n    $rgb['r'] = hexdec($length == 6 ? substr($hex, 0, 2) : ($length == 3 ? str_repeat(substr($hex, 0, 1), 2) : 0));\n    $rgb['g'] = hexdec($length == 6 ? substr($hex, 2, 2) : ($length == 3 ? str_repeat(substr($hex, 1, 1), 2) : 0));\n    $rgb['b'] = hexdec($length == 6 ? substr($hex, 4, 2) : ($length == 3 ? str_repeat(substr($hex, 2, 1), 2) : 0));\n    if ( $alpha ) {\n        $rgb['a'] = $alpha;\n    }\n    \/\/ return $rgb;\n    return implode(array_keys($rgb)) . '(' . implode(', ', $rgb) . ')';\n}\n\/\/ Example\nhexToRgb(f06d06);<\/code><\/pre>\n<p>RGB output: <code>240, 109, 6<\/code><\/p>"],["HTML Input Patterns","html-input-patterns","17\/07\/2019","html","2019\/07\/17\/html-input-patterns\/","<h1>Input patterns<\/h1>\n<p class='timestamp'><time datetime='17-07-2019'>17-07-2019<\/time><\/p>\n<hr>\n<p>Here's a handy list of useful html input patterns. Ranging from password requirements to IP filters and currency requirements.<\/p>\n<h2>IPv4 Address<\/h2>\n<pre><code class=\"language-html\">&lt;input type=\u201ctext\u201d name=\u201cipv4\u201d pattern=\"((^|\\.)((25[0-5])|(2[0-4]\\d)|(1\\d\\d)|([1-9]?\\d))){4}$\" required&gt;<\/code><\/pre>\n<h2>IPv6 Address<\/h2>\n<pre><code class=\"language-html\">&lt;input type=\u201ctext\u201d name=\u201cipv6\u201d pattern=\"((^|:)([0-9a-fA-F]{0,4})){1,8}$\" required&gt;<\/code><\/pre>\n<h2>Password<\/h2>\n<pre><code class=\"language-html\">&lt;input type=\u201cpassword\u201d name=\u201cpassword\u201d pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}\" required&gt;<\/code><\/pre>\n<p>Must contain at least one number and one uppercase and lowercase letter, and at least 8 or more characters<\/p>\n<h2>Domains like \u201cabc.de\u201d<\/h2>\n<pre><code class=\"language-html\">&lt;input type=\u201ctext\u201d name=\u201cdomain\u201d pattern=\"^([a-zA-Z0-9]([a-zA-Z0-9\\-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z]{2,6}$\" required&gt;<\/code><\/pre>\n<h2>Numbers with or without decimals<\/h2>\n<pre><code class=\"language-html\">&lt;input type=\u201ctext\u201d name=\u201cnumber\u201d pattern=\"[-+]?[0-9]*[.,]?[0-9]+\" required&gt;<\/code><\/pre>\n<p>Format: 9 or 9.9 or 9,9<\/p>\n<h2>UUID<\/h2>\n<pre><code class=\"language-html\">&lt;input type=\u201ctext\u201d name=\u201cuuid\u201d pattern=\"^[0-9A-Fa-f]{8}\\-[0-9A-Fa-f]{4}\\-[0-9A-Fa-f]{4}\\-[0-9A-Fa-f]{4}\\-[0-9A-Fa-f]{12}$\" required&gt;<\/code><\/pre>\n<h2>Latitude or Longitude<\/h2>\n<pre><code class=\"language-html\">&lt;input type=\u201ctext\u201d name=\u201clong-lat\u201d pattern=\"-?\\d{1,3}\\.\\d+\" required&gt;<\/code><\/pre>\n<h2>Price (Format: 1.00)<\/h2>\n<pre><code class=\"language-html\">&lt;input type=\u201ctext\u201d name=\u201cprice\u201d pattern=\"\\d+(\\.\\d{2})?\" required&gt;<\/code><\/pre>\n<h2>Price (Format: 1,00)<\/h2>\n<pre><code class=\"language-html\">&lt;input type=\u201ctext\u201d name=\u201cprice\u201d pattern=\"\\d+(,\\d{2})?\" required&gt;<\/code><\/pre>\n<h2>ISBN<\/h2>\n<pre><code class=\"language-html\">&lt;input type=\u201ctext\u201d name=\u201cisbn\u201d pattern=\"(?:(?=.{17}$)97[89][ -](?:[0-9]+[ -]){2}[0-9]+[ -][0-9]|97[89][0-9]{10}|(?=.{13}$)(?:[0-9]+[ -]){2}[0-9]+[ -][0-9Xx]|[0-9]{9}[0-9Xx])\" required&gt;<\/code><\/pre>\n<h2>Md5 Hash<\/h2>\n<pre><code class=\"language-html\">&lt;input type=\u201ctext\u201d name=\u201cmd5\u201d pattern=\"[0-9a-fA-F]{32}\" required&gt;<\/code><\/pre>"],["Hiding Text in Images","hiding-text-in-images","30\/07\/2019","security","2019\/07\/30\/hiding-text-in-images\/","<h1>Hiding Text in Images<\/h1>\n<p class='timestamp'><time datetime='30-07-2019'>30-07-2019<\/time><\/p>\n<hr>\n<p>The best way to hide sensitive information is usually to hide it in plain sight. \nA wonderful way to do this, in an increasingly online world, is to simply embed sensitive text information \ninside one of the possibly thousands of images you already have.<\/p>\n<p>There are many online tools for this, but why go through the trouble, \nand possible security risks by uploading your images, when you can simply do it on your own computer.<\/p>\n<h2>Mac<\/h2>\n<p>To easily combine two files on macOS simply use the <code>cat<\/code> command like so:<\/p>\n<pre><code class=\"language-cmd\">cat image.jpg text.txt &gt; hidden.jpg<\/code><\/pre>\n<p>To the untrained eye, the image will look no different than before.\nTo see the hidden text, simply inspect the image in a text editor and scroll to the bottom.<\/p>\n<pre><code class=\"language-text\">...\n...\n...\nA\u201a[\u2021\u2020's=\u0007\u0010_5\u00f7K\ufb02I\ufb02\u0131\u221e\"m\u25ca\u00cd\u000f\u001cq\u00c4\u00f8\u00f5\u201d9\u00d9\u0002\u00e2%~\u0001\u00bfZb'[p\u0192\u00a1\u00d2`_\u03a9=\u001dh\u00fa?\u0153\u00c5\u2039W.\u00b7\u00af\u0192\u2260Fvgv\u2014\u00fa!\u2202\u001d;th\u201a\u00e0\u00b1U \u2018\u2030h\n\u00f5%\u00b6\u2039\u00db\ufb02\u001b6\u00a7\u00d5O\u2211\u00cc\u00ff\u00b7}W\u00e7\u001c{9\u0001\u00f3\u2022\u00ce\u00f6}\u00c7\u00d2\u001f,\u00a9[\u02dcZN\u00d3\u203a\u0007&gt;&lt;v,z\u2019\u00bb1[    t\u001f\u00c4l\u25caVk\u0003\u00a3;\u00f3\u2018\u2260]\u0178\ufb02\u000b\u00cf8~\u220fu\u201a\u00ae1:\u00c5nL\u00c1\u0192\u02d9\u00e0\u00b6\u0013\u00ca&lt;\u2211e\u201d'\u0005)\u0000\u0000`\u20ac\u00d2\u221ao^5jl\u000b\u0001\u00ec\u00c5dfS\u0016H\u0000\u00b8WN5\u00b8\u00c2g\u00cd\u00ce\u201d\u00d3\u00a7\u00f8\u00c1\u201aq\u00d8\u2202\u2122\u2039\u2026A\u0013 \u00bbJ\u00d80\u000e4\u00c7\u00af\u00c7\u2022\u00f5\u25caYb\u2019\u00db\u00ef\u00cc\u00ab\u000fr\u00c2\u00cb1+\u0019\u00df\u2014\u00bbNS\u0013\u001d\u00fa^ \u0152\u00f8\u220f\u00a7~\u00cc\u00e9\u00c5^l\u02da\u00b1\u221a\u00ce'\u00e7\u001a{\u0006\u00bf5\u00bb\u2264\u00b7\u00ef\u00c4\u203a\u0000\u203a\u00b5\u00a5n\u00cc\u00dc\u02c6\u00cc\u00acf\u00b7\u00cf\u0178\u00da\u00eb\u0010]\u00aeK\u02d9\u00cb\u00a5\u00b5T\u00b5A\u25cax\u00bf\u22609v-jx\u0153.\u00cc\/\u2260|}\u02c6l(\u00c6]\u2206 Uf\u00cd\u001e\u00a7\u0011\u25ca\u2020\u001c\\V\u00f8a?rV\u00f1h\u2021|\u02d8\u02d9\u00ce+\u2030\u00d14\u00fbIT\u00f1\u00e2\u00ces\u00f9\u0152FXl\u25ca\u00e4M\u00f5\u201c\u00fb\u00d8=g\u00ac\u0004\u00df\u00f8\u00a7\u00dar\u00cb\u00da .Y\u00db\u2265\u201d  \u201ePUb\u00aa\u00f3mZ}&lt;\u00ec\u02dc\u0011\b\u0004\u0005\u0192\u02c7\u0007&gt;\u2202\u0018\u00ef\u0192\u00a8\u00ef\n\u0000\u0000\u0000\u0000IEND\u00c6B`\u00c7This is a secrect text<\/code><\/pre>\n<h2>Windows<\/h2>\n<p>To easily combine two files on Windows simply use the <code>copy<\/code> command like so:<\/p>\n<pre><code class=\"language-cmd\">copy \/b image.jpg + text.txt hidden.jpg<\/code><\/pre>\n<p>As with the Mac, you won't be able to tell the difference between the images.\nTo see the hidden text, simply inspect the image in a text editor and scroll to the bottom.<\/p>\n<pre><code class=\"language-text\">...\n...\n...\nA\u201a[\u2021\u2020's=\u0007\u0010_5\u00f7K\ufb02I\ufb02\u0131\u221e\"m\u25ca\u00cd\u000f\u001cq\u00c4\u00f8\u00f5\u201d9\u00d9\u0002\u00e2%~\u0001\u00bfZb'[p\u0192\u00a1\u00d2`_\u03a9=\u001dh\u00fa?\u0153\u00c5\u2039W.\u00b7\u00af\u0192\u2260Fvgv\u2014\u00fa!\u2202\u001d;th\u201a\u00e0\u00b1U \u2018\u2030h\n\u00f5%\u00b6\u2039\u00db\ufb02\u001b6\u00a7\u00d5O\u2211\u00cc\u00ff\u00b7}W\u00e7\u001c{9\u0001\u00f3\u2022\u00ce\u00f6}\u00c7\u00d2\u001f,\u00a9[\u02dcZN\u00d3\u203a\u0007&gt;&lt;v,z\u2019\u00bb1[    t\u001f\u00c4l\u25caVk\u0003\u00a3;\u00f3\u2018\u2260]\u0178\ufb02\u000b\u00cf8~\u220fu\u201a\u00ae1:\u00c5nL\u00c1\u0192\u02d9\u00e0\u00b6\u0013\u00ca&lt;\u2211e\u201d'\u0005)\u0000\u0000`\u20ac\u00d2\u221ao^5jl\u000b\u0001\u00ec\u00c5dfS\u0016H\u0000\u00b8WN5\u00b8\u00c2g\u00cd\u00ce\u201d\u00d3\u00a7\u00f8\u00c1\u201aq\u00d8\u2202\u2122\u2039\u2026A\u0013 \u00bbJ\u00d80\u000e4\u00c7\u00af\u00c7\u2022\u00f5\u25caYb\u2019\u00db\u00ef\u00cc\u00ab\u000fr\u00c2\u00cb1+\u0019\u00df\u2014\u00bbNS\u0013\u001d\u00fa^ \u0152\u00f8\u220f\u00a7~\u00cc\u00e9\u00c5^l\u02da\u00b1\u221a\u00ce'\u00e7\u001a{\u0006\u00bf5\u00bb\u2264\u00b7\u00ef\u00c4\u203a\u0000\u203a\u00b5\u00a5n\u00cc\u00dc\u02c6\u00cc\u00acf\u00b7\u00cf\u0178\u00da\u00eb\u0010]\u00aeK\u02d9\u00cb\u00a5\u00b5T\u00b5A\u25cax\u00bf\u22609v-jx\u0153.\u00cc\/\u2260|}\u02c6l(\u00c6]\u2206 Uf\u00cd\u001e\u00a7\u0011\u25ca\u2020\u001c\\V\u00f8a?rV\u00f1h\u2021|\u02d8\u02d9\u00ce+\u2030\u00d14\u00fbIT\u00f1\u00e2\u00ces\u00f9\u0152FXl\u25ca\u00e4M\u00f5\u201c\u00fb\u00d8=g\u00ac\u0004\u00df\u00f8\u00a7\u00dar\u00cb\u00da .Y\u00db\u2265\u201d  \u201ePUb\u00aa\u00f3mZ}&lt;\u00ec\u02dc\u0011\b\u0004\u0005\u0192\u02c7\u0007&gt;\u2202\u0018\u00ef\u0192\u00a8\u00ef\n\u0000\u0000\u0000\u0000IEND\u00c6B`\u00c7This is a secrect text<\/code><\/pre>"],["HTML Datalist Element","html-datalist-element","03\/08\/2019","html","2019\/08\/03\/html-datalist-element\/","<h1>HTML Datalist Element<\/h1>\n<p class='timestamp'><time datetime='03-08-2019'>03-08-2019<\/time><\/p>\n<hr>\n<p>Making sortable input lists on a webpage usually requires a ton of javascript. \nThe <code>&lt;datalist&gt;<\/code> element was introduced with HTML5 and aims to solve this exact problem.<\/p>\n<h2>Using \"datalist\"<\/h2>\n<p>Using the datalist element is fairly straight forward. \nSimply define the search input: <code>&lt;input list=\"list-name\" name=\"list-name\"&gt;<\/code>. \nThe  keyword here, is the <code>list<\/code> attribute, which links the list to the input.<\/p>\n<p>Next to the input element create a <code>&lt;datalist id=\"list-name\"&gt;<\/code> with <code>&lt;option&gt;<\/code> elements inside, \ndefining each selectable item.<\/p>\n<p><strong>Example<\/strong><\/p>\n<pre><code class=\"language-html\">&lt;form action=\"\/action_page.php\" method=\"get\"&gt;\n    &lt;input list=\"flavours\" name=\"flavours\"&gt;\n    &lt;datalist id=\"flavours\"&gt;\n        &lt;option value=\"Chocolate\"&gt;\n        &lt;option value=\"Vanilla\"&gt;\n        &lt;option value=\"Grape\"&gt;\n        &lt;option value=\"Strawberry\"&gt;\n        &lt;option value=\"Honey\"&gt;\n        &lt;option value=\"Coconut\"&gt;\n        &lt;option value=\"Cherry\"&gt;\n    &lt;\/datalist&gt;\n    &lt;input type=\"submit\"&gt;\n&lt;\/form&gt;<\/code><\/pre>\n<h2>Styling \"datalist\"<\/h2>\n<p>The styling capabilities are, unfortunately, very limited. The input box itself, can of course be styled to your preference.\nBut the dropdown is entirely dependent on the browser's styles.\nOne thing you can control though, is the dropdown-arrow. It can be selected like so<\/p>\n<pre><code class=\"language-css\">input[list]::-webkit-calendar-picker-indicator {\n    background: red;\n    color: white;\n}<\/code><\/pre>\n<h2>Live Example<\/h2>\n<p class=\"codepen\" data-height=\"300\" data-theme-id=\"36048\" data-default-tab=\"result\" data-user=\"triss90\" data-slug-hash=\"c59369ea77bf1c6515c1330a1c3ca45b\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"Datalist Example\">\n  <span>See the Pen <a href=\"https:\/\/codepen.io\/triss90\/pen\/c59369ea77bf1c6515c1330a1c3ca45b\/\">\n  Datalist Example<\/a> by Tristan  White (<a href=\"https:\/\/codepen.io\/triss90\">@triss90<\/a>)\n  on <a href=\"https:\/\/codepen.io\">CodePen<\/a>.<\/span>\n<\/p>\n<script async src=\"https:\/\/static.codepen.io\/assets\/embed\/ei.js\"><\/script>\n<h2>Browser Support<\/h2>\n<p>As with other \"new\" HTML5 elements, browser support is somewhat lacking.<\/p>\n<p class=\"ciu_embed\" data-feature=\"datalist\" data-periods=\"future_1,current,past_1,past_2\" data-accessible-colours=\"false\">\n  <a href=\"https:\/\/caniuse.com\/#feat=datalist\">Method of setting a list of options for a user to select in a text field, while leaving the ability to enter a custom value.<\/a>\n<\/p>\n<script src=\"https:\/\/cdn.jsdelivr.net\/gh\/ireade\/caniuse-embed\/caniuse-embed.min.js\"><\/script>\n<p>So if you want to use this in production, you may want to include a polyfill, like \n<a href=\"https:\/\/github.com\/mfranzke\/datalist-polyfill\" target=\"_blank\" rel=\"noopener\" title=\"Datalist Polyfill\">this one by Maximilian Franzke<\/a><\/p>"],["CSS Conical Gradients","css-conical-gradients","07\/08\/2019","css","2019\/08\/07\/css-conical-gradients\/","<h1>CSS Conical Gradients<\/h1>\n<p class='timestamp'><time datetime='07-08-2019'>07-08-2019<\/time><\/p>\n<hr>\n<p>A conic gradient is very similar to a radial gradient. \nThey are both circular in nature, and both use the center as source point.\nThe color of a radial gradient spreads from the center out towards the edge,\nwhere as the color of a conic gradient spreads around the circle<\/p>\n<style>\n.split {\n    display: flex;\n    align-items: center;\n    justify-content: space-around;\n    text-align: center;\n}\n.conic-gradient {\n    height: 200px;\n    width: 200px;\n    border-radius: 50%;\n    margin: 5px;\n    background: conic-gradient(#fff, #000);\n}\n.radial-gradient {\n    height: 200px;\n    width: 200px;\n    border-radius: 50%;\n    margin: 5px;\n    background: radial-gradient(#fff, #000);\n}\n@media(max-width: 768px) {\n    .conic-gradient, .radial-gradient {\n        height: 125px;\n        width: 125px;\n    }\n}\n<\/style>\n<div class=\"split\">\n<span>\n    <strong>Conic Gradient<\/strong>\n    <div class=\"conic-gradient\"><\/div>\n<\/span>\n<span>\n    <strong>Radial Gradient<\/strong>\n    <div class=\"radial-gradient\"><\/div>\n<\/span>\n<\/div>\n<h2>Using Conical Gradients<\/h2>\n<p>Just like radial gradients, conical gradients are very easy to use:<\/p>\n<pre><code class=\"language-css\">.conic-gradient {\n    background: conic-gradient(#fff, #000);\n}<\/code><\/pre>\n<h3>Example<\/h3>\n<p class=\"codepen\" data-height=\"300\" data-theme-id=\"36048\" data-default-tab=\"result\" data-user=\"triss90\" data-slug-hash=\"PMjoPj\" style=\"height: 300px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"CSS Conical Gradients\">\n  <span>See the Pen <a href=\"https:\/\/codepen.io\/triss90\/pen\/PMjoPj\/\">\n  CSS Conical Gradients<\/a> by Tristan  White (<a href=\"https:\/\/codepen.io\/triss90\">@triss90<\/a>)\n  on <a href=\"https:\/\/codepen.io\">CodePen<\/a>.<\/span>\n<\/p>\n<script async src=\"https:\/\/static.codepen.io\/assets\/embed\/ei.js\"><\/script>\n<h2>Browser Support<\/h2>\n<p>As of the writing of this article, conic gradients are only supported by Safari and Chrome.<\/p>\n<p class=\"ciu_embed\" data-feature=\"css-conic-gradients\" data-periods=\"future_1,current,past_1,past_2\" data-accessible-colours=\"false\">\n  <a href=\"https:\/\/caniuse.com\/#feat=css-conic-gradients\">Method of defining a conical or repeating conical color gradient as a CSS image.<\/a>\n<\/p>\n<script src=\"https:\/\/cdn.jsdelivr.net\/gh\/ireade\/caniuse-embed\/caniuse-embed.min.js\"><\/script>"],["Writing SVG Paths","writing-svg-path","08\/08\/2019","svg","2019\/08\/08\/writing-svg-path\/","<h1>Writing SVG Paths<\/h1>\n<p class='timestamp'><time datetime='08-08-2019'>08-08-2019<\/time><\/p>\n<hr class=\"stop\">\n<p>The <code>&lt;path&gt;<\/code> in SVG is by far the most versatile drawing element. You can draw everything from lines and squares to triangles and circles.<wbr>\nBasically, if you can imagine a shape, you can draw it with SVG <code>&lt;path&gt;<\/code>.<\/p>\n<p>An example path would look something like this:<\/p>\n<pre><code class=\"language-html\">&lt;path d=\"M1.37109375,165.960938 C44.4153646,263.429688 122.199219,312.164063 234.722656,312.164063 C347.246094,312.164063 421.278646,263.429688 456.820312,165.960938 L234.722656,0.71484375 L1.37109375,165.960938 Z\" id=\"Path\" stroke=\"#979797\"&gt;&lt;\/path&gt;<\/code><\/pre>\n<p>Reformatting the above, so we can make sense of it:<\/p>\n<pre><code class=\"language-html\">&lt;path d=\"\n    M 1.37109375,165.960938 \n    C 44.4153646,263.429688 122.199219,312.164063 234.722656,312.164063 \n    C 347.246094,312.164063 421.278646,263.429688 456.820312,165.960938 \n    L 234.722656,0.71484375 \n    L 1.37109375,165.960938 \n    Z\"&gt;\n&lt;\/path&gt;<\/code><\/pre>\n<p>The letters represent an \"svg command\" and the numbers represent the value or coordinate of said command. <\/p>\n<p>Example from above<\/p>\n<svg fill=\"#000\" width=\"50%\" viewBox=\"0 0 458 313\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" xmlns:xlink=\"http:\/\/www.w3.org\/1999\/xlink\">\n    <path d=\"M1.37109375,165.960938 C44.4153646,263.429688 122.199219,312.164063 234.722656,312.164063 C347.246094,312.164063 421.278646,263.429688 456.820312,165.960938 L234.722656,0.71484375 L1.37109375,165.960938 Z\"><\/path>\n<\/svg>\n<style>\n.flex {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n}\n.fifty {\n    width: calc(50% - 20px);\n    margin: 10px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    text-align: center;\n}\nspan {\n    color: #777;\n}\n.svgExample2 {\n    fill: none;\n    stroke: white;\n    stroke-width: 2;\n    stroke-linecap: round;\n    stroke-linejoin: round;\n    max-width: 100px;\n    background: #222;\n    margin: 0 auto;\n}\n<\/style>\n<br><br><br>\n<center>\n<h2>SVG Path Commands Explained<\/h2>\n<\/center>\n<hr class=\"stop\">\n<div class=\"flex\">\n    <div class=\"fifty\">\n        <h3>M <span>X,Y<\/span><\/h3>\n        <p>Move to the absolute X and Y coordinates<\/p>\n        <svg class=\"svgExample2\" viewBox=\"0 0 20 20\">\n            <path d=\"M 10,10 Z\" \/>\n        <\/svg>\n<p><code>&lt;path d=\"M 10,10 Z\" \/&gt;<\/code><\/p>\n<\/div>\n    <div class=\"fifty\">\n        <h3>m <span>X,Y<\/span><\/h3>\n        <p>Move to the right x and down y (or left and up if negative values)<\/p>\n        <svg class=\"svgExample2\" viewBox=\"0 0 20 20\">\n            <path d=\"M 5,5 Z m 10,10 z\" \/>\n        <\/svg>\n<p><code>&lt;path d=\"M 5,5 Z m 10,10 z\" \/&gt;<\/code><\/p>\n<\/div>\n<\/div>\n<hr class=\"stop\">\n<div class=\"flex\">\n    <div class=\"fifty\">\n        <h3>L <span>X,Y<\/span><\/h3>\n        <p>Draw a straight line to the absolute coordinates x,y<\/p>\n        <svg class=\"svgExample2\" viewBox=\"0 0 20 20\">\n            <path d=\"M 5,5 L 12,12 \" \/>\n        <\/svg>\n<p><code>&lt;path d=\"M 5,5 L 12,12\" \/&gt;<\/code><\/p>\n<\/div>\n    <div class=\"fifty\">\n        <h3>l <span>X,Y<\/span><\/h3>\n        <p>Draw a straight line to a point that is relatively right x and down y (or left and up if negative values)<\/p>\n        <svg class=\"svgExample2\" viewBox=\"0 0 20 20\">\n            <path d=\"M 5,5 l 12,12 \" \/>\n        <\/svg>\n<p><code>&lt;path d=\"M 5,5 l 12,12\" \/&gt;<\/code><\/p>\n<\/div>\n<\/div>\n<hr class=\"stop\">\n<div class=\"flex\">\n    <div class=\"fifty\">\n        <h3>H <span>X<\/span><\/h3>\n        <p>Draw a line horizontally to the exact coordinate x<\/p>\n        <svg class=\"svgExample2\" viewBox=\"0 0 20 20\">\n            <path d=\"M 5,10 H 10 \" \/>\n        <\/svg>\n<p><code>&lt;path d=\"M 5,10 H 10\" \/&gt;<\/code><\/p>\n<\/div>\n    <div class=\"fifty\">\n        <h3>h <span>X<\/span><\/h3>\n        <p>Draw a line horizontally relatively to the right x (or to the left if a negative value)<\/p>\n        <svg class=\"svgExample2\" viewBox=\"0 0 20 20\">\n            <path d=\"M 5,10 h 10 \" \/>\n        <\/svg>\n<p><code>&lt;path d=\"M 5,10 h 10\" \/&gt;<\/code><\/p>\n<\/div>\n<\/div>\n<hr class=\"stop\">\n<div class=\"flex\">\n    <div class=\"fifty\">\n        <h3>V <span>Y<\/span><\/h3>\n        <p>Draw a line vertically to the exact coordinate y<\/p>\n        <svg class=\"svgExample2\" viewBox=\"0 0 20 20\">\n            <path d=\"M 10,5 V 10 \" \/>\n        <\/svg>\n<p><code>&lt;path d=\"M 10,5 V 10\" \/&gt;<\/code><\/p>\n<\/div>\n    <div class=\"fifty\">\n        <h3>v <span>Y<\/span><\/h3>\n        <p>Draw a line vertically relatively down y (or up if a negative value)<\/p>\n        <svg class=\"svgExample2\" viewBox=\"0 0 20 20\">\n            <path d=\"M 10,5 v 10 \" \/>\n        <\/svg>\n<p><code>&lt;path d=\"M 10,5 v 10\" \/&gt;<\/code><\/p>\n<\/div>\n<\/div>\n<hr class=\"stop\">\n<div class=\"flex\">\n    <div class=\"fifty\">\n        <h3>Z \/ z <span>Y<\/span><\/h3>\n        <p>Draw a straight line back to the start of the path<\/p>\n        <svg class=\"svgExample2\" viewBox=\"0 0 20 20\">\n            <path d=\"M 5,5 L 15,15\" \/>\n            <path d=\"M 5,5 V 15 h 10\" style=\"opacity:0.2;\" \/>\n        <\/svg>\n<p><code>&lt;path d=\"M 5,5 V 15 h 10 Z\" \/&gt;<\/code><\/p>\n<\/div>\n<\/div>\n<hr class=\"stop\">\n<div class=\"flex\">\n    <div class=\"fifty\">\n        <h3>C <span>cX1,cY1 cX2,cY2 eX,eY<\/span><\/h3>\n        <p>Draw a bezier curve based on two bezier control points and end at specified coordinates<\/p>\n        <svg class=\"svgExample2\" viewBox=\"0 0 20 20\">\n            <path d=\"M 3,3 C 3,20 17,20 17,3 \" \/>\n        <\/svg>\n<p><code>&lt;path d=\"M 3,3 C 3,20 17,20 17,3\" \/&gt;<\/code><\/p>\n<\/div>\n    <div class=\"fifty\">\n        <h3>c <span>cX1,cY1 cX2,cY2 eX,eY<\/span><\/h3>\n        <p>Same with all relative values<\/p>\n        <svg class=\"svgExample2\" viewBox=\"0 0 20 20\">\n            <path d=\"M 3,3 c 0,17 14,17 14,0 \" \/>\n        <\/svg>\n<p><code>&lt;path d=\"M 3,3 c 0,17 14,17 14,0\" \/&gt;<\/code><\/p>\n<\/div>\n<\/div>\n<hr class=\"stop\">\n<div class=\"flex\">\n    <div class=\"fifty\">\n        <h3>S <span>cX2,cY2 eX,eY<\/span><\/h3>\n        <p>Basically a C command that assumes the first bezier control point is a reflection of the last bezier point used in the previous S or C command<\/p>\n        <svg class=\"svgExample2\" viewBox=\"0 0 20 20\">\n            <path d=\"M 3,17 S 3,3 16,12 \" \/>\n        <\/svg>\n<p><code>&lt;path d=\"M 3,17 S 3,3 16,12\" \/&gt;<\/code><\/p>\n<\/div>\n    <div class=\"fifty\">\n        <h3>s <span>cX2,cY2 eX,eY<\/span><\/h3>\n        <p>Same with all relative values<\/p>\n        <svg class=\"svgExample2\" viewBox=\"0 0 20 20\">\n            <path d=\"M 3,17 s 1,-14 13,-4 \" \/>\n        <\/svg>\n<p><code>&lt;path d=\"M 3,17 s 1,-14 13,-4\" \/&gt;<\/code><\/p>\n<\/div>\n<\/div>\n<hr class=\"stop\">\n<div class=\"flex\">\n    <div class=\"fifty\">\n        <h3>Q <span>cX,cY eX,eY<\/span><\/h3>\n        <p>Draw a bezier curve based a single bezier control point and end at specified coordinates<\/p>\n        <svg class=\"svgExample2\" viewBox=\"0 0 20 20\">\n            <path d=\"M 3,17 Q 10,3 17,17 \" \/>\n        <\/svg>\n<p><code>&lt;path d=\"M 3,17 Q 10,3 17,17\" \/&gt;<\/code><\/p>\n<\/div>\n    <div class=\"fifty\">\n        <h3>q <span>cX,cY eX,eY<\/span><\/h3>\n        <p>Same with all relative values<\/p>\n        <svg class=\"svgExample2\" viewBox=\"0 0 20 20\">\n            <path d=\"M 3,17 q 7,-14 14,0 \" \/>\n        <\/svg>\n<p><code>&lt;path d=\"M 3,17 q 7,-14 14,0\" \/&gt;<\/code><\/p>\n<\/div>\n<\/div>\n<hr class=\"stop\">\n<div class=\"flex\">\n    <div class=\"fifty\">\n        <h3>T <span>eX,eY<\/span><\/h3>\n        <p>Basically a Q command that assumes the first bezier control point is a reflection of the last bezier point used in the previous Q or T command<\/p>\n        <svg class=\"svgExample2\" viewBox=\"0 0 20 20\">\n            <path d=\"M 2,12 Q 6,1 10,12\" style=\"opacity: 0.2;\" \/>\n            <path d=\"M 10,12 Q 14,23 18,12\" \/>\n        <\/svg>\n<p><code>&lt;path d=\"M 2,12 Q 6,1 10,12 T 18,12\" \/&gt;<\/code><\/p>\n<\/div>\n    <div class=\"fifty\">\n        <h3>t <span>eX,eY<\/span><\/h3>\n        <p>Same with all relative values<\/p>\n        <svg class=\"svgExample2\" viewBox=\"0 0 20 20\">\n            <path d=\"M 2,12 q 4,-11 8,0\" style=\"opacity: 0.2;\" \/>\n            <path d=\"M 10,12 q 4,11 8,0\" \/>\n        <\/svg>\n<p><code>&lt;path d=\"M 2,12 Q 6,1 10,12 t 8,0\" \/&gt;<\/code><\/p>\n<\/div>\n<\/div>\n<hr class=\"stop\">\n<div class=\"flex\">\n    <div class=\"fifty\">\n        <h3>A <span>rX,rY rotation, arc, sweep, eX,eY<\/span><\/h3>\n        <p>Draw an arc that is based on the curve an oval makes. First define the width and height of the oval. Then the rotation of the oval. Along with the end point, this makes two possible ovals. So the arc and sweep are either 0 or 1 and determine which oval and which path it will take.<\/p>\n        <svg class=\"svgExample2\" viewBox=\"0 0 20 20\">\n            <path d=\"M 2,10 A 1,1 40 1 0 18,10\" \/>\n        <\/svg>\n<p><code>&lt;path d=\"M 2,10 A 1,1 40 1 0 18,10\" \/&gt;<\/code><\/p>\n<\/div>\n    <div class=\"fifty\">\n        <h3>a <span>rX,rY rotation, arc, sweep, eX,eY<\/span><\/h3>\n        <p>Same with all relative values<\/p>\n        <svg class=\"svgExample2\" viewBox=\"0 0 20 20\">\n            <path d=\"M 2,10 a 1,1 40 1 0 16,0\" \/>\n        <\/svg>\n<p><code>&lt;path d=\"M 2,10 a 1,1 40 1 0 16,0\" \/&gt;<\/code><\/p>\n<\/div>\n<\/div>\n<p style=\"margin-top:0;\">\n<a class=\"source-link\" target=\"_blank\" rel=\"noopener\" href=\"https:\/\/css-tricks.com\/svg-path-syntax-illustrated-guide\/\" title=\"CSS Tricks\">Source (css-tricks.com)<\/a>\n<\/p>\n<br><br><br>\n<h2>Drawing SVG by hand<\/h2>\n<style>\n    svg.svgExample {\n        width: 100%;\n        height: 300px;\n        background: #222;\n    }\n    svg.svgExample > path {\n        stroke: white;\n        fill: none;\n        stroke-width: 3;\n        stroke-linecap: round;\n        stroke-linejoin: round;\n    }\n<\/style>\n<h3>Example 1<\/h3>\n<pre><code class=\"language-html\">&lt;svg viewBox=\"0 0 100 100\"&gt;\n    &lt;path d=\"\n        M 25,40\n        L 65,40\n        L 65,65\n        L 50,65\n        Z\n    \"\/&gt;\n&lt;\/svg&gt;<\/code><\/pre>\n<center>\n<svg class=\"svgExample\" viewBox=\"0 0 100 100\">\n    <path d=\"\n        M 25,40\n        L 65,40\n        L 65,65\n        L 50,65\n        Z\n    \"\/>\n<\/svg>\n<\/center>\n<h3>Example 2<\/h3>\n<pre><code class=\"language-html\">&lt;svg viewBox=\"0 0 100 100\"&gt;\n    &lt;path d=\"\n        M 50,50\n        L 60,25\n        L 40,25\n        Z\n    \"\/&gt;\n&lt;\/svg&gt;<\/code><\/pre>\n<center>\n<svg class=\"svgExample\" viewBox=\"0 0 100 100\">\n    <path d=\"\n        M 50,50\n        L 60,25\n        L 40,25\n        Z\n    \"\/>\n<\/svg>\n<\/center>\n<h3>Example 3<\/h3>\n<pre><code class=\"language-html\">&lt;svg viewBox=\"0 0 64 64\" stroke-width=\"10\" stroke-linecap=\"round\"&gt;\n    &lt;path d=\"\n        M 7,12 \n        L 57,12 \n        M 7,32 \n        L 57,32 \n        M 7,52 \n        L 57,52\" \n    \/&gt;\n&lt;\/svg&gt;<\/code><\/pre>\n<style>\n    svg.burger {\n        stroke-width: 10;\n    }\n<\/style>\n<center>\n<svg class=\"svgExample burger\" viewBox=\"0 0 64 64\" stroke-width=\"10\" stroke-linecap=\"round\">\n    <path d=\"M 7,12 L 57,12 M 7,32 L 57,32 M 7,52 L 57,52\" \/>\n<\/svg>\n<\/center>\n<h3>Example 4<\/h3>\n<pre><code class=\"language-html\">&lt;svg viewBox=\"0 0 100 100\"&gt;\n    &lt;path d=\"\n        M 25,25\n        S 75,25 75,75\n        L 25,75\n        L 50,50\n        S 25,50 25,25\n    \"\/&gt;\n&lt;\/svg&gt;<\/code><\/pre>\n<center>\n<svg class=\"svgExample\" viewBox=\"0 0 100 100\">\n    <path d=\"\n        M 25,25\n        S 75,25 75,75\n        L 25,75\n        L 50,50\n        S 25,50 25,25\n    \"\/>\n<\/svg>\n<\/center>\n<p><br><br><br><\/p>\n<h2>Drawing SVG in real life<\/h2>\n<p>I've put my newly acquired skills to use, and made a few SVG icons by hand<\/p>\n<p class=\"codepen\" data-height=\"274\" data-theme-id=\"light\" data-default-tab=\"result\" data-user=\"triss90\" data-slug-hash=\"d765a70efc3539b7ec44ab85b77021c6\" style=\"height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"Handdrawn SVG\">\n  <span>See the Pen <a href=\"https:\/\/codepen.io\/triss90\/pen\/d765a70efc3539b7ec44ab85b77021c6\/\">\n  Handdrawn SVG<\/a> by Tristan  White (<a href=\"https:\/\/codepen.io\/triss90\">@triss90<\/a>)\n  on <a href=\"https:\/\/codepen.io\">CodePen<\/a>.<\/span>\n<\/p>\n<script async src=\"https:\/\/static.codepen.io\/assets\/embed\/ei.js\"><\/script>\n<p>If you're looking to hone your SVG skills, CSS-Tricks has <a href=\"https:\/\/css-tricks.com\/svg-path-syntax-illustrated-guide\/\" target=\"_blank\" rel=\"noopener\">a great article<\/a>, which goes into detail on the subject.<\/p>"],["The Perfect Alt-text","the-perfect-alt-text","14\/08\/2019","html, accessibility","2019\/08\/14\/the-perfect-alt-text\/","<h1>The Perfect Alt-text<\/h1>\n<p class='timestamp'><time datetime='14-08-2019'>14-08-2019<\/time><\/p>\n<hr>\n<p>Writing proper and thorough alternative text (alt-text) for images on the web, \nis not just important. It is vital for those who depend on screen readers for \nnavigating the web.<\/p>\n<p>In spite of this, many publishers continue to include useless text \nor neglect the alt-text entirely.<\/p>\n<h2>So, how do you do it?<\/h2>\n<p>Writing proper alt-text is, at its core, very simple. All you need to do, \nis describe the image. E.g.: \u201cGroup of people on a train station.\u201d.<\/p>\n<p>A few things to avoid would be: <\/p>\n<ul>\n<li>Including the name of the photographer<\/li>\n<li>Adding keywords for search engine optimization.<\/li>\n<li>Saying \"Image of\" or \"Photo of\".<\/li>\n<\/ul>\n<p><a href=\"https:\/\/axesslab.com\/alt-texts\/\" target=\"_blank\" rel=\"noopener\" title=\"Article: Alt-texts: The Ultimate Guide\">\nDaniel G\u00f6ransson published a wonderful article on the subject back in October 2017.\n<\/a><\/p>"],["CSS Checkbox Hack","css-checkbox-hack","21\/08\/2019","html, css","2019\/08\/21\/css-checkbox-hack\/","<h1>CSS Checkbox Hack<\/h1>\n<p class='timestamp'><time datetime='21-08-2019'>21-08-2019<\/time><\/p>\n<hr>\n<p>The \"Checkbox Hack\" is the method of using a connected checkbox and label\nto control one or more elements.<\/p>\n<p>The markup might look something along these lines:<\/p>\n<pre><code class=\"language-html\">&lt;label for=\"toggleButtonInput\"&gt;Show\/Hide&lt;\/label&gt;\n&lt;input type=\"checkbox\" id=\"toggleButtonInput\"&gt;\n&lt;div id=\"control\"&gt;Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.&lt;\/div&gt;<\/code><\/pre>\n<p>And the accompanying CSS like this:<\/p>\n<pre><code class=\"language-css\">input[type=\"checkbox\"] {\n   display: none;\n   position: absolute;\n   top: -9999px;\n   left: -9999px;\n}\n\n#control {\n   display: none;\n}\n\ninput[type=checkbox]:checked ~ #control {\n   display: block;\n}<\/code><\/pre>\n<h2>Try it out<\/h2>\n<style>\n.exampleWrapper {\n    text-align: center; \n}\n#toggleButtonInput {\n    position: absolute;\n    top: -9999px;\n    left: -9999px;\n    display: none;\n}\n#toggleButton {\n    background-color: #222;\n    color: #fefefe;\n    padding: 0.5rem 1rem;\n    font-size: 1rem;\n    margin: 30px auto;\n    display: inline-block;\n}\n#control {\n    display: none;\n}\ninput[type=checkbox]:checked ~ #control {\n    display: block;\n}\n<\/style>\n<hr>\n<div class=\"exampleWrapper\">\n    <label id=\"toggleButton\" for=\"toggleButtonInput\">Show\/Hide \ud83d\udc40<\/label>\n    <input type=\"checkbox\" id=\"toggleButtonInput\">\n    <div id=\"control\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.<\/div>\n<\/div>\n<hr>\n<h2>Accessibility<\/h2>\n<p>This \"hack\" has its drawbacks however. It's in no way accessible. This flaw can be improved upon, \nhowever, not fixed entirely:<\/p>\n<pre><code class=\"language-html\">&lt;label id=\"toggleButton\" for=\"toggleButtonInput\" style=\"cursor: pointer;\"&gt;\n    &lt;button id=\"ToggleAccessibility\"&gt;Show\/Hide \ud83d\udc40&lt;\/button&gt;\n&lt;\/label&gt;<\/code><\/pre>\n<p>Make sure you can still click the label<\/p>\n<pre><code class=\"language-css\">#toggleButton button {\n    pointer-events: none;\n}<\/code><\/pre>\n<p>This makes the toggle button \"tabbable\", but not \"clickable\". \nYou'd have to control that with external javascript.<\/p>\n<style>\n.exampleWrapper2 {\n    text-align: center; \n}\n#toggleButtonInput2 {\n    position: absolute;\n    top: -9999px;\n    left: -9999px;\n    display: none;\n}\n#toggleButton2 {\n    background-color: #222;\n    color: #fefefe;\n    padding: 0.5rem 1rem;\n    font-size: 1rem;\n    margin: 30px auto;\n    display: inline-block;\n}\n#toggleButton2 > button {\n    background: none;\n    color: #f2f2f2;\n    border: none;\n    pointer-events: none;\n    font-size: 1rem;\n}\n#control2 {\n    display: none;\n}\ninput[type=checkbox]:checked ~ #control2 {\n    display: block;\n}\n<\/style>\n<hr>\n<div class=\"exampleWrapper2\">\n    <label id=\"toggleButton2\" for=\"toggleButtonInput2\" style=\"cursor: pointer;\">\n        <button id=\"ToggleAccessibility\">Show\/Hide \ud83d\udc40<\/button>\n    <\/label>\n    <input type=\"checkbox\" id=\"toggleButtonInput2\">\n    <div id=\"control2\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.<\/div>\n<\/div>\n<hr>\n<h2>Example<\/h2>\n<p class=\"codepen\" data-height=\"650\" data-theme-id=\"light\" data-default-tab=\"result\" data-user=\"triss90\" data-slug-hash=\"rrJgLE\" style=\"height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"Tabs (checkbox-hack)\">\n  <span>See the Pen <a href=\"https:\/\/codepen.io\/triss90\/pen\/rrJgLE\/\">\n  Tabs (checkbox-hack)<\/a> by Tristan  White (<a href=\"https:\/\/codepen.io\/triss90\">@triss90<\/a>)\n  on <a href=\"https:\/\/codepen.io\">CodePen<\/a>.<\/span>\n<\/p>\n<script async src=\"https:\/\/static.codepen.io\/assets\/embed\/ei.js\"><\/script>\n<p><strong>More Examples:<\/strong><\/p>\n<ul>\n    <li><a href=\"http:\/\/jsfiddle.net\/genelocklin\/LXx5v\/\" target=\"_blank\" rel=\"noopener\">Hide the sidebar!<\/a> by @genelocklin<\/li>\n    <li><a href=\"https:\/\/codepen.io\/gubs\/pen\/kqEaz\" target=\"_blank\" rel=\"noopener\">Checkbox hack - popup<\/a> by Michael Gubitosa<\/li>\n<\/ul>"],["CSS Darkmode","css-darkmode","24\/08\/2019","css","2019\/08\/24\/css-darkmode\/","<h1>CSS Darkmode<\/h1>\n<p class='timestamp'><time datetime='24-08-2019'>24-08-2019<\/time><\/p>\n<hr>\n<p>I was messing around with native darkmode on the web the other day, and ended up implementing\n<code>prefers-color-scheme<\/code> on <a href=\"https:\/\/mrkdwn.net\">mrkdwn.net<\/a> as proof of concept.<\/p>\n<p><code>prefers-color-scheme<\/code> has three available keyword values:<\/p>\n<ul>\n<li><code>no-preference<\/code> which indicates that the user has no preference, as to where the site should appear dark og light.<\/li>\n<li><code>light<\/code> which indicates that the user prefers <strong>light<\/strong> mode<\/li>\n<li><code>dark<\/code>, which indicates that the user prefers <strong>dark<\/strong> mode.<\/li>\n<\/ul>\n<h2>Example<\/h2>\n<pre><code class=\"language-css\">\/* Base color scheme (fallback) *\/\n:root {\n    --background-color: #fff;\n    --primary-color: #157efb;\n    --font-color: #151513;\n    --border-color: #dfe1e7;\n}\n\n\/* whitemode or fallback if user has no preference *\/\n@media (prefers-color-scheme: light), (prefers-color-scheme: no-preference) {\n    :root {\n        --background-color: #fff;\n        --primary-color: #157efb;\n        --font-color: #151513;\n        --border-color: #dfe1e7;\n    }\n}\n\n\/* darkmode *\/\n@media (prefers-color-scheme: dark) {\n    :root {\n        --background-color: #1e1e1e;\n        --primary-color: #157efb;\n        --font-color: #dedede;\n        --border-color: #000;\n    }\n}<\/code><\/pre>\n<h3>Update 17\/5\/2023<\/h3>\n<p>Using <code>color-mix<\/code> adds a whole new dimention to the usability<\/p>\n<pre><code class=\"language-CSS\">\/* Base color scheme (fallback) *\/\n:root {\n  --color-1: #e62739; \/* The primary color (var(--primary), var(--primary-a90), var(--primary-80), var(--primary-a50)) *\/\n  --color-2: #21A8A3; \/* The secondary color (var(--secondary), var(--secondary-a90), var(--secondary-80), var(--secondary-a50)) *\/\n  --color-3: #19191a; \/* Initial foreground color (var(--foreground), var(--foreground-a90), var(--foreground-80), var(--foreground-a50)) *\/\n  --color-4: #f1f1f1; \/* Initial background color (var(--background), var(--background-a90), var(--background-80), var(--background-a50)) *\/\n\n  --primary: var(--color-1);\n  --primary-a90: color-mix(in srgb, var(--primary), transparent 10%);\n  --primary-a80: color-mix(in srgb, var(--primary), transparent 20%);\n  --primary-a50: color-mix(in srgb, var(--primary), transparent 50%);\n\n  --secondary: var(--color-2);\n  --secondary-a90: color-mix(in srgb, var(--secondary), transparent 10%);\n  --secondary-a80: color-mix(in srgb, var(--secondary), transparent 20%);\n  --secondary-a50: color-mix(in srgb, var(--secondary), transparent 50%);\n\n  --foreground: var(--color-3);\n  --foreground-a90: color-mix(in srgb, var(--foreground), transparent 10%);\n  --foreground-a80: color-mix(in srgb, var(--foreground), transparent 20%);\n  --foreground-a50: color-mix(in srgb, var(--foreground), transparent 50%);\n\n  --background: var(--color-4);\n  --background-a90: color-mix(in srgb, var(--background), transparent 10%);\n  --background-a80: color-mix(in srgb, var(--background), transparent 20%);\n  --background-a50: color-mix(in srgb, var(--background), transparent 50%);\n}\n\n\/* lightmode or fallback if user has no preference *\/\n@media (prefers-color-scheme: background),(prefers-color-scheme: no-preference) {\n  :root {\n    --foreground: var(--color-3);\n    --foreground-a90: color-mix(in srgb, var(--foreground), transparent 10%);\n    --foreground-a80: color-mix(in srgb, var(--foreground), transparent 20%);\n    --foreground-a50: color-mix(in srgb, var(--foreground), transparent 50%);\n\n    --background: var(--color-4);\n    --background-a90: color-mix(in srgb, var(--background), transparent 10%);\n    --background-a80: color-mix(in srgb, var(--background), transparent 20%);\n    --background-a50: color-mix(in srgb, var(--background), transparent 50%);\n  }\n}\n\n\/* darkmode *\/\n@media (prefers-color-scheme: foreground) {\n  :root {\n    --foreground: var(--color-4);\n    --foreground-a90: color-mix(in srgb, var(--foreground), transparent 10%);\n    --foreground-a80: color-mix(in srgb, var(--foreground), transparent 20%);\n    --foreground-a50: color-mix(in srgb, var(--foreground), transparent 50%);\n\n    --background: var(--color-3);\n    --background-a90: color-mix(in srgb, var(--background), transparent 10%);\n    --background-a80: color-mix(in srgb, var(--background), transparent 20%);\n    --background-a50: color-mix(in srgb, var(--background), transparent 50%);\n  }\n}<\/code><\/pre>\n<h2>Browser Support<\/h2>\n<p>The <code>prefers-color-scheme<\/code> media query is only supported by Chrome, Firefox and Safari and Opera.\nThis, however, should not stop you from implementing a similar solution on your website, as the site simply defaults to\n\"white\" mode if it's not supported.<\/p>\n<p class=\"ciu_embed\" data-feature=\"prefers-color-scheme\" data-periods=\"future_1,current,past_1,past_2\" data-accessible-colours=\"false\">\n  <a href=\"https:\/\/caniuse.com\/#feat=prefers-color-scheme\">Media query to detect if the user has set their system to use a light or dark color theme.<\/a>\n<\/p>\n<script src=\"https:\/\/cdn.jsdelivr.net\/gh\/ireade\/caniuse-embed\/caniuse-embed.min.js\"><\/script>"],["HTTP2 on Apache - Linux","http2-on-apache-linux","27\/08\/2019","server, security","2019\/08\/27\/http2-on-apache-linux\/","<h1>HTTP2 on Apache - Linux<\/h1>\n<p class='timestamp'><time datetime='27-08-2019'>27-08-2019<\/time><\/p>\n<hr>\n<p>To enable http2 support on Apache you need to load the following two modules:<\/p>\n<ul>\n<li>SSL<\/li>\n<li>HTTP\/2<\/li>\n<\/ul>\n<p>To do so, run the following commands in your terminal<\/p>\n<pre><code class=\"language-bash\">sudo a2enmod ssl<\/code><\/pre>\n<p>And<\/p>\n<pre><code class=\"language-bash\">sudo a2enmod http2<\/code><\/pre>\n<p>Then activate the new modules by restarting Apache<\/p>\n<pre><code class=\"language-bash\">sudo systemctl restart apache2<\/code><\/pre>\n<p>After activating the Apache modules, navigate to the Apache directory and edit the configuration.\nSimply add the following line to your global Apache configuration or inside an individual virtual hos.<\/p>\n<pre><code class=\"language-htaccess\">Protocols h2 http\/1.1<\/code><\/pre>\n<h2>Example<\/h2>\n<pre><code class=\"language-htaccess\">&lt;VirtualHost *:443&gt;\n\n  ServerName triss.dev\n  ServerAlias www.triss.dev\n  DocumentRoot \/var\/www\/public_html\/triss.dev\n  SSLEngine on\n  SSLCertificateKeyFile \/path\/to\/private.pem\n  SSLCertificateFile \/path\/to\/cert.pem\n  SSLProtocol all -SSLv3 -TLSv1 -TLSv1.1\n\n  Protocols h2 http\/1.1\n\n&lt;\/VirtualHost&gt;<\/code><\/pre>"],["HTML Wbr Tag","html-wbr-tag","05\/09\/2019","html","2019\/09\/05\/html-wbr-tag\/","<h1>HTML &lt;wbr&gt; Tag<\/h1>\n<p class='timestamp'><time datetime='05-09-2019'>05-09-2019<\/time><\/p>\n<hr>\n<p>This is a first article in the month long installment \"what's that weird html tag?\".<\/p>\n<p>Today we're taking a log at the <code>&lt;wbr&gt;<\/code> tag.<\/p>\n<p>The <code>&lt;wbr&gt;<\/code> html element represents a possible wordbreak, or in other words,<wbr> \na position within a text where the browser may insert a break. <wbr>\nEven if the normal line-breaking rules would not apply at that location.<\/p>\n<h2>Example<\/h2>\n<pre><code class=\"language-html\">&lt;div id=\"example-paragraphs\"&gt;\n    &lt;p&gt;Lorem ipsum dolor sit amet, &lt;wbr&gt; consectetur adipisicing elit.&lt;\/p&gt;\n    &lt;p&gt;Lorem ipsum dolor sit amet, &lt;wbr&gt; consectetur adipisicing elit. &lt;wbr&gt;Alias aspernatur blanditiis consectetur, &lt;wbr&gt; eaque ex sequi tenetur unde. &lt;wbr&gt; Accusamus molestiae nobis quasi quibusdam reprehenderit? &lt;wbr&gt; Amet error exercitationem incidunt natus saepe tempore!&lt;\/p&gt;\n&lt;\/div&gt;<\/code><\/pre>\n<h2>Browser Support<\/h2>\n<p>The <code>&lt;wbr&gt;<\/code> tag is widely supported, only lacking support on IE and IE Mobile:<\/p>\n<p class=\"ciu_embed\" data-feature=\"wbr-element\" data-periods=\"future_1,current,past_1,past_2\" data-accessible-colours=\"false\">\n<a href=\"http:\/\/caniuse.com\/#feat=wbr-element\">Can I Use wbr-element?<\/a> Data on support for the wbr-element feature across the major browsers from caniuse.com.\n<\/p>\n<script src=\"https:\/\/cdn.jsdelivr.net\/gh\/ireade\/caniuse-embed\/caniuse-embed.min.js\"><\/script>"],["HTML Meter Tag","html-meter-tag","12\/09\/2019","html","2019\/09\/12\/html-meter-tag\/","<h1>HTML &lt;meter&gt; Tag<\/h1>\n<p class='timestamp'><time datetime='12-09-2019'>12-09-2019<\/time><\/p>\n<hr>\n<p>This week's article in the installment \"what's that weird html tag?\", \ntakes a look at the <code>&lt;meter&gt;<\/code> tag.<\/p>\n<p>The <code>&lt;meter&gt;<\/code> element represents a scalar measurement within a known range, for example disk usage. \nIt should not be used to create progress bars or in any other way indicate progress. Use the <a href=\"https:\/\/triss.dev\/blog\/2019\/09\/19\/html-progress-tag\">progress bar element<\/a> instead.<\/p>\n<p><br><\/p>\n<h2>Styling<\/h2>\n<p>There are five pseudo classes you can use for styling the meter element\n-webkit-meter-inner-element\n-webkit-meter-bar\n-webkit-meter-optimum-value\n-webkit-meter-suboptimum-value\n-webkit-meter-even-less-good-value<\/p>\n<h3>-webkit-meter-inner-element<\/h3>\n<p>Additional markup to render the meter element as read-only.<\/p>\n<h3>-webkit-meter-bar<\/h3>\n<p>The meter bar container. This is used for styling the meter element.<\/p>\n<pre><code class=\"language-html\">&lt;meter min=\"0\" max=\"10\" value=\"3\"&gt;3 out of 10&lt;\/meter&gt;<\/code><\/pre>\n<pre><code class=\"language-css\">meter::-webkit-meter-bar {\n    background: salmon;\n}<\/code><\/pre>\n<style>\nmeter.ex1::-webkit-meter-bar {\n    background: salmon;\n}\n<\/style>\n<meter class=\"ex1\" min=\"0\" max=\"10\" value=\"3\">3 out of 10<\/meter>\n<h3>-webkit-meter-optimum-value<\/h3>\n<p>This is the current value of the meter. It's green by default when the value falls within the low-high range.<\/p>\n<pre><code class=\"language-html\">&lt;meter min=\"0\" max=\"10\" value=\"3\" optimum=\"0\"&gt;3 out of 10&lt;\/meter&gt;<\/code><\/pre>\n<pre><code class=\"language-css\">meter::-webkit-meter-optimum-value {\n    background: green;\n}<\/code><\/pre>\n<style>\nmeter.ex2::-webkit-meter-optimum-value {\n    background: green;\n}\n<\/style>\n<meter class=\"ex2\" min=\"0\" max=\"10\" value=\"3\" optimum=\"3\">3 out of 10<\/meter>\n<h3>-webkit-meter-suboptimum-value<\/h3>\n<p>Gives a yellow color to the meter element when the value attribute falls outside the low-high range.<\/p>\n<pre><code class=\"language-html\">&lt;meter min=\"0\" max=\"10\" value=\"6\" optimum=\"0\" low=\"5\"&gt;6 out of 10&lt;\/meter&gt;<\/code><\/pre>\n<pre><code class=\"language-css\">meter::-webkit-meter-suboptimum-value {\n    background: yellow;\n}<\/code><\/pre>\n<style>\nmeter.ex3::-webkit-meter-suboptimum-value {\n    background: yellow;\n}\n<\/style>\n<meter class=\"ex3\" min=\"0\" max=\"10\" value=\"6\" optimum=\"0\" low=\"5\">6 out of 10<\/meter>\n<h3>-webkit-meter-even-less-good-value<\/h3>\n<p>Gives a red color to the meter element when the value and the optimum attributes fall outside the low-high range but in opposite zones. For example, value &lt; low &lt; high &lt; optimum or value &gt; high &gt; low &gt; optimum<\/p>\n<pre><code class=\"language-html\">&lt;meter min=\"0\" max=\"10\" value=\"9\" optimum=\"0\" low=\"5\" high=\"8\"&gt;9 out of 10&lt;\/meter&gt;<\/code><\/pre>\n<pre><code class=\"language-css\">meter::-webkit-meter-suboptimum-value {\n    background: red;\n}<\/code><\/pre>\n<style>\nmeter.ex4::-webkit-meter-even-less-good-value {\n    background: red;\n}\n<\/style>\n<meter class=\"ex4\" min=\"0\" max=\"10\" value=\"9\" optimum=\"0\" low=\"5\" high=\"8\">9 out of 10<\/meter>\n<p><br><\/p>\n<h2>Example<\/h2>\n<p class=\"codepen\" data-height=\"265\" data-theme-id=\"light\" data-default-tab=\"result\" data-user=\"triss90\" data-slug-hash=\"LwgdRv\" style=\"height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"Meter HTML Test\">\n  <span>See the Pen <a href=\"https:\/\/codepen.io\/triss90\/pen\/LwgdRv\/\">\n  Meter HTML Test<\/a> by Tristan  White (<a href=\"https:\/\/codepen.io\/triss90\">@triss90<\/a>)\n  on <a href=\"https:\/\/codepen.io\">CodePen<\/a>.<\/span>\n<\/p>\n<script async src=\"https:\/\/static.codepen.io\/assets\/embed\/ei.js\"><\/script>\n<p><br><\/p>\n<h2>Browser Support<\/h2>\n<p>The <code>&lt;meter&gt;<\/code> tag is widely supported, only lacking support on IE and IE Mobile:<\/p>\n<p class=\"ciu_embed\" data-feature=\"meter\" data-periods=\"future_1,current,past_1,past_2\" data-accessible-colours=\"false\">\n  <a href=\"https:\/\/caniuse.com\/#feat=meter\">Method of indicating the current level of a gauge.<\/a>\n<\/p>\n<script src=\"https:\/\/cdn.jsdelivr.net\/gh\/ireade\/caniuse-embed\/caniuse-embed.min.js\"><\/script>"],["HTML Progress Tag","html-progress-tag","19\/09\/2019","html","2019\/09\/19\/html-progress-tag\/","<h1>HTML &lt;progress&gt; Tag<\/h1>\n<p class='timestamp'><time datetime='19-09-2019'>19-09-2019<\/time><\/p>\n<hr>\n<style>\nprogress {\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n}\nprogress.one::-webkit-progress-bar {\n    background: red;\n}\nprogress.two::-webkit-progress-value {\n    background: red;\n}\n<\/style>\n<p>This week we're looking at the <code>&lt;progress&gt;<\/code> tag.<\/p>\n<p>The <code>&lt;progress&gt;<\/code> tag offers a method of indicating a progress state. Thus it represents the completion\nof a task, like loading a site, downloading a file and so on. <\/p>\n<p>The progress tag takes two attributes: <code>max<\/code> which represent the maximum value \nand <code>value<\/code> which represents the current value.<\/p>\n<h2>Styling<\/h2>\n<p>WebKit\/Blink provides two pseudo classes for styling the progress element: <code>-webkit-progress-bar<\/code> which lets you modify the progress element container,\nand <code>-webkit-progress-value<\/code> which is used for styling the value inside the container.<\/p>\n<p>Start by resetting the styles:<\/p>\n<pre><code class=\"language-css\">progress {\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n}<\/code><\/pre>\n<h3>-webkit-progress-bar<\/h3>\n<pre><code class=\"language-html\">&lt;progress max=\"100\" value=\"65\"&gt;&lt;\/progress&gt;<\/code><\/pre>\n<pre><code class=\"language-css\">progress::-webkit-progress-bar {\n    background: red;\n}<\/code><\/pre>\n<progress class=\"one\" max=\"100\" value=\"65\"><\/progress>\n<h3>-webkit-progress-value<\/h3>\n<pre><code class=\"language-html\">&lt;progress max=\"100\" value=\"65\"&gt;&lt;\/progress&gt;<\/code><\/pre>\n<pre><code class=\"language-css\">progress::-webkit-progress-value {\n    background: red;\n}<\/code><\/pre>\n<progress class=\"two\" max=\"100\" value=\"65\"><\/progress>\n<h2>Example<\/h2>\n<p class=\"codepen\" data-height=\"265\" data-theme-id=\"light\" data-default-tab=\"result\" data-user=\"triss90\" data-slug-hash=\"XWrXRJy\" style=\"height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"HTML Progress Test\">\n  <span>See the Pen <a href=\"https:\/\/codepen.io\/triss90\/pen\/XWrXRJy\/\">\n  HTML Progress Test<\/a> by Tristan  White (<a href=\"https:\/\/codepen.io\/triss90\">@triss90<\/a>)\n  on <a href=\"https:\/\/codepen.io\">CodePen<\/a>.<\/span>\n<\/p>\n<script async src=\"https:\/\/static.codepen.io\/assets\/embed\/ei.js\"><\/script>\n<h2>Browser Support<\/h2>\n<p>The <code>&lt;progress&gt;<\/code> tag is widely supported. Besides iOS Safari which only partly supports it, \nevery other browser offers full support.<\/p>\n<p class=\"ciu_embed\" data-feature=\"progress\" data-periods=\"future_1,current,past_1,past_2\" data-accessible-colours=\"false\">\n  <a href=\"https:\/\/caniuse.com\/#feat=progress\">Method of indicating a progress state.<\/a>\n<\/p>\n<script src=\"https:\/\/cdn.jsdelivr.net\/gh\/ireade\/caniuse-embed\/caniuse-embed.min.js\"><\/script>"],["HTML Output Tag","html-output-tag","26\/09\/2019","html","2019\/09\/26\/html-output-tag\/","<h1>HTML &lt;output&gt; Tag<\/h1>\n<p class='timestamp'><time datetime='26-09-2019'>26-09-2019<\/time><\/p>\n<hr>\n<p>In this final installment of \"what's that weird html tag?\", we're taking a look at the <code>&lt;output&gt;<\/code> tag.<\/p>\n<p>The <code>&lt;output&gt;<\/code> tag provides a method of outputting calculated input data. \nThe output tag could be used when calculating server costs, when showing the result of an interest rate calculation and so on.<\/p>\n<p>The tag is used like so <code>&lt;output name=\"result\"&gt;&lt;\/output&gt;<\/code>, and provides the following attributes:<\/p>\n<ul>\n<li><code>for<\/code>: Allows an explicit relationship to be made between the result of a calculation and the elements \nthat represent the values that went into the calculation or that otherwise influenced the calculation. \nThe value must be a list of IDs (separated by a space) of elements within the same document.<\/li>\n<li><code>form<\/code>: Associates the output with a form.<\/li>\n<li><code>name<\/code>: Specifies the name of this element.<\/li>\n<\/ul>\n<h2>Example<\/h2>\n<style>\n    .full-width {\n        left: 50%;\n        margin-left: -50vw;\n        margin-right: -50vw;\n        max-width: 100vw;\n        position: relative;\n        right: 50%;\n        width: 100vw;\n    }\n    #form-container {\n        box-shadow: 0 0 50px rgba(0,0,0,0.2);\n        padding: 10%;\n        border-radius: 0.5rem;\n        font-size: 1rem;\n    }\n    form#calc {\n        position: relative;\n    }\n    form#calc input {\n        width: 100%;\n    }\n    form#calc input[type=\"number\"],\n    form#calc select {\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        margin-bottom: 1rem;\n        width: 100%;\n        font-size: 1rem;\n        padding: 0.5rem !important;\n        background: white;\n        border: 1px solid #ddd;\n        border-radius: 4px; \n    }\n    #number_one_output {\n        position: absolute;\n        left: 63%;\n    }\n    #calculation {\n        color: green;\n        font-weight: bold;\n        text-decoration-line: underline;\n        text-decoration-style: double;\n    }\n<\/style>\n<div id=\"form-container\">\n    <form id=\"calc\" oninput=\"calculation.value = parseInt(number_one.value)+parseInt(number_two.value)+parseInt(number_three.value); number_one_output.value = parseInt(number_one.value); number_one_output.style.left = parseInt(number_one.value)-2 + '%';\">\n        <output name=\"number_one_output\" id=\"number_one_output\" for=\"number_one\" form=\"calc\">65<\/output><br>\n        <input type=\"range\" name=\"number_one\" id=\"number_one\" value=\"65\"><br>\n        <input type=\"number\" name=\"number_two\" id=\"number_two\" value=\"30\"><br>\n        <select name=\"number_three\" id=\"number_three\">\n            <option value=\"10\">10<\/option>\n            <option value=\"20\">20<\/option>\n            <option value=\"30\">30<\/option>\n            <option value=\"40\">40<\/option>\n            <option value=\"50\">50<\/option>\n            <option value=\"60\">60<\/option>\n            <option value=\"70\">70<\/option>\n            <option value=\"80\">80<\/option>\n            <option value=\"90\">90<\/option>\n            <option value=\"100\">100<\/option><br>\n        <\/select>\n        Output = <output name=\"calculation\" id=\"calculation\" for=\"number_one number_two number_three\" form=\"calc\">105<\/output>\n    <\/form>\n<\/div>\n<h3>Code<\/h3>\n<pre><code class=\"language-html\">&lt;div id=\"form-container\"&gt;\n    &lt;form id=\"calc\" oninput=\"calculation.value = parseInt(number_one.value)+parseInt(number_two.value)+parseInt(number_three.value); number_one_output.value = parseInt(number_one.value); number_one_output.style.left = parseInt(number_one.value)-2 + '%';\"&gt;\n        &lt;output name=\"number_one_output\" id=\"number_one_output\" for=\"number_one\" form=\"calc\"&gt;65&lt;\/output&gt;&lt;br&gt;\n        &lt;input type=\"range\" name=\"number_one\" id=\"number_one\" value=\"65\"&gt;&lt;br&gt;\n        &lt;input type=\"number\" name=\"number_two\" id=\"number_two\" value=\"30\"&gt;&lt;br&gt;\n        &lt;select name=\"number_three\" id=\"number_three\"&gt;\n            &lt;option value=\"10\"&gt;10&lt;\/option&gt;\n            &lt;option value=\"20\"&gt;20&lt;\/option&gt;\n            &lt;option value=\"30\"&gt;30&lt;\/option&gt;\n            &lt;option value=\"40\"&gt;40&lt;\/option&gt;\n            &lt;option value=\"50\"&gt;50&lt;\/option&gt;\n            &lt;option value=\"60\"&gt;60&lt;\/option&gt;\n            &lt;option value=\"70\"&gt;70&lt;\/option&gt;\n            &lt;option value=\"80\"&gt;80&lt;\/option&gt;\n            &lt;option value=\"90\"&gt;90&lt;\/option&gt;\n            &lt;option value=\"100\"&gt;100&lt;\/option&gt;&lt;br&gt;\n        &lt;\/select&gt;\n        Output = &lt;output name=\"calculation\" id=\"calculation\" for=\"number_one number_two number_three\" form=\"calc\"&gt;105&lt;\/output&gt;\n    &lt;\/form&gt;\n&lt;\/div&gt;<\/code><\/pre>\n<h2>Browser Support<\/h2>\n<p>The <code>&lt;output&gt;<\/code> tag is widely supported, only lacking behind in Internet Explorer.<\/p>\n<p>See <a href=\"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/HTML\/Element\/output\">https:\/\/developer.mozilla.org\/<\/a> for more info.<\/p>"],["CSS Target Trick","css-target-trick","02\/10\/2019","html, css","2019\/10\/02\/css-target-trick\/","<script>\ndocument.getElementsByTagName(\"body\")[0].id = \"targetTrick\";\n<\/script>\n<style>\n#targetTrick:target {\n    background: PapayaWhip;\n}\n.darkmode#targetTrick:target {\n    background: DarkSlateGrey;\n}\n<\/style>\n<h1>CSS :target Trick<\/h1>\n<p class='timestamp'><time datetime='02-10-2019'>02-10-2019<\/time><\/p>\n<hr>\n<p>The CSS <code>:target<\/code> trick works by matching the hash(#) in the URL, to the ID of an element. <\/p>\n<p>Consider the following URL <code>https:\/\/triss.dev\/blog\/2019\/10\/02\/css-target-trick\/#targetTrick<\/code><\/p>\n<p>If the page contains an element with the ID of <code>#targetTrick<\/code>, the following selector will match and apply:<\/p>\n<pre><code class=\"language-css\">#targetTrick:target {\n    background: PapayaWhip;\n}<\/code><\/pre>\n<p>Click this link: <a href=\"#targetTrick\" style=\"color: DodgerBlue\">#targetTrick<\/a> and notice how the url now includes\n<code>#targetTrick<\/code> which matches the ID on the body element.<\/p>\n<p>This means that the selector above is valid and the background-color is applied.<\/p>\n<h2>Examples<\/h2>\n<p>You can do lots of awesome things with this trick. Here are a few examples:<\/p>\n<h3>Sidebar navigation<\/h3>\n<p class=\"codepen\" data-height=\"650\" data-theme-id=\"light\" data-default-tab=\"result\" data-user=\"triss90\" data-slug-hash=\"oLGpmx\" style=\"height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"CSS ':target'  Navigation\">\n  <span>See the Pen <a href=\"https:\/\/codepen.io\/triss90\/pen\/oLGpmx\/\">\n  Tabs (checkbox-hack)<\/a> by Tristan  White (<a href=\"https:\/\/codepen.io\/triss90\">@triss90<\/a>)\n  on <a href=\"https:\/\/codepen.io\">CodePen<\/a>.<\/span>\n<\/p>\n<h3>Fluid responsive navigation<\/h3>\n<p class=\"codepen\" data-height=\"650\" data-theme-id=\"light\" data-default-tab=\"result\" data-user=\"triss90\" data-slug-hash=\"GZKRJo\" style=\"height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"Fluid CSS Navigation\">\n  <span>See the Pen <a href=\"https:\/\/codepen.io\/triss90\/pen\/GZKRJo\">\n  Tabs (checkbox-hack)<\/a> by Tristan  White (<a href=\"https:\/\/codepen.io\/triss90\">@triss90<\/a>)\n  on <a href=\"https:\/\/codepen.io\">CodePen<\/a>.<\/span>\n<\/p>\n<script async src=\"https:\/\/static.codepen.io\/assets\/embed\/ei.js\"><\/script>"],["Fixing Whitespace Between Inline Elements","fixing-whitespace-between-inline-elements","11\/03\/2020","html, css","2020\/03\/11\/fixing-whitespace-between-inline-elements\/","<style>\nsection.demo div.test {\n  display: inline-block;\n  padding: 10px;\n  background: #ca3e47;\n}\n<\/style>\n<h1>Fixing Whitespace Between Inline Elements<\/h1>\n<p class='timestamp'><time datetime='11-03-2020'>11-03-2020<\/time><\/p>\n<hr>\n<p>I was messing around with inline elements the other day and stumbled upon a minor annoyance.\nYou see, a series of inline-block elements with no formatting applied, will have spaces in between them.<\/p>\n<p><strong>HTML<\/strong> <\/p>\n<pre><code class=\"language-html\">&lt;section&gt;\n    &lt;div&gt;One&lt;\/div&gt;\n    &lt;div&gt;Two&lt;\/div&gt;\n    &lt;div&gt;Three&lt;\/div&gt;\n    &lt;div&gt;Four&lt;\/div&gt;\n&lt;\/section&gt;<\/code><\/pre>\n<p><strong>CSS<\/strong><\/p>\n<pre><code class=\"language-css\">section div {\n    padding: 10px;\n    background: #ca3e47;\n    display: inline-block;\n}<\/code><\/pre>\n<p>This will result in the following:<\/p>\n<section class=\"demo\">\n    <div class=\"test\">One<\/div>\n    <div class=\"test\">Two<\/div>\n    <div class=\"test\">Three<\/div>\n    <div class=\"test\">Four<\/div>\n<\/section>\n<p>Notice the spaces? Normally you'd want the elements to stay flush against each other to avoid awkward, unclickable gaps.<\/p>\n<p>Luckily there are a few ways to get around this.<\/p>\n<h2>Remove the spaces<\/h2>\n<pre><code class=\"language-html\">&lt;section&gt;\n    &lt;div&gt;\n    One&lt;\/div&gt;&lt;div&gt;\n    Two&lt;\/div&gt;&lt;div&gt;\n    Three&lt;\/div&gt;&lt;div&gt;\n    Four&lt;\/div&gt;\n&lt;\/section&gt;<\/code><\/pre>\n<p>or<\/p>\n<pre><code class=\"language-html\">&lt;section&gt;\n    &lt;div&gt;One&lt;\/div\n    &gt;&lt;div&gt;Two&lt;\/div\n    &gt;&lt;div&gt;Three&lt;\/div\n    &gt;&lt;div&gt;Four&lt;\/div&gt;\n&lt;\/section&gt;<\/code><\/pre>\n<p>or by inserting comments<\/p>\n<pre><code class=\"language-html\">&lt;section&gt;\n    &lt;div&gt;One&lt;\/div&gt;&lt;!--\n    --&gt;&lt;div&gt;Two&lt;\/div&gt;&lt;!--\n    --&gt;&lt;div&gt;Three&lt;\/div&gt;&lt;!--\n    --&gt;&lt;div&gt;Four&lt;\/div&gt;\n&lt;\/section&gt;<\/code><\/pre>\n<p>All of the above will result in the following:<\/p>\n<section class=\"demo\">\n    <div class=\"test\">One<\/div><!--\n    --><div class=\"test\">Two<\/div><!--\n    --><div class=\"test\">Three<\/div><!--\n    --><div class=\"test\">Four<\/div>\n<\/section>\n<p>While none of these solutions are elegant, they get the job done.<\/p>\n<h2>Negative margin<\/h2>\n<p>Another solution is to add negative margin the elements, thus compensating for the space.<\/p>\n<pre><code class=\"language-css\">section div {\n    display: inline-block;\n    margin-right: -7px;\n}<\/code><\/pre>\n<style>\nsection.demo2 div.test2 {\n  display: inline-block;\n  padding: 10px;\n  background: #ca3e47;\n  margin-right: -7px;\n}\n<\/style>\n<p>The above will result in the following:<\/p>\n<section class=\"demo2\">\n    <div class=\"test2\">One<\/div>\n    <div class=\"test2\">Two<\/div>\n    <div class=\"test2\">Three<\/div>\n    <div class=\"test2\">Four<\/div>\n<\/section>\n<h2>Omit the closing tag<\/h2>\n<p>With HTML5 we no longer <em>have<\/em> to add closing tags. While this method will remove the unwanted space, it may introduce other awkward problems.<\/p>\n<pre><code class=\"language-html\">&lt;section&gt;\n    &lt;div&gt;One\n    &lt;div&gt;Two\n    &lt;div&gt;Three\n    &lt;div&gt;Four\n&lt;\/section&gt;<\/code><\/pre>\n<p>The above will result in the following:<\/p>\n<section class=\"demo\">\n    <div class=\"test\">One\n    <div class=\"test\">Two\n    <div class=\"test\">Three\n    <div class=\"test\">Four\n<\/section>\n<h2>Set the fontsize<\/h2>\n<style>\nsection.demo3 {\n    font-size: 0;\n}\ndiv.test3 {\n    display: inline-block;\n    padding: 10px;\n    background: #ca3e47;\n    font-size: calc(1rem + 0.5vw);\n}\n<\/style>\n<pre><code class=\"language-css\">section {\n    font-size: 0;\n}\ndiv {\n    font-size: 16px;\n}<\/code><\/pre>\n<p>The above will result in the following:<\/p>\n<section class=\"demo3\">\n    <div class=\"test3\">One<\/div>\n    <div class=\"test3\">Two<\/div>\n    <div class=\"test3\">Three<\/div>\n    <div class=\"test3\">Four<\/div>\n<\/section>"],["CSS Scroll Snap","css-scroll-snap","14\/04\/2020","html, css","2020\/04\/14\/css-scroll-snap\/","<h1>CSS Scroll Snap<\/h1>\n<p class='timestamp'><time datetime='14-04-2020'>14-04-2020<\/time><\/p>\n<hr>\n<p>Ever wondered if you could make a CSS-only carousel or image gallery, without the use of awkward hacks? \nWell it's 2020 and you can!<\/p>\n<p>The new(ish) CSS <code>scroll-snap-type<\/code> lets you do just that.<\/p>\n<style>\niframe.example {\n    width: 100%;\n    border: 0;\n    height: 35vh;\n}\n<\/style>\n<iframe class=\"example\" src=\"..\/..\/..\/..\/..\/examples\/css-scroll-snap.php\"><\/iframe>\n<p>If you want to play around with CSS Scroll snap, you can do so using the example above, on CodePen: <\/p>\n<p class=\"codepen\" data-height=\"265\" data-theme-id=\"dark\" data-default-tab=\"css\" data-user=\"triss90\" data-slug-hash=\"bGVNLww\" style=\"height: 265px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"CSS Scroll Snap\">\n  <span>See the Pen <a href=\"https:\/\/codepen.io\/triss90\/pen\/bGVNLww\">\n  CSS Scroll Snap<\/a> by Tristan  White (<a href=\"https:\/\/codepen.io\/triss90\">@triss90<\/a>)\n  on <a href=\"https:\/\/codepen.io\">CodePen<\/a>.<\/span>\n<\/p>\n<script async src=\"https:\/\/static.codepen.io\/assets\/embed\/ei.js\"><\/script>\n<h2>Browser Support<\/h2>\n<p>CSS scroll snap has wide support, with the exception of Internet Explorer and a few mobile browsers<\/p>\n<p class=\"ciu_embed\" data-feature=\"css-snappoints\" data-periods=\"future_1,current,past_1,past_2\" data-accessible-colours=\"false\">\n  <a href=\"https:\/\/caniuse.com\/#feat=css-snappoints\">CSS technique that allows customizable scrolling experiences like pagination of carousels by setting defined snap positions.<\/a>\n<\/p>\n<script async src=\"https:\/\/static.codepen.io\/assets\/embed\/ei.js\"><\/script>\n<script src=\"https:\/\/cdn.jsdelivr.net\/gh\/ireade\/caniuse-embed\/caniuse-embed.min.js\"><\/script>\n<p>To learn more about CSS Scroll Snap, please refer to the docs on <a href=\"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/CSS\/scroll-snap-type\" target=\"_blank\" rel=\"noopener\"><a href=\"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/CSS\/scroll-snap-type\">https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/CSS\/scroll-snap-type<\/a><\/a><\/p>"],["Fluid Typography","fluid-typography","20\/05\/2020","html, css","2020\/05\/20\/fluid-typography\/","<style>\n.fluid-text, .fluid-text pre code, .fluid-text code {\n    font-size: clamp(1rem, 2.5vw, 1.5rem);\n}\n<\/style>\n<div class=\"fluid-text\">\n<h1>Fluid Typography<\/h1>\n<p class='timestamp'><time datetime='20-05-2020'>20-05-2020<\/time><\/p>\n<hr>\n<p>Fluid typography has long been something I've wanted to implement in my projects. \nThere's never been an elegant way of going about doing this though.<\/p>\n<p>To achieve fluid typography, you typically need to use some obsucre combination of media queries and css <code>calc()<\/code> like this:<\/p>\n<pre><code class=\"language-css\">html {\n  font-size: 16px;\n}\n@media screen and (min-width: 320px) {\n  html {\n    font-size: calc(16px + 6 * ((100vw - 320px) \/ 680));\n  }\n}\n@media screen and (min-width: 1000px) {\n  html {\n    font-size: 22px;\n  }\n}<\/code><\/pre>\n<p>This works, and works quite well. It scales the font-size from a minimum of 16px (at a 320px viewport) \nto a maximum of 22px (at a 1000px viewport)<\/p>\n<p>Writing this, however, is both cumbersome and annoying. It forces the developer to decide on screen sizes and and uses \"magic numbers\" liberally.<\/p>\n<p>Fear not... There's a better way. <code>clamp()<\/code>.<\/p>\n<p>If you're reading this article on a desktop device, you may have noticed that the typography is suspiciously large. <\/p>\n<p>Try resizing the window, and you'll see the font-size scale accordingly. <\/p>\n<p>I've implemented the following code on this specific page, to make the typography fluid<\/p>\n<pre><code class=\"language-css\">.fluid-text {\n    font-size: clamp(1rem, 2.5vw, 1.5rem);\n}<\/code><\/pre>\n<p>CSS <code>clamp()<\/code> takes 3 values. A minimum value, a preferred value, and a maximum allowed value. \nThe clamp() CSS function simply clamps a value between the minimum and maximum value.<\/p>\n<p>You can play around with an example on Codepen:<\/p>\n<p class=\"codepen\" data-height=\"270\" data-theme-id=\"light\" data-default-tab=\"css,result\" data-user=\"triss90\" data-slug-hash=\"ZEbmdEO\" data-editable=\"true\" style=\"height: 270px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\" data-pen-title=\"css clamp()\">\n  <span>See the Pen <a href=\"https:\/\/codepen.io\/triss90\/pen\/ZEbmdEO\">\n  css clamp()<\/a> by Tristan  White (<a href=\"https:\/\/codepen.io\/triss90\">@triss90<\/a>)\n  on <a href=\"https:\/\/codepen.io\">CodePen<\/a>.<\/span>\n<\/p>\n<h2>Browser support<\/h2>\n<p>As of the writing of this article, CSS <code>clamp()<\/code> isn't supported in Safari, Internet Explorer and a number of other mobile browsers. \nSo, we're probably stuck with the bloated method above, for the foreseeable future.<\/p>\n<p class=\"ciu_embed\" data-feature=\"mdn-css__types__clamp\" data-periods=\"future_1,current,past_1,past_2\" data-accessible-colours=\"false\">\n  <a href=\"https:\/\/caniuse.com\/#feat=mdn-css_types_clamp\">he clamp() CSS function clamps a value between an upper and lower bound. clamp() enables selecting a middle value within a range of values between a defined minimum and maximum.<\/a>\n<\/p>\n<script async src=\"https:\/\/static.codepen.io\/assets\/embed\/ei.js\"><\/script>\n<script src=\"https:\/\/cdn.jsdelivr.net\/gh\/ireade\/caniuse-embed\/caniuse-embed.min.js\"><\/script>\n<\/div>"],["AVIF Image","avif-image","15\/09\/2020","html","2020\/09\/15\/avif-image\/","<style>\n<\/style>\n<h1>AVIF Image Format<\/h1>\n<p class='timestamp'><time datetime='20-05-2020'>20-05-2020<\/time><\/p>\n<hr>\n<p>Google Chrome just added support for the new AVIF image format.<\/p>\n<p>The AVIF Image format is a modern image format based on the AV1 video format. AVIF generally has better compression than WebP, JPEG, PNG and GIF and is designed to supersede them. <\/p>\n<p>My preliminary tests show an easy reduction in size by a factor of 10. Take the following examples:<\/p>\n<h2>bruce.jpg (221KB)<\/h2>\n<img src=\"https:\/\/triss.dev\/examples\/bruce.jpg\" alt=\"Cute pug on couch\">\n<h2>bruce.avif (24KB)<\/h2>\n<img src=\"https:\/\/triss.dev\/examples\/bruce.avif\" alt=\"Cute pug on couch\">\n<h2>Browser support<\/h2>\n<p>The AVIF image format is currently only supported by Chrome, but can easily be used with backwards compatible jpgs like so:<\/p>\n<pre><code class=\"language-html\">&lt;picture&gt;\n    &lt;source type=\"image\/avif\" srcset=\"https:\/\/triss.dev\/examples\/bruce.avif\"&gt;\n    &lt;img src=\"https:\/\/triss.dev\/examples\/bruce.jpg\" alt=\"Cute pug on couch\"&gt;\n&lt;\/picture&gt;<\/code><\/pre>\n<p class=\"ciu_embed\" data-feature=\"avif\" data-periods=\"future_1,current,past_1,past_2\" data-accessible-colours=\"false\">\n  <a href=\"https:\/\/caniuse.com\/#feat=mdn-avif\">A modern image format based on the AV1 video format. AVIF generally has better compression than WebP, JPEG, PNG and GIF and is designed to supersede them.<\/a>\n<\/p>\n<script async src=\"https:\/\/static.codepen.io\/assets\/embed\/ei.js\"><\/script>\n<script src=\"https:\/\/cdn.jsdelivr.net\/gh\/ireade\/caniuse-embed\/caniuse-embed.min.js\"><\/script>"],["HSL Simplified","hsl-simplified","22\/03\/2021","html, css, colors","2021\/03\/22\/hsl-simplified\/","<style>\n.hsl-container {\n  width: 100%;\n  padding: 1.5rem;\n  background: rgba(0, 0, 0, 0.7);\n  border-radius: 0.5rem;\n  color: white;\n  margin: 0 auto;\n}\n.hsl-container .hsl-slider {\n  width: 100%;\n  height: 25px;\n  background: black;\n  outline: none;\n  opacity: 0.7;\n  -webkit-appearance: none;\n  transition: opacity 0.2s;\n  border-radius: 1.5rem;\n}\n.hsl-container .hsl-slider::hover {\n  opacity: 1;\n}\n.hsl-container .hsl-slider::-webkit-slider-thumb {\n  -webkit-appearance: none;\n  appearance: none;\n  width: 25px;\n  height: 25px;\n  border-radius: 50%;\n  background: #0affca;\n  cursor: pointer;\n}\n.hsl-container .hsl-slider::-moz-range-thumb {\n  width: 25px;\n  height: 25px;\n  border-radius: 50%;\n  background: #0affca;\n  cursor: pointer;\n}\n#color_circle {\n  max-width: 96%;\n  width: auto;\n  height: auto;\n  margin: 0 auto;\n  background: none !important;\n}\n.full-width {\n  left: 50%;\n  margin-left: -50vw;\n  margin-right: -50vw;\n  max-width: 100vw;\n  position: relative;\n  right: 50%;\n  width: 100vw;\n}\n.sat-example,\n.light-example {\n  display: flex;\n}\n.sat-example .box,\n.light-example .box {\n  display: grid;\n  align-items: center;\n  justify-content: center;\n  width: 20%;\n  height: 100px;\n}\n.sat-example .box.one {\n  background-color: hsl(0, 100%, 50%);\n}\n.sat-example .box.two {\n  background-color: hsl(0, 75%, 50%);\n}\n.sat-example .box.three {\n  background-color: hsl(0, 50%, 50%);\n}\n.sat-example .box.four {\n  background-color: hsl(0, 25%, 50%);\n}\n.sat-example .box.five {\n  background-color: hsl(0, 0%, 50%);\n}\n.light-example .box.one {\n  background-color: hsl(0, 100%, 100%);\n  color: black;\n}\n.light-example .box.two {\n  background-color: hsl(0, 100%, 75%);\n  color: black;\n}\n.light-example .box.three {\n  background-color: hsl(0, 100%, 50%);\n  color: black;\n}\n.light-example .box.four {\n  background-color: hsl(0, 100%, 25%);\n  color: white;\n}\n.light-example .box.five {\n  background-color: hsl(0, 100%, 0%);\n  color: white;\n}\nbody.darkmode #circle32 {\n  fill: #19191a;\n}\nbody.darkmode #color_circle path.text {\n  fill: white !important;\n  stroke: white !important;\n}\nbody.darkmode #color_circle path.arrow {\n  stroke: white !important;\n}\n<\/style>\n<h1>HSL Simplified<\/h1>\n<p class='timestamp'><time datetime='22-03-2021'>22-03-2021<\/time><\/p>\n<hr>\n<h2>What is HSL?<\/h2>\n<p>The HSL color model uses the color wheel, making it far more intuitive to use than RGB, HEX and the like. \nYou can guess at the colors you want, and then tweak them as you see fit. \nIt's also easier to pair colors of the same light-, darkness and saturation, as you can simply tweak the hue.<\/p>\n<p>HSL is simply used like so in CSS<\/p>\n<pre><code>background-color: hsl(H,S,L);<\/code><\/pre>\n<p><strong>H<\/strong> = Hue <br>\n<strong>S<\/strong> = Saturation <br>\n<strong>L<\/strong> = Lightness <br><\/p>\n<h2>Hue<\/h2>\n<p>Hue is represented as an angle of the color wheel (You'll know this as the rainbow represented in a circle).\nThe angle is measured in degrees(0-360). Your reds are on either end of the spectrum(0 and 360) with all colors in between, \nso <code>green = 120<\/code>, <code>blue = 240<\/code> and so on.<\/p>\n<div class=\"full-width\">\n<svg width=\"974\" height=\"701\" id=\"color_circle\" viewBox=\"0 0 974 701\" fill=\"none\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\">\n<g clip-path=\"url(#clip0)\">\n  <path d=\"M712.998 369.94C713.193 415.94 702.865 455.147 680.034 495.081L652.936 503.08L463 371L695.784 351.76L712.998 369.94Z\" fill=\"#FEFE33\"\/>\n  <path d=\"M587.081 153.966C627.015 176.797 655.806 205.344 678.975 245.083L673.242 269.294L463 371L563.101 160.048L587.081 153.966Z\" fill=\"#FB9902\"\/>\n  <path d=\"M678.975 245.083C702.143 284.823 712.803 323.941 712.998 369.94L463 371L678.975 245.083Z\" fill=\"#FABC02\"\/>\n  <path d=\"M337.083 155.025C376.823 131.857 415.941 121.197 461.94 121.002L482.925 143.058L463 371L329.78 180.851L337.083 155.025Z\" fill=\"#FE2712\"\/>\n  <path d=\"M461.94 121.002C507.94 120.807 547.147 131.135 587.081 153.966L463 371L461.94 121.002Z\" fill=\"#FD5308\"\/>\n  <path d=\"M213.002 372.06C212.807 326.06 223.135 286.853 245.966 246.919L277.597 235.946L463 371L235.692 393.238L213.002 372.06Z\" fill=\"#8601AF\"\/>\n  <path d=\"M245.966 246.919C268.797 206.985 297.344 178.194 337.083 155.025L463 371L245.966 246.919Z\" fill=\"#A7194B\"\/>\n  <path d=\"M338.919 588.034C298.985 565.203 270.194 536.656 247.025 496.917L256.221 470.189L463 371L366.819 583.207L338.919 588.034Z\" fill=\"#0247FE\"\/>\n  <path d=\"M247.025 496.917C223.857 457.177 213.197 418.059 213.002 372.06L463 371L247.025 496.917Z\" fill=\"#3D01A4\"\/>\n  <path d=\"M588.917 586.974C549.177 610.143 510.059 620.803 464.06 620.998L444.453 600.225L463 371L594.736 562.014L588.917 586.974Z\" fill=\"#66B032\"\/>\n  <path d=\"M464.06 620.998C418.06 621.193 378.853 610.865 338.919 588.034L463 371L464.06 620.998Z\" fill=\"#0391CE\"\/>\n  <path d=\"M680.034 495.081C657.203 535.015 628.656 563.806 588.917 586.974L463 371L680.034 495.081Z\" fill=\"#D0EA2B\"\/>\n<\/g>\n<path d=\"M423.825 519.723C505.962 541.359 590.087 492.312 611.723 410.175C633.359 328.038 584.312 243.913 502.175 222.277C420.038 200.641 335.913 249.687 314.277 331.825C292.641 413.962 341.687 498.087 423.825 519.723Z\" id=\"circle32\" fill=\"white\"\/>\n<path class=\"arrow\" d=\"M694.712 534.984C700.91 555.184 713.317 583.542 704.219 604.511C700.149 613.892 683.911 625.91 673.943 614.369C642.448 577.906 873.733 521.508 890.998 516.894\" stroke=\"black\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\/>\n<path class=\"arrow\" d=\"M706.929 538.683C700.198 536.452 697.771 530.497 691.923 527.274C691.254 531.933 689.424 541.324 685.805 545.058\" stroke=\"black\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\/>\n<path class=\"arrow\" d=\"M468.926 97.809C506.234 44.2108 568.993 23.1277 642 28.9331M463 88.6748C465.831 94.4462 462.409 99.8923 463.763 105.746C468.252 103.132 477.648 98.1711 483.424 98.0519\" stroke=\"black\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\/>\n<path class=\"arrow\" d=\"M90.6859 649.552C119.823 663.453 161.252 642.473 168.562 603.81C170.478 593.667 173.357 573.746 164.076 567.441C143.716 553.614 134.245 617.489 167.447 609.092C181.178 605.617 192.361 590.217 201.151 578.055C211.589 563.62 220.561 547.762 231 533.329\" stroke=\"black\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\/>\n<path class=\"arrow\" d=\"M238.314 550.73C234.717 540.431 238.861 530.616 237.093 520.144C231.581 524.901 220.038 533.945 212.895 534.251\" stroke=\"black\" stroke-width=\"1.5\" stroke-miterlimit=\"10\" stroke-linecap=\"round\" stroke-linejoin=\"round\"\/>\n<path class=\"text\" d=\"M663.531 38.2812C662.594 37.6823 661.852 36.9401 661.305 36.0547C660.758 35.1432 660.484 34.1667 660.484 33.125C660.484 32.0833 660.641 30.8464 660.953 29.4141C661.266 27.9818 661.656 26.6536 662.125 25.4297C662.62 24.2057 663.206 23.0208 663.883 21.875C664.586 20.7292 665.38 19.7135 666.266 18.8281C668.219 16.9271 670.432 15.9766 672.906 15.9766C676.24 15.9766 678.792 17.2005 680.562 19.6484C682.203 21.862 683.023 24.6094 683.023 27.8906C683.023 31.7708 681.786 34.7917 679.312 36.9531C676.891 39.0365 673.674 40.0781 669.664 40.0781C667.346 40.0781 665.302 39.4792 663.531 38.2812ZM662.789 32.8516C662.789 36.3672 665.289 38.125 670.289 38.125C673.883 38.125 676.578 37.2005 678.375 35.3516C680.198 33.5026 681.109 30.8724 681.109 27.4609C681.109 27.3568 681.109 27.2526 681.109 27.1484C681.109 24.1536 680.367 21.862 678.883 20.2734C677.398 18.6849 675.367 17.8906 672.789 17.8906C672.503 17.8906 672.242 17.8906 672.008 17.8906C671.799 17.8906 671.604 17.8906 671.422 17.8906C670.042 17.8906 668.674 18.8281 667.32 20.7031C666.044 22.4219 664.951 24.6224 664.039 27.3047C663.206 29.7526 662.789 31.6016 662.789 32.8516ZM686.695 28.8672C686.174 28.4766 685.797 28.0859 685.562 27.6953C685.328 27.3047 685.211 26.7578 685.211 26.0547C685.211 25.3516 685.367 24.7396 685.68 24.2188C686.227 23.3594 687.008 22.9297 688.023 22.9297C689.378 22.9297 690.458 23.4766 691.266 24.5703C691.63 25.0391 691.852 25.5729 691.93 26.1719C691.93 27.5 691.656 28.3854 691.109 28.8281C690.589 29.2448 689.781 29.4531 688.688 29.4531C687.906 29.4531 687.242 29.2578 686.695 28.8672ZM690.094 25.5469C689.495 24.9219 688.857 24.6094 688.18 24.6094C687.372 24.6094 686.891 25 686.734 25.7812C686.734 25.8594 686.734 26.0286 686.734 26.2891C686.734 26.5234 686.891 26.901 687.203 27.4219C687.672 27.8125 688.036 28.0208 688.297 28.0469C688.557 28.0729 688.792 28.0859 689 28.0859C689.234 28.0859 689.482 27.9818 689.742 27.7734C690.133 27.513 690.328 27.1745 690.328 26.7578C690.328 26.3151 690.25 25.9115 690.094 25.5469ZM733.336 37.0312C733.336 37.7604 732.763 38.125 731.617 38.125C730.862 38.125 729.885 37.7734 728.688 37.0703C728.245 36.8099 727.789 36.5755 727.32 36.3672C726.878 36.1328 726.383 36.0156 725.836 36.0156C725.029 36.4323 724.143 36.901 723.18 37.4219C719.846 39.1927 716.917 40.0781 714.391 40.0781L713.141 40C713.115 40 713.036 40 712.906 40C712.802 40 712.529 39.9479 712.086 39.8438C710.94 39.5573 710.081 39.1536 709.508 38.6328C709.326 38.4505 709.234 38.2812 709.234 38.125C709.234 37.9427 709.26 37.7995 709.312 37.6953L716.422 26.3672C715.276 24.388 714.56 22.9948 714.273 22.1875C713.857 20.9115 713.648 19.4141 713.648 17.6953C713.857 15.0391 714.742 12.8385 716.305 11.0938C717.529 9.76562 718.753 9.10156 719.977 9.10156C720.914 9.10156 721.63 9.55729 722.125 10.4688C722.464 11.0417 722.633 11.849 722.633 12.8906C722.633 15.9375 721.201 20.2083 718.336 25.7031C718.414 26.7448 719.638 28.2552 722.008 30.2344C723.154 31.1979 724.13 31.9141 724.938 32.3828C725.745 32.8516 726.253 33.0859 726.461 33.0859C727.945 32.2526 728.961 31.5625 729.508 31.0156C730.055 30.4688 730.458 30.026 730.719 29.6875C730.979 29.349 731.266 28.9844 731.578 28.5938C732.359 27.5781 733.297 26.5625 734.391 25.5469C734.651 25.5469 734.938 25.6771 735.25 25.9375C735.562 26.1719 735.706 26.3281 735.68 26.4062C735.654 26.4583 735.536 26.6797 735.328 27.0703C735.12 27.4609 734.742 27.9948 734.195 28.6719C732.789 30.3906 730.745 32.2266 728.062 34.1797C731.578 35.9245 733.336 36.875 733.336 37.0312ZM712.164 37.5781C712.164 38.0469 712.385 38.2812 712.828 38.2812C712.906 38.2812 713.245 38.2812 713.844 38.2812C714.469 38.2552 715.237 38.1771 716.148 38.0469C717.086 37.8906 717.984 37.6693 718.844 37.3828C720.328 36.888 722.099 36.0286 724.156 34.8047L717.672 28.3203C717.047 28.9453 716.318 29.8828 715.484 31.1328C713.271 34.362 712.164 36.5104 712.164 37.5781ZM717.047 23.7891C718.245 23.112 719.182 21.5625 719.859 19.1406C720.38 17.2917 720.641 15.4297 720.641 13.5547L720.68 12.5391C720.68 12.0703 720.562 11.7708 720.328 11.6406C720.12 11.5104 719.729 11.4453 719.156 11.4453C718.609 11.4453 718.089 11.6927 717.594 12.1875C717.099 12.6562 716.695 13.2422 716.383 13.9453C715.81 15.2214 715.523 16.7969 715.523 18.6719C715.523 20.5469 716.031 22.2526 717.047 23.7891ZM770.68 20.1953C770.68 21.7578 769.43 23.5938 766.93 25.7031C766.305 26.1979 765.771 26.6406 765.328 27.0312C768.531 27.0833 770.445 27.8385 771.07 29.2969C771.201 29.6354 771.266 29.987 771.266 30.3516C771.266 30.7161 771.161 31.2109 770.953 31.8359C770.771 32.4349 770.367 33.151 769.742 33.9844C769.117 34.8177 768.362 35.625 767.477 36.4062C765.628 38.0208 763.674 39.1406 761.617 39.7656C760.914 39.974 760.341 40.0781 759.898 40.0781C759.482 40.0781 759.143 40.0651 758.883 40.0391C758.622 40.0391 758.349 39.9609 758.062 39.8047C757.776 39.6484 757.633 39.388 757.633 39.0234C759.586 38.5286 761.305 37.8255 762.789 36.9141C764.273 36.0026 765.445 35.0521 766.305 34.0625C767.32 32.8385 767.828 31.8229 767.828 31.0156C767.828 30.2083 767.581 29.6615 767.086 29.375C766.591 29.0885 765.953 28.9453 765.172 28.9453C763.193 28.9453 760.497 29.7526 757.086 31.3672L755.719 29.6094C763.609 25.9635 767.555 23.3464 767.555 21.7578C767.555 21.0807 766.812 20.638 765.328 20.4297C763.792 20.4297 762.034 20.6901 760.055 21.2109C758.102 21.7318 756.591 22.1094 755.523 22.3438C754.456 22.5781 753.362 22.6953 752.242 22.6953C752.242 21.4714 752.542 20.7552 753.141 20.5469C754.234 20.2865 755.393 20 756.617 19.6875C760.628 18.6719 763.831 18.1641 766.227 18.1641C768.648 18.1641 770.133 18.8411 770.68 20.1953ZM773.062 28.9844C773.062 28.8542 773.062 28.5026 773.062 27.9297C773.062 27.3307 773.232 26.4714 773.57 25.3516C773.909 24.2318 774.378 23.138 774.977 22.0703C775.602 20.9766 776.318 19.9479 777.125 18.9844C777.958 18.0208 778.857 17.1615 779.82 16.4062C781.904 14.8177 783.987 14.0234 786.07 14.0234C786.435 14.0234 786.734 14.0885 786.969 14.2188C787.203 14.349 787.32 14.5573 787.32 14.8438C787.32 15.1042 787.32 15.2865 787.32 15.3906C784.195 15.9635 781.578 17.5781 779.469 20.2344C777.359 22.8646 776.305 25.7812 776.305 28.9844C776.305 30.026 776.552 31.1068 777.047 32.2266C777.568 33.3464 778.036 34.1797 778.453 34.7266C778.896 35.2474 779.378 35.5078 779.898 35.5078C780.315 35.1693 780.784 34.7266 781.305 34.1797C781.852 33.6328 782.451 33.0469 783.102 32.4219C783.779 31.7708 784.508 31.1328 785.289 30.5078C786.07 29.8568 786.891 29.2708 787.75 28.75C789.677 27.6042 791.617 27.0052 793.57 26.9531C794.456 26.9531 795.159 27.3438 795.68 28.125C796.174 28.8802 796.422 29.7135 796.422 30.625C796.031 33.776 794.547 36.224 791.969 37.9688C789.859 39.4271 787.438 40.1562 784.703 40.1562C783.01 40.1562 781.448 39.8698 780.016 39.2969C777.099 38.151 775.055 36.1979 773.883 33.4375C773.336 32.1354 773.062 30.651 773.062 28.9844ZM793.844 30.8984C793.844 30.013 793.427 29.5703 792.594 29.5703C791.76 29.5703 790.836 29.8828 789.82 30.5078C788.831 31.1328 787.854 31.862 786.891 32.6953C785.641 33.737 784.156 35.1823 782.438 37.0312C782.906 37.1094 783.414 37.1484 783.961 37.1484C784.534 37.1484 785.302 37.0833 786.266 36.9531C787.229 36.8229 788.297 36.4974 789.469 35.9766C790.641 35.4557 791.643 34.7786 792.477 33.9453C793.31 33.0859 793.766 32.0703 793.844 30.8984ZM801.812 38.2812C800.875 37.6823 800.133 36.9401 799.586 36.0547C799.039 35.1432 798.766 34.1667 798.766 33.125C798.766 32.0833 798.922 30.8464 799.234 29.4141C799.547 27.9818 799.938 26.6536 800.406 25.4297C800.901 24.2057 801.487 23.0208 802.164 21.875C802.867 20.7292 803.661 19.7135 804.547 18.8281C806.5 16.9271 808.714 15.9766 811.188 15.9766C814.521 15.9766 817.073 17.2005 818.844 19.6484C820.484 21.862 821.305 24.6094 821.305 27.8906C821.305 31.7708 820.068 34.7917 817.594 36.9531C815.172 39.0365 811.956 40.0781 807.945 40.0781C805.628 40.0781 803.583 39.4792 801.812 38.2812ZM801.07 32.8516C801.07 36.3672 803.57 38.125 808.57 38.125C812.164 38.125 814.859 37.2005 816.656 35.3516C818.479 33.5026 819.391 30.8724 819.391 27.4609C819.391 27.3568 819.391 27.2526 819.391 27.1484C819.391 24.1536 818.648 21.862 817.164 20.2734C815.68 18.6849 813.648 17.8906 811.07 17.8906C810.784 17.8906 810.523 17.8906 810.289 17.8906C810.081 17.8906 809.885 17.8906 809.703 17.8906C808.323 17.8906 806.956 18.8281 805.602 20.7031C804.326 22.4219 803.232 24.6224 802.32 27.3047C801.487 29.7526 801.07 31.6016 801.07 32.8516ZM824.977 28.8672C824.456 28.4766 824.078 28.0859 823.844 27.6953C823.609 27.3047 823.492 26.7578 823.492 26.0547C823.492 25.3516 823.648 24.7396 823.961 24.2188C824.508 23.3594 825.289 22.9297 826.305 22.9297C827.659 22.9297 828.74 23.4766 829.547 24.5703C829.911 25.0391 830.133 25.5729 830.211 26.1719C830.211 27.5 829.938 28.3854 829.391 28.8281C828.87 29.2448 828.062 29.4531 826.969 29.4531C826.188 29.4531 825.523 29.2578 824.977 28.8672ZM828.375 25.5469C827.776 24.9219 827.138 24.6094 826.461 24.6094C825.654 24.6094 825.172 25 825.016 25.7812C825.016 25.8594 825.016 26.0286 825.016 26.2891C825.016 26.5234 825.172 26.901 825.484 27.4219C825.953 27.8125 826.318 28.0208 826.578 28.0469C826.839 28.0729 827.073 28.0859 827.281 28.0859C827.516 28.0859 827.763 27.9818 828.023 27.7734C828.414 27.513 828.609 27.1745 828.609 26.7578C828.609 26.3151 828.531 25.9115 828.375 25.5469Z\" fill=\"black\"\/>\n<path class=\"text\" d=\"M912.094 516.375C912.094 515.88 912.107 515.112 912.133 514.07C912.185 513.003 912.224 511.805 912.25 510.477C912.302 509.148 912.354 507.755 912.406 506.297C912.458 504.839 912.497 503.445 912.523 502.117C912.576 500.789 912.615 499.604 912.641 498.562C912.667 497.521 912.693 496.74 912.719 496.219C912.667 495.646 912.771 495.281 913.031 495.125C913.292 494.969 913.578 494.891 913.891 494.891C914.229 494.891 914.516 494.917 914.75 494.969C915.01 495.021 915.193 495.229 915.297 495.594L914.672 515.672C914.62 516.141 914.255 516.479 913.578 516.688C912.901 516.87 912.406 516.766 912.094 516.375ZM937.133 510.477C937.992 510.477 938.422 510.802 938.422 511.453C938.422 512.104 938.135 512.586 937.562 512.898C936.99 513.185 936.339 513.393 935.609 513.523C934.906 513.654 934.242 513.732 933.617 513.758C932.992 513.758 932.589 513.784 932.406 513.836C932.25 513.862 931.872 513.966 931.273 514.148C930.701 514.305 930.01 514.5 929.203 514.734C928.396 514.943 927.523 515.177 926.586 515.438C923.643 516.219 921.299 516.609 919.555 516.609C918.669 516.609 918.07 516.479 917.758 516.219C917.471 515.932 917.419 515.542 917.602 515.047C919.555 513.328 921.586 511.115 923.695 508.406C926.846 504.37 928.422 501.219 928.422 498.953C928.422 498.51 928.357 498.094 928.227 497.703C927.94 496.896 927.198 496.375 926 496.141C924.854 496.141 923.917 496.375 923.188 496.844C922.458 497.312 921.768 497.833 921.117 498.406C920.492 498.979 919.841 499.5 919.164 499.969C918.513 500.438 917.706 500.672 916.742 500.672C916.768 499.812 917.12 498.979 917.797 498.172C919.151 496.505 921.065 495.307 923.539 494.578C924.424 494.292 925.128 494.148 925.648 494.148C926.169 494.148 926.56 494.161 926.82 494.188C927.836 494.292 928.708 494.656 929.438 495.281C930.167 495.906 930.596 496.87 930.727 498.172C930.727 501.844 929.008 505.919 925.57 510.398C924.633 511.622 923.708 512.755 922.797 513.797C923.083 513.823 923.526 513.836 924.125 513.836C924.75 513.836 925.596 513.693 926.664 513.406C927.732 513.094 928.865 512.729 930.062 512.312C931.26 511.87 932.445 511.453 933.617 511.062C934.789 510.672 935.961 510.477 937.133 510.477ZM943.539 515.281C942.602 514.682 941.859 513.94 941.312 513.055C940.766 512.143 940.492 511.167 940.492 510.125C940.492 509.083 940.648 507.846 940.961 506.414C941.273 504.982 941.664 503.654 942.133 502.43C942.628 501.206 943.214 500.021 943.891 498.875C944.594 497.729 945.388 496.714 946.273 495.828C948.227 493.927 950.44 492.977 952.914 492.977C956.247 492.977 958.799 494.201 960.57 496.648C962.211 498.862 963.031 501.609 963.031 504.891C963.031 508.771 961.794 511.792 959.32 513.953C956.898 516.036 953.682 517.078 949.672 517.078C947.354 517.078 945.31 516.479 943.539 515.281ZM942.797 509.852C942.797 513.367 945.297 515.125 950.297 515.125C953.891 515.125 956.586 514.201 958.383 512.352C960.206 510.503 961.117 507.872 961.117 504.461C961.117 504.357 961.117 504.253 961.117 504.148C961.117 501.154 960.375 498.862 958.891 497.273C957.406 495.685 955.375 494.891 952.797 494.891C952.51 494.891 952.25 494.891 952.016 494.891C951.807 494.891 951.612 494.891 951.43 494.891C950.049 494.891 948.682 495.828 947.328 497.703C946.052 499.422 944.958 501.622 944.047 504.305C943.214 506.753 942.797 508.602 942.797 509.852ZM966.703 505.867C966.182 505.477 965.805 505.086 965.57 504.695C965.336 504.305 965.219 503.758 965.219 503.055C965.219 502.352 965.375 501.74 965.688 501.219C966.234 500.359 967.016 499.93 968.031 499.93C969.385 499.93 970.466 500.477 971.273 501.57C971.638 502.039 971.859 502.573 971.938 503.172C971.938 504.5 971.664 505.385 971.117 505.828C970.596 506.245 969.789 506.453 968.695 506.453C967.914 506.453 967.25 506.258 966.703 505.867ZM970.102 502.547C969.503 501.922 968.865 501.609 968.188 501.609C967.38 501.609 966.898 502 966.742 502.781C966.742 502.859 966.742 503.029 966.742 503.289C966.742 503.523 966.898 503.901 967.211 504.422C967.68 504.812 968.044 505.021 968.305 505.047C968.565 505.073 968.799 505.086 969.008 505.086C969.242 505.086 969.49 504.982 969.75 504.773C970.141 504.513 970.336 504.174 970.336 503.758C970.336 503.315 970.258 502.911 970.102 502.547Z\" fill=\"black\"\/>\n<path class=\"text\" d=\"M21.0156 650.477C21.875 650.477 22.3047 650.802 22.3047 651.453C22.3047 652.104 22.0182 652.586 21.4453 652.898C20.8724 653.185 20.2214 653.393 19.4922 653.523C18.7891 653.654 18.125 653.732 17.5 653.758C16.875 653.758 16.4714 653.784 16.2891 653.836C16.1328 653.862 15.7552 653.966 15.1562 654.148C14.5833 654.305 13.8932 654.5 13.0859 654.734C12.2786 654.943 11.4062 655.177 10.4688 655.438C7.52604 656.219 5.18229 656.609 3.4375 656.609C2.55208 656.609 1.95312 656.479 1.64062 656.219C1.35417 655.932 1.30208 655.542 1.48438 655.047C3.4375 653.328 5.46875 651.115 7.57812 648.406C10.7292 644.37 12.3047 641.219 12.3047 638.953C12.3047 638.51 12.2396 638.094 12.1094 637.703C11.8229 636.896 11.0807 636.375 9.88281 636.141C8.73698 636.141 7.79948 636.375 7.07031 636.844C6.34115 637.312 5.65104 637.833 5 638.406C4.375 638.979 3.72396 639.5 3.04688 639.969C2.39583 640.438 1.58854 640.672 0.625 640.672C0.651042 639.812 1.0026 638.979 1.67969 638.172C3.03385 636.505 4.94792 635.307 7.42188 634.578C8.30729 634.292 9.01042 634.148 9.53125 634.148C10.0521 634.148 10.4427 634.161 10.7031 634.188C11.7188 634.292 12.5911 634.656 13.3203 635.281C14.0495 635.906 14.4792 636.87 14.6094 638.172C14.6094 641.844 12.8906 645.919 9.45312 650.398C8.51562 651.622 7.59115 652.755 6.67969 653.797C6.96615 653.823 7.40885 653.836 8.00781 653.836C8.63281 653.836 9.47917 653.693 10.5469 653.406C11.6146 653.094 12.7474 652.729 13.9453 652.312C15.1432 651.87 16.3281 651.453 17.5 651.062C18.6719 650.672 19.8438 650.477 21.0156 650.477ZM38.3984 657.586C37.8516 657.586 37.5391 657.43 37.4609 657.117L37.6172 649.383H34.7656L30.0781 649.344H27.2656C26.9271 649.344 26.5885 649.292 26.25 649.188C25.9115 649.083 25.7422 648.81 25.7422 648.367C27.1224 646.596 28.4635 644.812 29.7656 643.016C33.9062 637.365 36.7448 634.539 38.2812 634.539C40 634.539 40.8594 637.56 40.8594 643.602C40.8594 644.383 40.8464 645.216 40.8203 646.102L49.4531 645.984C49.4531 646.661 49.362 647.156 49.1797 647.469C49.0234 647.781 48.8802 647.951 48.75 647.977L41.5234 648.562C41.1589 649.578 40.9375 650.724 40.8594 652C40.7292 654.083 40.6641 655.828 40.6641 657.234L38.3984 657.586ZM37.6172 638.172C37.0443 638.953 36.3411 639.721 35.5078 640.477C34.7005 641.206 33.9062 641.948 33.125 642.703C32.3438 643.432 31.6406 644.174 31.0156 644.93C30.3906 645.685 30 646.466 29.8438 647.273C30.026 647.273 30.4297 647.273 31.0547 647.273C31.6797 647.273 32.5781 647.208 33.75 647.078C34.9219 646.922 36.2109 646.766 37.6172 646.609V638.172ZM54.6484 655.281C53.7109 654.682 52.9688 653.94 52.4219 653.055C51.875 652.143 51.6016 651.167 51.6016 650.125C51.6016 649.083 51.7578 647.846 52.0703 646.414C52.3828 644.982 52.7734 643.654 53.2422 642.43C53.737 641.206 54.3229 640.021 55 638.875C55.7031 637.729 56.4974 636.714 57.3828 635.828C59.3359 633.927 61.5495 632.977 64.0234 632.977C67.3568 632.977 69.9089 634.201 71.6797 636.648C73.3203 638.862 74.1406 641.609 74.1406 644.891C74.1406 648.771 72.9036 651.792 70.4297 653.953C68.0078 656.036 64.7917 657.078 60.7812 657.078C58.4635 657.078 56.4193 656.479 54.6484 655.281ZM53.9062 649.852C53.9062 653.367 56.4062 655.125 61.4062 655.125C65 655.125 67.6953 654.201 69.4922 652.352C71.3151 650.503 72.2266 647.872 72.2266 644.461C72.2266 644.357 72.2266 644.253 72.2266 644.148C72.2266 641.154 71.4844 638.862 70 637.273C68.5156 635.685 66.4844 634.891 63.9062 634.891C63.6198 634.891 63.3594 634.891 63.125 634.891C62.9167 634.891 62.7214 634.891 62.5391 634.891C61.1589 634.891 59.7917 635.828 58.4375 637.703C57.1615 639.422 56.0677 641.622 55.1562 644.305C54.3229 646.753 53.9062 648.602 53.9062 649.852ZM77.8125 645.867C77.2917 645.477 76.9141 645.086 76.6797 644.695C76.4453 644.305 76.3281 643.758 76.3281 643.055C76.3281 642.352 76.4844 641.74 76.7969 641.219C77.3438 640.359 78.125 639.93 79.1406 639.93C80.4948 639.93 81.5755 640.477 82.3828 641.57C82.7474 642.039 82.9688 642.573 83.0469 643.172C83.0469 644.5 82.7734 645.385 82.2266 645.828C81.7057 646.245 80.8984 646.453 79.8047 646.453C79.0234 646.453 78.3594 646.258 77.8125 645.867ZM81.2109 642.547C80.612 641.922 79.974 641.609 79.2969 641.609C78.4896 641.609 78.0078 642 77.8516 642.781C77.8516 642.859 77.8516 643.029 77.8516 643.289C77.8516 643.523 78.0078 643.901 78.3203 644.422C78.7891 644.812 79.1536 645.021 79.4141 645.047C79.6745 645.073 79.9089 645.086 80.1172 645.086C80.3516 645.086 80.599 644.982 80.8594 644.773C81.25 644.513 81.4453 644.174 81.4453 643.758C81.4453 643.315 81.3672 642.911 81.2109 642.547Z\" fill=\"black\"\/>\n<defs>\n<clipPath id=\"clip0\">\n<rect width=\"540\" height=\"540\" fill=\"white\" transform=\"translate(270.681 41.1311) rotate(14.7571)\"\/>\n<\/clipPath>\n<\/defs>\n<\/svg>\n<\/div>\n<h2>Saturation<\/h2>\n<p>Saturation is represented as a percentage. 100% is full saturation, and 0% is simply a shade of grey devoid of color.<\/p>\n<div class=\"sat-example\">\n  <div class=\"box one\">100%<\/div>\n  <div class=\"box two\">75%<\/div>\n  <div class=\"box three\">50%<\/div>\n  <div class=\"box four\">25%<\/div>\n  <div class=\"box five\">0%<\/div>\n<\/div>\n<h2>Lightness<\/h2>\n<p>Lightness describes how much light you want to give the color. 0% means no light at all(black) while 100% is full lightness(white).<\/p>\n<div class=\"light-example\">\n<div class=\"box one\">100%<\/div>\n<div class=\"box two\">75%<\/div>\n<div class=\"box three\">50%<\/div>\n<div class=\"box four\">25%<\/div>\n<div class=\"box five\">0%<\/div>\n<\/div>\n<h2>Alpha<\/h2>\n<p>You can expand HSL to also include the alpha, thus making the color more or less transparent. \nAlpha ranges from 0-1, where \"0\" is 100% transparent and \"1\" is 100% visible.\nYou can add the alpha by writing the following(Notice the \"A\" for Alpha: HSL<strong>A<\/strong>):<\/p>\n<p><strong>background-color: hsla(H, S, L, A);<\/strong><\/p>\n<pre><code>background-color: hsla(0, 100%, 50%, 0.5);<\/code><\/pre>\n<p>Or the modern syntax, <strong>background-color: hsla(H S L \/ A);<\/strong><\/p>\n<pre><code>background-color: hsla(0 100% 50% \/ 0.5);<\/code><\/pre>\n<h2>Try it<\/h2>\n<p>Try it with this HSLA editor:<\/p>\n<div class=\"hsl-container\">\n  <p>Hue: <input type=\"range\" min=\"0\" max=\"360\" value=\"0\" class=\"hsl-slider\" id=\"hue\" oninput=\"updateHSLA()\"><br><\/p>\n  <p>Saturation: <input type=\"range\" min=\"0\" max=\"100\" value=\"0\" class=\"hsl-slider\" id=\"saturation\" oninput=\"updateHSLA()\"><br><\/p>\n  <p>Lightness: <input type=\"range\" min=\"0\" max=\"100\" value=\"100\" class=\"hsl-slider\" id=\"lightness\" oninput=\"updateHSLA()\"><br><\/p>\n  <p>Alpha: <input type=\"range\" min=\"0\" max=\"1\" value=\"1\" step=\"0.01\"class=\"hsl-slider\" id=\"alpha\" oninput=\"updateHSLA()\"><br><\/p>\n  <div class=\"output\" id=\"output\">\n    hsla(0 0% 100% \/ 1)<br>\n    hsla(0, 0%, 100%, 1)\n  <\/div>\n<\/div>\n<h2>Browser support<\/h2>\n<p>Unless you're still, for some god forsaken reason, supporting IE8 or prior, you'll have no problems using HSL across the board!<\/p>\n<script>\nfunction updateHSLA() {\n  const output = document.getElementById('output');\n  const hue = document.getElementById('hue').value;\n  const saturation = document.getElementById('saturation').value;\n  const lightness = document.getElementById('lightness').value;\n  const alpha = document.getElementById('alpha').value;\n  const exampleCircle = document.getElementById('circle32');\n  document.body.style.background = \"hsla(\"+hue+\" \"+saturation+\"% \"+lightness+\"% \/ \"+alpha+\")\";\n  exampleCircle.style.fill = \"hsla(\"+hue+\" \"+saturation+\"% \"+lightness+\"% \/ \"+alpha+\")\";\n  output.innerHTML = \"hsla(\"+hue+\" \"+saturation+\"% \"+lightness+\"% \/ \"+alpha+\")<br>hsla(\"+hue+\", \"+saturation+\"%, \"+lightness+\"%, \"+alpha+\")<br>\";\n}\n<\/script>"],["Specificity on the Web","specificity-on-the-web","06\/05\/2021","html, css","2021\/05\/06\/specificity-on-the-web\/","<style>\ntable {\n  \/\/font-size: 1rem;\n  width: 100%;\n  max-width: 100% !important;\n  overflow: hidden;\n  background-color: transparent;\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n.special-highlight-1 {\n  color: #ec5f67\n}\n.special-highlight-2 {\n  color: #99c794;\n}\n.special-highlight-3 {\n  color: #c594c5;\n}\n.special-highlight-4 {\n  color: #fac863;\n}\n#specificity-illustration {\n  max-width: 100%;\n  height: auto;\n}\n<\/style>\n<h1>Specificity on the Web<\/h1>\n<p class='timestamp'><time datetime='06-05-2021'>06-05-2021<\/time><\/p>\n<hr>\n<p>I've never given much thought to CSS specificity. I guess the cascading aspects of CSS was logical enough to never warrant much investigation.<\/p>\n<p>Lately though, while browsing online, I stumbled upon the <a href=\"https:\/\/developer.mozilla.org\/en-US\/docs\/Web\/CSS\/Specificity\">MDN post<\/a> that went into details about CSS specificity. This sparked my curiosity!<\/p>\n<p>When talking about specificity, we're talking about the priority with which styles apply to elements on a HTML page.\nNot every class, pseudo-class and ID is equal, and the cascading nature of CSS does not decide everything!<\/p>\n<p>Generally speaking, CSS specificity is ranked with 5 values illustrated in the chart below, starting with the CSS rule <code>!important<\/code> which has the highest specificity, and ending with the universal CSS selector <code>*{}<\/code> which the lowest specificity.<\/p>\n<table>\n  <thead>\n    <tr>\n      <th>Specificity<\/th>\n      <th>Type<\/th>\n      <!-- <th>Example<\/th> -->\n      <th>Calculated<\/th>\n    <\/tr>\n  <\/thead>\n  <tbody>\n    <tr>\n      <td>1,0,0,0,0<\/td>\n      <td>!important<\/td>\n      <!-- <td><span class=\"special-highlight-1\">body<\/span> {<br>\n      &nbsp;&nbsp;&nbsp;<span class=\"special-highlight-2\">background<\/span>: <span class=\"special-highlight-3\">firebrick<\/span> <span class=\"special-highlight-1\">!important<\/span>;<br>\n      }\n      <\/td> -->\n      <td>10000<\/td>\n    <\/tr>\n    <tr>\n      <td>0,1,0,0,0<\/td>\n      <td>&lt;style=\u201c\u201d&gt;<\/td>\n      <!-- <td><span class=\"special-highlight-1\">&lt;div<\/span> <span class=\"special-highlight-2\">style<\/span>=<span class=\"special-highlight-4\">\"background: lightsalmon\"<\/span><span class=\"special-highlight-1\">&gt;<wbr>&lt;\/div&gt;<\/span><\/td> -->\n      <td>1000<\/td>\n    <\/tr>\n    <tr>\n      <td>0,0,1,0,0<\/td>\n      <td>IDs<\/td>\n      <!-- <td><span class=\"special-highlight-1\">#myID<\/span> {<br>\n      &nbsp;&nbsp;&nbsp;<span class=\"special-highlight-2\">background<\/span>: <span class=\"special-highlight-3\">olivedrab<\/span>;<br>\n      }\n      <\/td> -->\n      <td>100<\/td>\n    <\/tr>\n    <tr>\n      <td>0,0,0,1,0<\/td>\n      <td>Classes,<wbr> Pseudo-classes,<wbr> Attributes<\/td>\n      <!-- <td><span class=\"special-highlight-1\">.myClass<\/span> {<br>\n      &nbsp;&nbsp;&nbsp;<span class=\"special-highlight-2\">background<\/span>: <span class=\"special-highlight-3\">skyblue<\/span>;<br>\n      }<br>\n      <span class=\"special-highlight-1\">a:hover<\/span> {<br>\n      &nbsp;&nbsp;&nbsp;<span class=\"special-highlight-2\">background<\/span>: <span class=\"special-highlight-3\">springgreen<\/span>;<br>\n      }<br>\n      <span class=\"special-highlight-1\">a[target=\"_blank\" rel=\"noopener\"]<\/span> {<br>\n      &nbsp;&nbsp;&nbsp;<span class=\"special-highlight-2\">background<\/span>: <span class=\"special-highlight-3\">navajowhite<\/span>;<br>\n      }\n      <\/td> -->\n      <td>10<\/td>\n    <\/tr>\n    <tr>\n      <td>0,0,0,0,1<\/td>\n      <td>Elements<\/td>\n      <!-- <td><span class=\"special-highlight-1\">div<\/span> {<br>\n      &nbsp;&nbsp;&nbsp;<span class=\"special-highlight-2\">background<\/span>: <span class=\"special-highlight-3\">fuchsia<\/span>;<br>\n      }\n      <\/td> -->\n      <td>1<\/td>\n    <\/tr>\n    <tr>\n      <td>0,0,0,0,0<\/td>\n      <td>* (Universal selector)<\/td>\n      <!-- <td><span class=\"special-highlight-1\">*<\/span> {<br>\n      &nbsp;&nbsp;&nbsp;<span class=\"special-highlight-2\">background<\/span>: <span class=\"special-highlight-3\">goldenrod<\/span>;<br>\n      }\n      <\/td> -->\n      <td>0<\/td>\n    <\/tr>\n  <\/tbody>\n<\/table>\n<p>Or represented visually:<\/p>\n<svg id=\"specificity-illustration\" width=\"1173px\" height=\"990px\" viewBox=\"0 0 1173 990\" version=\"1.1\" xmlns=\"http:\/\/www.w3.org\/2000\/svg\" xmlns:xlink=\"http:\/\/www.w3.org\/1999\/xlink\">\n<defs>\n    <linearGradient x1=\"-2.91415424%\" y1=\"25.0612191%\" x2=\"100%\" y2=\"64.9023274%\" id=\"linearGradient-1\">\n        <stop stop-color=\"#63498A\" offset=\"0%\"><\/stop>\n        <stop stop-color=\"#6E0058\" offset=\"100%\"><\/stop>\n    <\/linearGradient>\n    <path d=\"M283,21 L542,162.477 L542,154.157288 L566,154.157288 L566,175.157288 L565.214,175.157 L565.842712,175.5 L283,330 L0.157287525,175.5 L0.785,175.157 L0,175.157288 L0,154.157288 L24,154.157288 L24,162.476 L283,21 Z\" id=\"path-2\"><\/path>\n    <linearGradient x1=\"2.26904571%\" y1=\"31.6460125%\" x2=\"107.262049%\" y2=\"70.9223505%\" id=\"linearGradient-3\">\n        <stop stop-color=\"#8634FF\" offset=\"0%\"><\/stop>\n        <stop stop-color=\"#A60185\" offset=\"100%\"><\/stop>\n    <\/linearGradient>\n    <polygon id=\"path-4\" points=\"0.157287525 154.5 283 8.57647287e-15 565.842712 154.5 283 309\"><\/polygon>\n    <path d=\"M283,21 L542,162.477 L542,154.157288 L566,154.157288 L566,175.157288 L565.214,175.157 L565.842712,175.5 L283,330 L0.157287525,175.5 L0.785,175.157 L0,175.157288 L0,154.157288 L24,154.157288 L24,162.476 L283,21 Z\" id=\"path-5\"><\/path>\n    <polygon id=\"path-6\" points=\"0.157287525 154.5 283 8.57647287e-15 565.842712 154.5 283 309\"><\/polygon>\n    <path d=\"M283,21 L542,162.477 L542,154.157288 L566,154.157288 L566,175.157288 L565.214,175.157 L565.842712,175.5 L283,330 L0.157287525,175.5 L0.785,175.157 L0,175.157288 L0,154.157288 L24,154.157288 L24,162.476 L283,21 Z\" id=\"path-7\"><\/path>\n    <polygon id=\"path-8\" points=\"0.157287525 154.5 283 8.57647287e-15 565.842712 154.5 283 309\"><\/polygon>\n    <path d=\"M283,21 L542,162.477 L542,154.157288 L566,154.157288 L566,175.157288 L565.214,175.157 L565.842712,175.5 L283,330 L0.157287525,175.5 L0.785,175.157 L0,175.157288 L0,154.157288 L24,154.157288 L24,162.476 L283,21 Z\" id=\"path-9\"><\/path>\n    <polygon id=\"path-10\" points=\"0.157287525 154.5 283 8.57647287e-15 565.842712 154.5 283 309\"><\/polygon>\n    <path d=\"M283,21 L542,162.477 L542,154.157288 L566,154.157288 L566,175.157288 L565.214,175.157 L565.842712,175.5 L283,330 L0.157287525,175.5 L0.785,175.157 L0,175.157288 L0,154.157288 L24,154.157288 L24,162.476 L283,21 Z\" id=\"path-11\"><\/path>\n    <polygon id=\"path-12\" points=\"0.157287525 154.5 283 8.57647287e-15 565.842712 154.5 283 309\"><\/polygon>\n    <path d=\"M283,21 L542,162.477 L542,154.157288 L566,154.157288 L566,175.157288 L565.214,175.157 L565.842712,175.5 L283,330 L0.157287525,175.5 L0.785,175.157 L0,175.157288 L0,154.157288 L24,154.157288 L24,162.476 L283,21 Z\" id=\"path-13\"><\/path>\n    <polygon id=\"path-14\" points=\"0.157287525 154.5 283 8.57647287e-15 565.842712 154.5 283 309\"><\/polygon>\n    <path d=\"M283,21 L542,162.477 L542,154.157288 L566,154.157288 L566,175.157288 L565.214,175.157 L565.842712,175.5 L283,330 L0.157287525,175.5 L0.785,175.157 L0,175.157288 L0,154.157288 L24,154.157288 L24,162.476 L283,21 Z\" id=\"path-15\"><\/path>\n    <polygon id=\"path-16\" points=\"0.157287525 154.5 283 8.57647287e-15 565.842712 154.5 283 309\"><\/polygon>\n    <path d=\"M283,21 L542,162.477 L542,154.157288 L566,154.157288 L566,175.157288 L565.214,175.157 L565.842712,175.5 L283,330 L0.157287525,175.5 L0.785,175.157 L0,175.157288 L0,154.157288 L24,154.157288 L24,162.476 L283,21 Z\" id=\"path-17\"><\/path>\n    <polygon id=\"path-18\" points=\"0.157287525 154.5 283 8.57647287e-15 565.842712 154.5 283 309\"><\/polygon>\n    <text id=\"text-19\" font-family=\"Helvetica\" font-size=\"25\" font-weight=\"normal\" letter-spacing=\"0.928571429\" fill=\"#FFFFFF\">\n        <tspan x=\"115\" y=\"232\">!important<\/tspan>\n    <\/text>\n    <filter x=\"-2.5%\" y=\"-10.0%\" width=\"103.3%\" height=\"113.3%\" filterUnits=\"objectBoundingBox\" id=\"filter-20\">\n        <feOffset dx=\"-2\" dy=\"-2\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\"><\/feOffset>\n        <feColorMatrix values=\"0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.5 0\" type=\"matrix\" in=\"shadowOffsetOuter1\"><\/feColorMatrix>\n    <\/filter>\n    <text id=\"text-21\" font-family=\"Helvetica\" font-size=\"25\" font-weight=\"normal\" letter-spacing=\"0.928571429\" fill=\"#FFFFFF\">\n        <tspan x=\"412.755786\" y=\"714.957927\">Pseudo<\/tspan>\n    <\/text>\n    <filter x=\"-3.3%\" y=\"-10.0%\" width=\"104.4%\" height=\"113.3%\" filterUnits=\"objectBoundingBox\" id=\"filter-22\">\n        <feOffset dx=\"-2\" dy=\"-2\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\"><\/feOffset>\n        <feColorMatrix values=\"0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.5 0\" type=\"matrix\" in=\"shadowOffsetOuter1\"><\/feColorMatrix>\n    <\/filter>\n    <text id=\"text-23\" font-family=\"Helvetica\" font-size=\"25\" font-weight=\"normal\" letter-spacing=\"0.928571429\" fill=\"#FFFFFF\">\n        <tspan x=\"716.595371\" y=\"892.633659\">Attributes<\/tspan>\n    <\/text>\n    <filter x=\"-2.6%\" y=\"-10.0%\" width=\"103.5%\" height=\"113.3%\" filterUnits=\"objectBoundingBox\" id=\"filter-24\">\n        <feOffset dx=\"-2\" dy=\"-2\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\"><\/feOffset>\n        <feColorMatrix values=\"0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.5 0\" type=\"matrix\" in=\"shadowOffsetOuter1\"><\/feColorMatrix>\n    <\/filter>\n    <text id=\"text-25\" font-family=\"Helvetica\" font-size=\"25\" font-weight=\"normal\" letter-spacing=\"0.928571429\" fill=\"#FFFFFF\">\n        <tspan x=\"100.941474\" y=\"339.234736\">&lt;style=\u201c\u201d&gt;<\/tspan>\n    <\/text>\n    <filter x=\"-2.5%\" y=\"-10.0%\" width=\"103.3%\" height=\"113.3%\" filterUnits=\"objectBoundingBox\" id=\"filter-26\">\n        <feOffset dx=\"-2\" dy=\"-2\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\"><\/feOffset>\n        <feColorMatrix values=\"0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.5 0\" type=\"matrix\" in=\"shadowOffsetOuter1\"><\/feColorMatrix>\n    <\/filter>\n    <text id=\"text-27\" font-family=\"Helvetica\" font-size=\"25\" font-weight=\"normal\" letter-spacing=\"0.928571429\" fill=\"#FFFFFF\">\n        <tspan x=\"105.740622\" y=\"431.986402\">IDs<\/tspan>\n    <\/text>\n    <filter x=\"-7.3%\" y=\"-10.0%\" width=\"109.8%\" height=\"113.3%\" filterUnits=\"objectBoundingBox\" id=\"filter-28\">\n        <feOffset dx=\"-2\" dy=\"-2\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\"><\/feOffset>\n        <feColorMatrix values=\"0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.5 0\" type=\"matrix\" in=\"shadowOffsetOuter1\"><\/feColorMatrix>\n    <\/filter>\n    <text id=\"text-29\" font-family=\"Helvetica\" font-size=\"25\" font-weight=\"normal\" letter-spacing=\"0.928571429\" fill=\"#FFFFFF\">\n        <tspan x=\"102.781059\" y=\"551.910468\">Classes<\/tspan>\n    <\/text>\n    <filter x=\"-3.1%\" y=\"-10.0%\" width=\"104.2%\" height=\"113.3%\" filterUnits=\"objectBoundingBox\" id=\"filter-30\">\n        <feOffset dx=\"-2\" dy=\"-2\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\"><\/feOffset>\n        <feColorMatrix values=\"0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.5 0\" type=\"matrix\" in=\"shadowOffsetOuter1\"><\/feColorMatrix>\n    <\/filter>\n    <text id=\"text-31\" font-family=\"Helvetica\" font-size=\"25\" font-weight=\"normal\" letter-spacing=\"0.928571429\" fill=\"#FFFFFF\">\n        <tspan x=\"99.0635807\" y=\"654.755773\">Elements<\/tspan>\n    <\/text>\n    <filter x=\"-2.7%\" y=\"-10.0%\" width=\"103.6%\" height=\"113.3%\" filterUnits=\"objectBoundingBox\" id=\"filter-32\">\n        <feOffset dx=\"-2\" dy=\"-2\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\"><\/feOffset>\n        <feColorMatrix values=\"0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.5 0\" type=\"matrix\" in=\"shadowOffsetOuter1\"><\/feColorMatrix>\n    <\/filter>\n    <text id=\"text-33\" font-family=\"Helvetica\" font-size=\"25\" font-weight=\"normal\" letter-spacing=\"0.928571429\" fill=\"#FFFFFF\">\n        <tspan x=\"100.911147\" y=\"726.291686\">*<\/tspan>\n    <\/text>\n    <filter x=\"-27.3%\" y=\"-10.0%\" width=\"136.4%\" height=\"113.3%\" filterUnits=\"objectBoundingBox\" id=\"filter-34\">\n        <feOffset dx=\"-2\" dy=\"-2\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\"><\/feOffset>\n        <feColorMatrix values=\"0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.5 0\" type=\"matrix\" in=\"shadowOffsetOuter1\"><\/feColorMatrix>\n    <\/filter>\n<\/defs>\n<g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n    <g id=\"Group-2\">\n        <g id=\"layer\" transform=\"translate(0.000000, 528.000000)\">\n            <g id=\"Combined-Shape\">\n                <use fill=\"#898989\" xlink:href=\"#path-2\"><\/use>\n                <use fill=\"url(#linearGradient-1)\" xlink:href=\"#path-2\"><\/use>\n            <\/g>\n            <g id=\"Rectangle-Copy-8\">\n                <use fill=\"#D8D8D8\" xlink:href=\"#path-4\"><\/use>\n                <use fill=\"url(#linearGradient-3)\" xlink:href=\"#path-4\"><\/use>\n            <\/g>\n        <\/g>\n        <g id=\"layer-copy-7\" transform=\"translate(0.000000, 431.000000)\">\n            <g id=\"Combined-Shape\">\n                <use fill=\"#898989\" xlink:href=\"#path-5\"><\/use>\n                <use fill=\"url(#linearGradient-1)\" xlink:href=\"#path-5\"><\/use>\n            <\/g>\n            <g id=\"Rectangle-Copy-8\">\n                <use fill=\"#D8D8D8\" xlink:href=\"#path-6\"><\/use>\n                <use fill=\"url(#linearGradient-3)\" xlink:href=\"#path-6\"><\/use>\n            <\/g>\n        <\/g>\n        <g id=\"layer-copy\" transform=\"translate(0.000000, 330.000000)\">\n            <g id=\"Combined-Shape\">\n                <use fill=\"#898989\" xlink:href=\"#path-7\"><\/use>\n                <use fill=\"url(#linearGradient-1)\" xlink:href=\"#path-7\"><\/use>\n            <\/g>\n            <g id=\"Rectangle-Copy-8\">\n                <use fill=\"#D8D8D8\" xlink:href=\"#path-8\"><\/use>\n                <use fill=\"url(#linearGradient-3)\" xlink:href=\"#path-8\"><\/use>\n            <\/g>\n        <\/g>\n        <g id=\"layer-copy-2\" transform=\"translate(0.000000, 223.000000)\">\n            <g id=\"Combined-Shape\">\n                <use fill=\"#898989\" xlink:href=\"#path-9\"><\/use>\n                <use fill=\"url(#linearGradient-1)\" xlink:href=\"#path-9\"><\/use>\n            <\/g>\n            <g id=\"Rectangle-Copy-8\">\n                <use fill=\"#D8D8D8\" xlink:href=\"#path-10\"><\/use>\n                <use fill=\"url(#linearGradient-3)\" xlink:href=\"#path-10\"><\/use>\n            <\/g>\n        <\/g>\n        <g id=\"layer-copy-5\" transform=\"translate(307.000000, 495.000000)\">\n            <g id=\"Combined-Shape\">\n                <use fill=\"#898989\" xlink:href=\"#path-11\"><\/use>\n                <use fill=\"url(#linearGradient-1)\" xlink:href=\"#path-11\"><\/use>\n            <\/g>\n            <g id=\"Rectangle-Copy-8\">\n                <use fill=\"#D8D8D8\" xlink:href=\"#path-12\"><\/use>\n                <use fill=\"url(#linearGradient-3)\" xlink:href=\"#path-12\"><\/use>\n            <\/g>\n        <\/g>\n        <g id=\"layer-copy-6\" transform=\"translate(607.000000, 660.000000)\">\n            <g id=\"Combined-Shape\">\n                <use fill=\"#898989\" xlink:href=\"#path-13\"><\/use>\n                <use fill=\"url(#linearGradient-1)\" xlink:href=\"#path-13\"><\/use>\n            <\/g>\n            <g id=\"Rectangle-Copy-8\">\n                <use fill=\"#D8D8D8\" xlink:href=\"#path-14\"><\/use>\n                <use fill=\"url(#linearGradient-3)\" xlink:href=\"#path-14\"><\/use>\n            <\/g>\n        <\/g>\n        <g id=\"layer-copy-3\" transform=\"translate(0.000000, 112.000000)\">\n            <g id=\"Combined-Shape\">\n                <use fill=\"#898989\" xlink:href=\"#path-15\"><\/use>\n                <use fill=\"url(#linearGradient-1)\" xlink:href=\"#path-15\"><\/use>\n            <\/g>\n            <g id=\"Rectangle-Copy-8\">\n                <use fill=\"#D8D8D8\" xlink:href=\"#path-16\"><\/use>\n                <use fill=\"url(#linearGradient-3)\" xlink:href=\"#path-16\"><\/use>\n            <\/g>\n        <\/g>\n        <g id=\"layer-copy-4\">\n            <g id=\"Combined-Shape\">\n                <use fill=\"#898989\" xlink:href=\"#path-17\"><\/use>\n                <use fill=\"url(#linearGradient-1)\" xlink:href=\"#path-17\"><\/use>\n            <\/g>\n            <g id=\"Rectangle-Copy-8\">\n                <use fill=\"#D8D8D8\" xlink:href=\"#path-18\"><\/use>\n                <use fill=\"url(#linearGradient-3)\" xlink:href=\"#path-18\"><\/use>\n            <\/g>\n        <\/g>\n        <g id=\"!important\" transform=\"translate(175.500000, 223.000000) rotate(28.000000) translate(-175.500000, -223.000000) \" fill=\"#FFFFFF\" fill-opacity=\"1\">\n            <use filter=\"url(#filter-20)\" xlink:href=\"#text-19\"><\/use>\n            <use xlink:href=\"#text-19\"><\/use>\n        <\/g>\n        <g id=\"Pseudo\" transform=\"translate(458.255786, 705.957927) rotate(28.000000) translate(-458.255786, -705.957927) \" fill=\"#FFFFFF\" fill-opacity=\"1\">\n            <use filter=\"url(#filter-22)\" xlink:href=\"#text-21\"><\/use>\n            <use xlink:href=\"#text-21\"><\/use>\n        <\/g>\n        <g id=\"Attributes\" transform=\"translate(774.095371, 883.633659) rotate(28.000000) translate(-774.095371, -883.633659) \" fill=\"#FFFFFF\" fill-opacity=\"1\">\n            <use filter=\"url(#filter-24)\" xlink:href=\"#text-23\"><\/use>\n            <use xlink:href=\"#text-23\"><\/use>\n        <\/g>\n        <g id=\"&lt;style=\u201c\u201d&gt;\" transform=\"translate(161.941474, 330.234736) rotate(28.000000) translate(-161.941474, -330.234736) \" fill=\"#FFFFFF\" fill-opacity=\"1\">\n            <use filter=\"url(#filter-26)\" xlink:href=\"#text-25\"><\/use>\n            <use xlink:href=\"#text-25\"><\/use>\n        <\/g>\n        <g id=\"IDs\" transform=\"translate(126.240622, 422.986402) rotate(28.000000) translate(-126.240622, -422.986402) \" fill=\"#FFFFFF\" fill-opacity=\"1\">\n            <use filter=\"url(#filter-28)\" xlink:href=\"#text-27\"><\/use>\n            <use xlink:href=\"#text-27\"><\/use>\n        <\/g>\n        <g id=\"Classes\" transform=\"translate(150.781059, 542.910468) rotate(28.000000) translate(-150.781059, -542.910468) \" fill=\"#FFFFFF\" fill-opacity=\"1\">\n            <use filter=\"url(#filter-30)\" xlink:href=\"#text-29\"><\/use>\n            <use xlink:href=\"#text-29\"><\/use>\n        <\/g>\n        <g id=\"Elements\" transform=\"translate(155.063581, 645.755773) rotate(28.000000) translate(-155.063581, -645.755773) \" fill=\"#FFFFFF\" fill-opacity=\"1\">\n            <use filter=\"url(#filter-32)\" xlink:href=\"#text-31\"><\/use>\n            <use xlink:href=\"#text-31\"><\/use>\n        <\/g>\n        <g id=\"*\" transform=\"translate(106.411147, 717.291686) rotate(28.000000) translate(-106.411147, -717.291686) \" fill=\"#FFFFFF\" fill-opacity=\"1\">\n            <use filter=\"url(#filter-34)\" xlink:href=\"#text-33\"><\/use>\n            <use xlink:href=\"#text-33\"><\/use>\n        <\/g>\n    <\/g>\n<\/g>\n<\/svg>\n<p>Using a selector like this:<\/p>\n<pre><code class=\"language-HTML\">&lt;a href=\"\" class=\"highlight\"&gt;Test Link&lt;\/a&gt;<\/code><\/pre>\n<pre><code class=\"language-CSS\">a.highlight:hover{\n   background: skyblue;\n}<\/code><\/pre>\n<p>Would net the combined specificity: <code>0,0,0,2,1<\/code>. The class <code>.hightlight<\/code> accounts for <code>0,0,0,1,0<\/code>, the pseuod-class <code>:hover<\/code> accounts for <code>0,0,0,1,0<\/code> and lastly the element <code>a<\/code> accounts for <code>0,0,0,0,1<\/code>, resulting in <code>0,0,0,2,1<\/code>.<\/p>\n<p>This all result in a calculated specificity of <strong>21<\/strong>.<\/p>\n<p>If you were to add an ID to this element, and add styling to the ID:<\/p>\n<pre><code class=\"language-HTML\">&lt;a href=\"\" class=\"highlight\" id=\"link\"&gt;Test Link&lt;\/a&gt;<\/code><\/pre>\n<pre><code class=\"language-CSS\">a.highlight:hover{\n   background: skyblue;\n}\n#link {\n   background: dodgerblue;\n}<\/code><\/pre>\n<p>This would override the first selector completely, having a calculated specificity of <strong>100<\/strong>, which vastly outweighs the first selector's <strong>21<\/strong>.<\/p>"],["CSS selectmenu","selectmenu","28\/01\/2022","html, css","2022\/01\/28\/selectmenu\/","<style>\nselectmenu.logos::part(button) {\n  width: 200px;\n  max-width: 100%;\n  font-size: 1rem;\n  color: #444;\n  line-height: 1.3;\n  padding: .6em 1.4em .5em .8em;\n  box-sizing: border-box;\n  margin: 0;\n  border: 1px solid #aaa;\n  box-shadow: 0 1px 0 1px rgba(0,0,0,.04);\n  border-radius: .5em;\n  background-color: #fff;\n}\nselectmenu.logos::part(selected-value) {\n  width: 100%;\n  text-align: left;\n}\nselectmenu.logos::part(listbox) {\n  color: #444;\n  line-height: 1.3;\n  border-radius: .5em;\n}\nselectmenu.logos option {\n  padding: 0.5rem;\n}\nselectmenu.logos option {\n  display: flex;\n  gap: 0.5rem;\n  align-items: center;\n}\nselectmenu.logos option::before {\n  display: inline-block;\n  content: \"\";\n  width: 1rem;\n  height: 1rem;\n  background-repeat: no-repeat;\n  background-size: contain;\n}\nselectmenu.logos option[value=\"brave\"]::before {\n  background-image: url(\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/c\/c4\/Brave_lion.png\");\n}\nselectmenu.logos option[value=\"edge\"]::before {\n  background-image: url(\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/7\/7e\/Microsoft_Edge_logo_%282019%29.png\");\n}\nselectmenu.logos option[value=\"chrome\"]::before {\n  background-image: url(\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/a\/a5\/Google_Chrome_icon_%28September_2014%29.svg\/1200px-Google_Chrome_icon_%28September_2014%29.svg.png\");\n}\nselectmenu.logos option[value=\"firefox\"]::before {\n  background-image: url(\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/a\/a0\/Firefox_logo%2C_2019.svg\/1200px-Firefox_logo%2C_2019.svg.png\");\n}\nselectmenu.logos option[value=\"safari\"]::before {\n  background-image: url(\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/5\/52\/Safari_browser_logo.svg\/1200px-Safari_browser_logo.svg.png\");\n}\nselectmenu.logos option[value=\"opera\"]::before {\n  background-image: url(\"https:\/\/upload.wikimedia.org\/wikipedia\/commons\/thumb\/4\/49\/Opera_2015_icon.svg\/640px-Opera_2015_icon.svg.png\");\n}\n<\/style>\n<h1>CSS selectmenu<\/h1>\n<p class='timestamp'><time datetime='28-01-2022'>28-01-2022<\/time><\/p>\n<hr>\n<p>As of <strong>28-01-2022<\/strong>, this feature is only available as an Experimental Web Platform feature in Chrome. This feature can be enabled in your Chrome browser here: \n<a href=\"chrome:\/\/flags\/#experimental-web-platform-features\">chrome:\/\/flags\/#experimental-web-platform-features<\/a>.<\/p>\n<selectmenu class=\"logos\">\n  <option value=\"edge\" selected>Edge<\/option>\n  <option value=\"chrome\">Chrome<\/option>\n  <option value=\"firefox\">Firefox<\/option>\n  <option value=\"brave\">Brave<\/option>\n  <option value=\"safari\">Safari<\/option>\n  <option value=\"opera\">Opera<\/option>\n<\/selectmenu>\n<p>You use <code>selectmenu<\/code> just like you would use <code>select<\/code>:<\/p>\n<pre><code class=\"language-html\">&lt;selectmenu class=\"logos\"&gt;\n  &lt;option value=\"edge\" selected&gt;Edge&lt;\/option&gt;\n  &lt;option value=\"chrome\"&gt;Chrome&lt;\/option&gt;\n  &lt;option value=\"firefox\"&gt;Firefox&lt;\/option&gt;\n  &lt;option value=\"brave\"&gt;Brave&lt;\/option&gt;\n  &lt;option value=\"safari\"&gt;Safari&lt;\/option&gt;\n  &lt;option value=\"opera\"&gt;Opera&lt;\/option&gt;\n&lt;\/selectmenu&gt;<\/code><\/pre>\n<h2>Styling selectmenu<\/h2>\n<p>With the <code>selectmenu<\/code> element you have the ability to style every element of the select menu, using a variety of new CSS selectors such as: <\/p>\n<ul>\n<li>selectmenu: <code>selectmenu {}<\/code><\/li>\n<li>button: <code>selectmenu::part(button) {}<\/code><\/li>\n<li>selected-value: <code>selectmenu::part(selected-value) {}<\/code><\/li>\n<li>listbox: <code>selectmenu::part(listbox) {}<\/code><\/li>\n<li>optgroup: <code>selectmenu optgroup {}<\/code><\/li>\n<li>option: <code>selectmenu option {}<\/code><\/li>\n<\/ul>\n<style>\nselectmenu, selectmenu::part(button) {\n  font-size: 1rem;\n}\n<\/style>\n<h4>selectmenu<\/h4>\n<pre><code class=\"language-css\">selectmenu {\n  border: 2px dashed red;\n}<\/code><\/pre>\n<style>\n.selectmenu {\n  border: 2px dashed red;\n}\n<\/style>\n<selectmenu class=\"selectmenu\">\n  <option>Option 1<\/option>\n  <option>Option 2<\/option>\n  <option>Option 3<\/option>\n<\/selectmenu>\n<h4>selectmenu::part(button)<\/h4>\n<pre><code class=\"language-css\">selectmenu::part(button) {\n  border: 2px dashed red;\n}<\/code><\/pre>\n<style>\n.selectmenubutton::part(button) {\n  border: 2px dashed red;\n}\n<\/style>\n<selectmenu class=\"selectmenubutton\">\n  <option>Option 1<\/option>\n  <option>Option 2<\/option>\n  <option>Option 3<\/option>\n<\/selectmenu>\n<h4>selectmenu::part(selected-value)<\/h4>\n<pre><code class=\"language-css\">selectmenu::part(selected-value) {\n  border: 2px dashed red;\n}<\/code><\/pre>\n<style>\n.selectmenuselected::part(selected-value) {\n  border: 2px dashed red;\n}\n<\/style>\n<selectmenu class=\"selectmenuselected\">\n  <option>Option 1<\/option>\n  <option>Option 2<\/option>\n  <option>Option 3<\/option>\n<\/selectmenu>\n<h4>selectmenu::part(listbox)<\/h4>\n<pre><code class=\"language-css\">selectmenu::part(listbox) {\n  border: 2px dashed red;\n}<\/code><\/pre>\n<style>\n.selectmenulistbox::part(listbox) {\n  border: 2px dashed red;\n}\n<\/style>\n<selectmenu class=\"selectmenulistbox\">\n  <option>Option 1<\/option>\n  <option>Option 2<\/option>\n  <option>Option 3<\/option>\n<\/selectmenu>\n<h4>selectmenu optgroup<\/h4>\n<pre><code class=\"language-css\">selectmenu optgroup {\n  border: 2px dashed red;\n}<\/code><\/pre>\n<style>\n.selectmenuoptgroup optgroup {\n  border: 2px dashed red;\n}\n<\/style>\n<selectmenu class=\"selectmenuoptgroup\">\n  <optgroup label=\"First option set\">\n    <option>Option 1<\/option>\n    <option>Option 2<\/option>\n    <option>Option 3<\/option>\n  <\/optgroup>\n  <optgroup  label=\"Second option set\">\n    <option>Option 4<\/option>\n    <option>Option 5<\/option>\n    <option>Option 6<\/option>\n  <\/optgroup>\n<\/selectmenu>\n<h4>selectmenu option<\/h4>\n<pre><code class=\"language-css\">selectmenu option {\n  border: 2px dashed red;\n}<\/code><\/pre>\n<style>\n.selectmenuoption option {\n  border: 2px dashed red;\n}\n<\/style>\n<selectmenu class=\"selectmenuoption\">\n  <option>Option 1<\/option>\n  <option>Option 2<\/option>\n  <option>Option 3<\/option>\n<\/selectmenu>"],["CSS color-scheme","css-color-scheme","01\/02\/2023","html, css","2023\/02\/01\/css-color-scheme\/","<style>\n:root {\n  color-scheme: light;\n}\n#color-scheme-button {\n  font-size: 1.25rem;\n  line-height: 1.35;\n  display: inline-block;\n  margin: 0 auto;\n}\n.dark {\n  color-scheme: dark;\n}\n<\/style>\n<h1>CSS color-scheme<\/h1>\n<p class='timestamp'><time datetime='01-02-2023'>01-02-2023<\/time><\/p>\n<hr>\n<p>Elements on a page has a default color defined by the <code>color-scheme<\/code> value in the User Agent stylesheet.<\/p>\n<p>This is what defines the <code>background-color<\/code> of body as white, the <code>text-color<\/code> as black and the varying grey colors of buttons and other interactive elements.<\/p>\n<p>Apple visualizes this very well with their video on <a href=\"https:\/\/developer.apple.com\/videos\/play\/wwdc2019\/511\/?time=157\">\"Supporting Dark Mode in Your Web Content\"<\/a>:<\/p>\n<blockquote>\n<p><code>color-scheme<\/code> changes the default text and background colors of the page to match the current system appearance, standard form controls, scrollbars and other named system colors also change their look automatically.<\/p>\n<\/blockquote>\n<p>Getting started with this is very easy and only requires a few lines of CSS:<\/p>\n<pre><code class=\"language-CSS\">:root {\n  color-scheme: light;\n}<\/code><\/pre>\n<p>Now, whenever you want to switch the color scheme, you simply update the <code>:root color-scheme<\/code> to:<\/p>\n<pre><code class=\"language-CSS\">:root {\n  color-scheme: dark;\n}<\/code><\/pre>\n<p>You can test this directly on this page with the following demo:<\/p>\n<p><br><\/p>\n<button id=\"color-scheme-button\">Toggle Color Scheme<\/button>\n<small>(Requires the site to be in lightmode)<\/small>\n<br><br>\n<p><code>color-scheme<\/code> differs from <code>prefers-color-scheme<\/code> in one important way, though it's easy to confuse the two. While <code>prefers-color-scheme<\/code> is all about writing your own styles, <code>color-scheme<\/code> is all about default appearances. It tells the browser to update the colors in its stylesheet.<\/p>\n<p>For more information on how to implement and use <code>prefers-color-scheme<\/code> on you websites, see: <a href=\"https:\/\/triss.dev\/blog\/2019\/08\/24\/css-darkmode\/\">CSS Darkmode<\/a><\/p>\n<script>\nconst root = document.querySelector(\":root\");\nconst navbar = document.querySelector(\"body > span\");\nconst colorSchemeButton = document.getElementById(\"color-scheme-button\");\nif (colorSchemeButton) {\n  colorSchemeButton.addEventListener('click', function() {\n    event.preventDefault();\n    root.classList.toggle('dark');\n    navbar.classList.toggle('inverted');\n    console.log('color scheme swapped');\n  });\n}\nconsole.log(colorSchemeButton);\n<\/script>"],["Smooth scroll-to-top","smooth-scroll-to-top","21\/02\/2023","js","2023\/02\/21\/smooth-scroll-to-top\/","<h1>Smooth scroll-to-top<\/h1>\n<p class='timestamp'><time datetime='21-02-2023'>21-02-2023<\/time><\/p>\n<hr>\n<p>Back in the day, circa 2010, when we needed to scroll to top we would use the jQuery library to accomplish this. <\/p>\n<p>I dug out the following snippet from a project I launched way back in 2010. \nWhile the project is long since obsolete, it does serve to show just how far we've come:<\/p>\n<pre><code class=\"language-javascript\">\/\/ Select all links with hashes\n$('a[href*=\"#\"]')\n.not('[href=\"#\"]')\n.not('[href=\"#0\"]')\n.click(function(event) {\n  if (\n    location.pathname.replace(\/^\\\/\/, '') == this.pathname.replace(\/^\\\/\/, '') \n    &amp;&amp; \n    location.hostname == this.hostname\n  ) {\n    var target = $(this.hash);\n    target = target.length ? target : $('[name=' + this.hash.slice(1) + ']');\n    if (target.length) {\n      event.preventDefault();\n      $('html, body').animate({\n        scrollTop: target.offset().top\n      }, 1000, function() {\n        var $target = $(target);\n        $target.focus();\n        if ($target.is(\":focus\")) {\n          return false;\n        } else {\n          $target.attr('tabindex','-1');\n          $target.focus();\n        };\n      });\n    }\n  }\n});<\/code><\/pre>\n<p>I believe this, or at least a version of it, was originally posted by Chris Coyier over at <a href=\"https:\/\/css-tricks.com\">css-tricks.com<\/a>,\nthough I can't be sure.<\/p>\n<p>It simply targets all <code>#<\/code> links and applies smooth scrolling to their respective elements.<\/p>\n<p>Today there's luckily a much simpler and better way to achieve this effect, and it's even available in native Javascript:<\/p>\n<pre><code class=\"language-html\">&lt;button onclick=\"scrollToTop();\"&gt;scroll-to-top&lt;\/button&gt;\n\n&lt;script&gt;\nfunction scrollToTop() {\n  window.scrollTo({\n      top: 0,\n      left: 0,\n      behavior: 'smooth'\n  });\n}\n&lt;\/script&gt;<\/code><\/pre>\n<p>Simply trigger this function with a button at the position you want to scroll from and watch the window magically scroll to the top.<\/p>\n<p>I've recently implemented this feature in the footer on this site.<\/p>\n<p>Try it for yourself:\n<a href=\"#0\" style=\"display: inline;\" onclick=\"scrollToTop();return false;\" class=\"totop\" title=\"Go to top\" aria-label=\"Go to top\">&#8593; Top &#8593;<\/a><\/p>"],["Animating the Web","animating-the-web","23\/02\/2023","css, js, animation","2023\/02\/23\/animating-the-web\/","<style>\n  .darkmode hr {\n    background: white;\n  }\n  .darkmode hr:after {\n    backgroudn: white;\n  }\n  input[type=\"text\"] {\n    display: inline-block;\n    width: 100%;\n    background: none;\n    border: 2px solid black;\n    background: white;\n    font-size: inherit;\n    padding: 0.5rem ;\n    color: black;\n    border-radius: 0;\n    width: 100%;\n    margin-bottom: 0.5rem;\n  }\n  input[type=\"submit\"] {\n    display: inline-block;\n    border: 2px solid black;\n    background: white;\n    color: black;\n    font-size: 1rem;\n    padding: 0.5rem 1rem;\n    cursor: pointer;\n  }\n  .box {\n    border: 2px solid black;\n    padding: 0.5rem 2rem 2rem 2rem;\n  }\n  .darkmode .box {\n    border: 2px solid white;\n  }\n  \/* Orientation *\/\n  .box.orientation .wrapper {\n    height: 400px;\n    width: 100%;\n    overflow-y: scroll;\n    position: relative;\n  }\n  .box.orientation .wrapper .wrapper-1,\n  .box.orientation .wrapper .wrapper-2 {\n    height: 400px;\n    width: 100%;\n    position: absolute;\n    top: 0;\n    text-align: center;\n    transition: left 400ms cubic-bezier(.47,1.64,.41,.8);\n    border: 2px solid black;\n  }\n  .box.orientation .wrapper .wrapper-1 {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n    left: 0;\n    background: #fae3d9\n  }\n  .box.orientation .wrapper .wrapper-2 {\n    left: 100%;\n    background: #bbded6\n  }\n  .box.orientation .wrapper .wrapper-2 svg {\n    height: 50%;\n    width: 100%;\n    background: transparent;\n  }\n  \/* Changes *\/\n  .box.changes .wrapper {\n    height: 150px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n  } \n  .box.changes .wrapper .checkbox {\n    margin: 20px 0;\n  }\n  .box.changes .wrapper .checkbox .checkbox-label {\n    position: relative;\n    display: block;\n    height: 20px;\n    width: 44px;\n    background: #fae3d9;\n    border: 2px solid black;\n    border-radius: 100px;\n    cursor: pointer;\n    transition: all 300ms ease;\n  }\n  .box.changes .wrapper .checkbox .checkbox-label:after {\n    position: absolute;\n    left: -2px;\n    top: -5px;\n    display: block;\n    width: 26px;\n    height: 26px;\n    border: 2px solid black;\n    border-radius: 50%;\n    background: #ffb6b9;\n    box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.05);\n    content: \"\";\n    transition: all 300ms ease;\n  }\n  .box.changes .wrapper .checkbox .checkbox-label:active:after {\n    transform: scale(1.15, 0.85);\n  }\n  .box.changes .wrapper .checkbox .checkbox-input {\n    display: none;\n  }\n  .box.changes .wrapper .checkbox .checkbox-input:checked ~ label {\n    background: #bbded6;\n  }\n  .box.changes .wrapper .checkbox .checkbox-input:checked ~ label:after {\n    left: 20px;\n    background: #348498;\n  }\n  .box.changes .wrapper .checkbox .checkbox-input:disabled ~ label {\n    background: #d6d6d6;\n    pointer-events: none;\n  }\n  .box.changes .wrapper .checkbox .checkbox-input:disabled ~ label:after {\n    background: #bcbcbc;\n  }\n  \/* New Elements *\/\n  .box.new .wrapper .parent:after {\n    content: \"\";\n    display: block;\n    clear: both;\n  }\n  .box.new .wrapper .parent div {\n    background: #fae3d9;\n    position: relative;\n    float: left;\n    margin-bottom: 5px;\n    border: 2px solid black;\n  }\n  .box.new .wrapper .parent .div1 {\n    width: 100%;\n    height: 3rem;\n  } \n  .box.new .wrapper .parent .div2 {\n    width: 100%;\n    height: 0rem;\n    background: #ffb6b9;\n    margin-bottom: 0;\n    margin-right: 5px;\n    transition: height 200ms ease-in-out, \n                margin 200ms ease-in-out, \n                border 200ms cubic-bezier(1,0,1,.01); \n    border: 0px solid transparent;\n  } \n  .box.new .wrapper .parent .div2.active {\n    height: 3rem;\n    margin-bottom: 5px;\n    transition: height 400ms cubic-bezier(.47,1.64,.41,.8);\n    border: 2px dashed black;\n  } \n  .box.new .wrapper .parent .div3,\n  .box.new .wrapper .parent .div4 {\n    width: calc((100% \/ 3) - 5px);\n    height: calc(15rem + 5px);\n    margin-right: 5px; \n  }\n  .box.new .wrapper .parent .div5 {\n    width: calc(100% \/ 3);\n    height: 13rem;\n  }\n  .box.new .wrapper .parent .div6 {\n    width: calc(100% \/ 3);\n    height: 2rem;\n  }\n  .box.new .wrapper .parent .div6 button {\n    width: 100%;\n    height: 100%;\n    border: 0;\n    background: #bbded6;\n    color: #348498;\n    cursor: pointer;\n    font-weight: bold;\n  }\n  .box.new .wrapper .parent .div7 {\n    width: 100%;\n    height: 3rem;\n  }\n  \/* Attention *\/\n  .box.attention .parent {\n    display: grid;\n    grid-template-columns: repeat(7, 1fr);\n    grid-template-rows: repeat(5, 1fr);\n    grid-column-gap: 5px;\n  }\n  .box.attention .parent div {\n    border: 2px solid black;\n    background: #fae3d9;\n  }\n  .box.attention .parent .div1 {\n    grid-area: 1 \/ 1 \/ 6 \/ 3;\n    height: calc(15rem + 5px);\n  }\n  .box.attention .parent .div1 div {\n    display: block;\n    background: #ffb6b9;\n    border: 2px solid black;\n    margin: 5px;\n    height: 1rem;\n  }\n  .box.attention .parent .div1 div.big {\n    height: 2.5rem;\n  }\n  .box.attention .parent .div1 div.first {\n    margin-top: 10px;\n    position: relative;\n  }\n  .box.attention .parent .div1 div.first .ping {\n    position: absolute;\n    right: -10px;\n    top: -10px;\n    height: 14px;\n    width: 14px;\n    border-radius: 100%;\n    background: #bbded6;\n    -webkit-animation: pulse 3s ease-in-out infinite;\n    animation: pulse 3s ease-in-out infinite;\n  }\n  @-webkit-keyframes pulse {\n    0%, 70% {\n      box-shadow: 0px 0px 0px 0px rgba(52, 132, 152, 0.75);\n    }\n    100% {\n      box-shadow: 0px 0px 0px 50px rgba(52, 132, 152, 0);\n    }\n  }\n  @keyframes pulse {\n    0%, 70% {\n      box-shadow: 0px 0px 0px 0px rgba(52, 132, 152, 0.75);\n    }\n    100% {\n      box-shadow: 0px 0px 0px 50px rgba(52, 132, 152, 0);\n    }\n  }\n  .box.attention .parent .div2 {\n    grid-area: 1 \/ 3 \/ 2 \/ 8;\n    height: 3rem;\n    margin-bottom: 5px;\n  }\n  .box.attention .parent .div3 {\n    grid-area: 2 \/ 3 \/ 6 \/ 8;\n    height: 12rem;\n  }\n  \/* Visual Feedback *\/\n  .box.visual .modal__trigger, \n  .modal__action {\n    border: 2px solid black;\n    padding: 15px 20px;\n    background: white;\n    font-weight: bold;\n    display: block;\n    cursor: pointer;\n    margin: 3rem auto 1.5rem auto;\n  }\n  .box.visual .modal {\n    background: #fae3d9;\n    z-index: 5;\n    padding: 30px;\n    box-shadow: 0 10px 30px rgba(51, 51, 51, 0.4);\n    border: 2px solid black;\n    visibility: hidden;\n    opacity: 0;\n    transition: all 450ms cubic-bezier(.47,1.64,.41,.8);\n    position: relative;\n    top: -15rem;\n  }\n  .darkmode .box.visual .modal {\n    color: black;\n  }\n  .box.visual .modal.modal--active {\n    visibility: visible;\n    opacity: 1;\n    transition: all 450ms cubic-bezier(.47,1.64,.41,.8);\n    top: 0;\n  }\n  .box.visual .modal .modal__close {\n    font-size: 1rem;\n    line-height: 1rem;\n    font-weight: bold;\n    position: absolute;\n    right: 15px;\n    top: 15px;\n    cursor: pointer;\n    padding: 15px;\n  }\n  .box.visual .modal .modal__close:hover {\n    color: #ffb6b9;\n  }\n  .box.visual .modal .modal__action {\n    margin: 0;\n  }\n  \/* System Status *\/\n  .box.status .wrapper {\n    height: 400px;\n    background: #fae3d9;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  .box.status .wrapper .progress-bar {\n    width: 200px;\n    height: 20px;\n    background: #bbded6;\n    border: 2px solid black;\n  }\n  .box.status .wrapper .progress {\n    height: 100%;\n    width: 0%;\n    background-color: #348498;\n    -webkit-animation: progress linear 6s infinite;\n            animation: progress linear 6s infinite;\n  }\n  @-webkit-keyframes progress {\n    0%, 30% {\n      width: 0%;\n    }\n    30% {\n      width: 20%;\n    }\n    40% {\n      width: 60%;\n    }\n    70%, 90% {\n      width: 80%;\n    }\n    90%, 100% {\n      width: 100%;\n    }\n  }\n  @keyframes progress {\n    0%, 30% {\n      width: 0%;\n    }\n    30% {\n      width: 20%;\n    }\n    40% {\n      width: 60%;\n    }\n    70%, 90% {\n      width: 80%;\n    }\n    90%, 100% {\n      width: 100%;\n    }\n  }\n<\/style>\n<h1>Animating the Web<\/h1>\n<p class='timestamp'><time datetime='23-02-2023'>23-02-2023<\/time><\/p>\n<hr>\n<p>Animations have become an increasingly popular way of enhancing the user experience on the web. \nThey add a level of interactivity and engagement that static designs cannot provide. \nAnimations can range from subtle transitions to complex, eye-catching visual effects. \nThey are used in a variety of contexts, such as in website navigation, form validation, notifications, product demos and much more.<\/p>\n<p>One of the primary benefits of using animations on the web is that they can help to guide users through a website. \nBy providing visual cues and feedback, animations can help users understand where they are on a page and how they can interact with it. \nFor example, a subtle hover effect on a button can indicate that it is clickable, \nwhile a smooth scrolling animation can indicate that there is more content below the fold.<\/p>\n<p>Despite these benefits, there are also some potential downsides to using animations on the web. \nOne of the biggest concerns is that they can slow down the performance of a website. \nIf animations are not optimised properly, they can cause a website to load slowly, which can lead to a poor user experience.<\/p>\n<p>Another potential issue is that animations can be distracting if they are overused or too complex. \nThis can make it difficult for users to focus on the content of a website, and can ultimately lead to a negative user experience.<\/p>\n<p>As with all the tools available to us, animations should only be deployed when necessary, and when it serves a functional purpose for the user. <\/p>\n<p>In short then, animating elements should:<\/p>\n<ul>\n<li>Provide useful information<\/li>\n<li>Inspire confidence<\/li>\n<li>Guide the end-user<\/li>\n<\/ul>\n<p>So, how do we go about doing this correctly you ask? \nI've compiled a short list with examples, \nthat serve to showcase some of the ways animations can be deployed in accordance with the principles outlined above:<\/p>\n<ul>\n<li><a href=\"#orientation\">Orientation<\/a><\/li>\n<li><a href=\"#changes\">Changes<\/a><\/li>\n<li><a href=\"#new\">New Elements<\/a><\/li>\n<li><a href=\"#attention\">Attention<\/a><\/li>\n<li><a href=\"#visual\">Visual Feedback<\/a><\/li>\n<li><a href=\"#status\">Status<\/a><\/li>\n<\/ul>\n<h2>Orientation<\/h2>\n<p>Orientation is all about letting the end-user know where they are. \nThis could be their physical location on the page, their location on in a multistep form and so on.<\/p>\n<p>It is often useful to provide the user with a clear indication that their location has changed and in what direction.\nLeft, right, good, bad and so on. <\/p>\n<p>The following example is a simple signup form, that shows just one way to provide that information:<\/p>\n<div class=\"box orientation\" id=\"orientation\">\n  <h3>Orientation Example<\/h3>\n  <hr>\n  <div class=\"wrapper\">\n    <div class=\"wrapper-1\" id=\"wrapper-1\">\n      <form action=\"\">\n        <input type=\"text\" placeholder=\"Your name\"><br>\n        <input type=\"submit\" id=\"button1\" value=\"Next &rarr;\">\n      <\/form>\n    <\/div>\n    <div class=\"wrapper-2\" id=\"wrapper-2\">\n      <svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" data-name=\"Layer 1\" width=\"722\" height=\"568.2821\" viewBox=\"0 0 722 568.2821\" xmlns:xlink=\"http:\/\/www.w3.org\/1999\/xlink\"><path d=\"M682.38177,670.59287l-19.26887,17.7393,15.31342-25.6947c-12.06472-21.87846-31.79644-40.7868-31.79644-40.7868s-40.93644,39.22035-40.93644,70.05011,18.32776,41.59434,40.93644,41.59434c22.60831,0,40.93608-10.76459,40.93608-41.59434C687.566,685.0387,685.535,677.76131,682.38177,670.59287Z\" transform=\"translate(-239 -165.85895)\" fill=\"#f2f2f2\"\/><path d=\"M658.15748,689.29252v1.51962c-.09027,17.664-3.06935,31.44618-8.91474,41.15083-.08274.14294-.173.27834-.2558.42128l-.6545-.39869-.62437-.39121c6.48482-10.47954,8.77933-25.29233,8.86207-40.69943.00753-.49654.01506-1.00057.00753-1.5046-.02259-6.52247-.42129-13.12011-1.06072-19.52973-.04514-.49654-.09781-1.00057-.15047-1.5046-.88771-8.45585-2.16663-16.53554-3.47563-23.55452-.09027-.49654-.18807-.993-.28588-1.482-2.26443-11.87127-4.574-20.47006-5.10061-22.3734-.06015-.23321-.09781-.36109-.10534-.39117l.7147-.20313.00753-.00753.72222-.20314c.00753.03012.13541.45894.346,1.25638.805,2.97907,2.89639,11.0663,4.95015,21.73391.09027.48149.18808.978.27835,1.47453,1.06825,5.69492,2.114,12.05939,2.94152,18.73978q.31593,2.51649.56422,4.96521c.06015.504.11282,1.008.158,1.5046Q658.11993,680.20851,658.15748,689.29252Z\" transform=\"translate(-239 -165.85895)\" fill=\"#fff\"\/><path d=\"M653.13965,643.13134c-.504.06773-1.01559.13546-1.53468.18808a41.50155,41.50155,0,0,1-4.243.2182,40.37112,40.37112,0,0,1-17.45337-3.942c-.316.39869-.63191.79744-.95539,1.20366a41.86607,41.86607,0,0,0,18.40876,4.243,42.94076,42.94076,0,0,0,4.52886-.24075c.51156-.05266,1.02312-.12039,1.52715-.1956a41.51385,41.51385,0,0,0,11.9992-3.63362q-.48523-.62064-.94791-1.21873A40.23261,40.23261,0,0,1,653.13965,643.13134Z\" transform=\"translate(-239 -165.85895)\" fill=\"#fff\"\/><path d=\"M656.92374,668.31086q-.77864.0451-1.55726.04513c-.158.00753-.32349.00753-.48149.00753a40.5853,40.5853,0,0,1-33.31187-17.40071c-.3009.44384-.60183.88771-.8952,1.33908A42.09237,42.09237,0,0,0,654.885,669.86812c.21067,0,.42129,0,.632-.00753.52657-.00753,1.04566-.02259,1.56475-.04513a41.86987,41.86987,0,0,0,22.30572-7.82394c-.24075-.44384-.48149-.88771-.72976-1.33154A40.30668,40.30668,0,0,1,656.92374,668.31086Z\" transform=\"translate(-239 -165.85895)\" fill=\"#fff\"\/><path d=\"M658.15748,689.29252c-.52657.04514-1.05319.07521-1.57981.0978-.56423.02255-1.12845.03761-1.69268.03761a40.69511,40.69511,0,0,1-39.01428-29.27956c-.33854.60941-.67708,1.21124-1.00057,1.8206A42.18536,42.18536,0,0,0,654.885,690.93253c.56423,0,1.12845-.00753,1.68515-.03761.53415-.01506,1.06077-.04513,1.58734-.08278a42.062,42.062,0,0,0,27.7599-13.54894c-.158-.55669-.33855-1.10586-.51909-1.66255A40.56382,40.56382,0,0,1,658.15748,689.29252Z\" transform=\"translate(-239 -165.85895)\" fill=\"#fff\"\/><circle cx=\"98.7538\" cy=\"101.77816\" r=\"98.7538\" fill=\"#e4e4e4\"\/><circle cx=\"98.7538\" cy=\"101.77816\" r=\"82.29483\" fill=\"#6c63ff\"\/><circle cx=\"361\" cy=\"101.77816\" r=\"98.75379\" fill=\"#e4e4e4\"\/><circle cx=\"361\" cy=\"101.77816\" r=\"82.29483\" fill=\"#fff\"\/><circle cx=\"623.24622\" cy=\"101.77816\" r=\"98.75379\" fill=\"#e4e4e4\"\/><circle cx=\"623.24622\" cy=\"101.77816\" r=\"82.29482\" fill=\"#fff\"\/><path d=\"M330.76087,297.39691q-.22063,0-.44189-.01074a9.03472,9.03472,0,0,1-6.69885-3.48047l-12.62366-16.23047a9.05414,9.05414,0,0,1,1.58594-12.69092l.4541-.35351a9.05549,9.05549,0,0,1,12.69177,1.58593,8.044,8.044,0,0,0,12.18909.59424l25.63244-27.05761a9.04362,9.04362,0,0,1,12.78565-.34522l.41846.39649a9.04347,9.04347,0,0,1,.34509,12.78466l-39.77478,41.9834A9.03339,9.03339,0,0,1,330.76087,297.39691Z\" transform=\"translate(-239 -165.85895)\" fill=\"#fff\"\/><path d=\"M556.65748,247.64105h-65V191.1115a13.2249,13.2249,0,0,1,13.437-12.97045h21.6062c16.51831,0,29.95679,12.97186,29.95679,28.91639Z\" transform=\"translate(-239 -165.85895)\" fill=\"#2f2e41\"\/><polygon points=\"341.722 554.819 329.383 554.818 323.512 507.223 341.724 507.224 341.722 554.819\" fill=\"#ffb6b6\"\/><path d=\"M583.86909,732.63911l-39.78794-.00147v-.50325a15.48742,15.48742,0,0,1,15.48658-15.48634h.001l24.30112.001Z\" transform=\"translate(-239 -165.85895)\" fill=\"#2f2e41\"\/><polygon points=\"227.987 554.819 215.647 554.818 209.777 507.223 227.989 507.224 227.987 554.819\" fill=\"#ffb6b6\"\/><path d=\"M470.13393,732.63911l-39.78794-.00147v-.50325a15.48742,15.48742,0,0,1,15.48658-15.48634h.001l24.30112.001Z\" transform=\"translate(-239 -165.85895)\" fill=\"#2f2e41\"\/><polygon points=\"242.886 172.448 234.834 223.78 311.328 224.786 301.263 175.468 242.886 172.448\" fill=\"#ffb6b6\"\/><path d=\"M476.05381,377.10523l-24.36316,64.872-3.01952,268.84008H469.3045l49.31879-215.99853L563.91605,705.1785h20.13012L569.95509,468.64963s4.15532-47.47408-17.1106-75.48793l-5.17631-14.95477Z\" transform=\"translate(-239 -165.85895)\" fill=\"#2f2e41\"\/><path d=\"M580.55786,427.67626a15.10008,15.10008,0,0,1-9.67476-21.036L538.34119,300.54574,562.277,295.801l29.76276,103.99478a15.18192,15.18192,0,0,1-11.48193,27.8805Z\" transform=\"translate(-239 -165.85895)\" fill=\"#ffb6b6\"\/><path d=\"M537.49224,366.65567l-52.72953-1.01784a6.8935,6.8935,0,0,1-6.53416-5.193c-2.82676-11.1919-9.04594-40.35947-5.74712-69.41031a42.36529,42.36529,0,0,1,48.15276-37.06012A42.38438,42.38438,0,0,1,555.622,306.69585c-6.63746,25.206-10.38656,43.23868-11.14321,53.59834A6.8785,6.8785,0,0,1,538.969,366.526h0a6.85738,6.85738,0,0,1-1.33013.13126C537.58988,366.65728,537.54119,366.65674,537.49224,366.65567Z\" transform=\"translate(-239 -165.85895)\" fill=\"#e4e4e4\"\/><path d=\"M377.32224,273.46385a14.79514,14.79514,0,0,1,.77821,2.196L444.10291,298.088l12.75361-11.1416,19.33032,17.04976L455.5259,325.91432a11.24491,11.24491,0,0,1-13.29777,2.30092l-70.62668-36.076a14.75488,14.75488,0,1,1,5.72079-18.67543Z\" transform=\"translate(-239 -165.85895)\" fill=\"#ffb6b6\"\/><path d=\"M444.23968,294.51124a6.31855,6.31855,0,0,1,2.22207-4.77525L470.629,269.15007a17.56656,17.56656,0,0,1,26.52854,23.034l-17.21,26.79926a6.3253,6.3253,0,0,1-9.483,1.34577l-24.06073-21.01521A6.3182,6.3182,0,0,1,444.23968,294.51124Z\" transform=\"translate(-239 -165.85895)\" fill=\"#e4e4e4\"\/><path d=\"M536.88307,327.41989a6.31848,6.31848,0,0,1-3.21567-4.17133l-7.14526-30.93191a17.56655,17.56655,0,0,1,32.66228-12.94224l15.86431,27.61717a6.32532,6.32532,0,0,1-3.172,9.03753l-29.734,11.68121A6.31818,6.31818,0,0,1,536.88307,327.41989Z\" transform=\"translate(-239 -165.85895)\" fill=\"#e4e4e4\"\/><ellipse cx=\"548.66423\" cy=\"177.77072\" rx=\"11.25352\" ry=\"15.00469\" transform=\"translate(-69.34548 446.63755) rotate(-66.86956)\" fill=\"#2f2e41\"\/><circle cx=\"511.81881\" cy=\"211.38779\" r=\"30.77462\" transform=\"translate(-158.16328 393.23234) rotate(-61.33681)\" fill=\"#ffb6b6\"\/><path d=\"M528.70082,176.14105H493.5a10.22757,10.22757,0,0,0-10.3209,9.33429,10.00082,10.00082,0,0,0,9.97841,10.66571h0a10,10,0,0,1,10,10v41h55V205.59772A29.45667,29.45667,0,0,0,528.70082,176.14105Z\" transform=\"translate(-239 -165.85895)\" fill=\"#2f2e41\"\/><path d=\"M702.22441,734.141h-381a1,1,0,0,1,0-2h381a1,1,0,0,1,0,2Z\" transform=\"translate(-239 -165.85895)\" fill=\"#cacaca\"\/><\/svg>\n      <input type=\"submit\" id=\"button2\" value=\"&larr; Back\">\n    <\/div>\n  <\/div>\n<\/div>\n<h2>Changes<\/h2>\n<p>Providing visual indication when an element changes is often useful. \nIt indicates that an element has been changed and might not serve the same purpose anymore. \nA clear example of this is the well known basic toggle:<\/p>\n<div class=\"box changes\" id=\"changes\">\n  <h3>Change Example<\/h3>\n  <hr>\n  <div class=\"wrapper\">\n    <div class=\"checkbox\">\n      <input type=\"checkbox\" id=\"checked\" class=\"checkbox-input\" checked\/>\n      <label for=\"checked\" class=\"checkbox-label\"><\/label>\n    <\/div>\n  <\/div>\n<\/div>\n<h2>New Elements<\/h2>\n<p>Adding new elements to the page is rarely done without disrupting the flow, \nor at the very least drawing the users attention. \nAnimating this action serves to enhance the experience and minimise disruption and flow.<\/p>\n<p>The following example adds a new element to the page, but does so in a smooth motion, so as not to interrupt and confuse the user:<\/p>\n<div class=\"box new\" id=\"new\">\n  <h3>New Element Example<\/h3>\n  <hr>\n  <div class=\"wrapper\">\n    <div class=\"parent\">\n      <div class=\"div1\"><\/div>\n      <div class=\"div2\" id=\"newElement\"><\/div>\n      <div class=\"div3\"><\/div>\n      <div class=\"div4\"><\/div>\n      <div class=\"div5\"><\/div>\n      <div class=\"div6\"><button id=\"newElementAction\">Add new<\/button><\/div>\n      <div class=\"div7\"><\/div>\n    <\/div>\n  <\/div>\n<\/div>\n<h2>Attention<\/h2>\n<p>When a change occurs on a page or an event takes place that requires the end-users immediate attention, \nit's useful to draw their gaze to said event. Animating this \"call to action\" serves to do so, by capturing users attention. <\/p>\n<p>The following example highlights an event that indicates that attention or action is required:<\/p>\n<div class=\"box attention\" id=\"attention\">\n  <h3>Attention Example<\/h3>\n  <hr>\n  <div class=\"parent\">\n    <div class=\"div1\">\n      <div class=\"big\"><\/div>\n      <div class=\"first\">\n        <div class=\"ping\"><\/div>\n      <\/div>\n      <div><\/div>\n      <div><\/div>\n      <div><\/div>\n      <div><\/div>\n    <\/div>\n    <div class=\"div2\"><\/div>\n    <div class=\"div3\"><\/div>\n  <\/div>\n<\/div>\n<h2>Visual Feedback<\/h2>\n<p>Providing the user with visual feedback when an event happens, \nhelps them to understand that the status quo has changed, and more importantly in what way it has changed and why.<\/p>\n<p>Take the following dialog for example.\nSliding the dialog into view this way, provides the immediate feedback that is expected when the button is pressed.\nBut more importantly it tells the user where the dialog \"was\" and where it's gone once closed again.<\/p>\n<div class=\"box visual\" id=\"visual\">\n  <h3>Visual Feedback Example<\/h3>\n  <hr>\n  <button class=\"modal__trigger\">Open modal<\/button>\n  <div class=\"modal\">\n    <span class=\"modal__close\">&#x2715;<\/span>\n    <h2 class=\"modal__title\">This is a title<\/h2>\n    <p class=\"modal__content\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Impedit necessitatibus illo deleniti doloremque culpa voluptas recusandae, sunt eligendi amet, ut modi voluptatibus ipsa quas voluptatem consectetur atque, velit reprehenderit debitis.<\/p>\n    <button class=\"modal__action\">Read more &#8594;<\/button>\n  <\/div>\n<\/div>\n<h2>Status<\/h2>\n<p>Relaying system status is something that comes up often in my work. We provide automated cloud hosting at <a href=\"https:\/\/cloudservers.dk\">cloudservers.dk<\/a>,\nwhich requires some processes to run in the background, during which time nothing happens in the front-end.<\/p>\n<p>To minimise support requests and build trust with out customers we try to provide live status updates wherever and whenever possible.\nThis lets the users know that the system is in fact working as intended, and thus avoids a lot of panic and frustration.<\/p>\n<p>Among the many different indicators we use, \nthe status bar is probably the clearest example of how an animated progress bar can put a user at ease, when a process is running in the background:<\/p>\n<div class=\"box status\" id=\"status\">\n  <h3>Status Example<\/h3>\n  <hr>\n  <div class=\"wrapper\">\n    <div class=\"progress-bar\">\n      <div class=\"progress\"><\/div>\n    <\/div>\n  <\/div>\n<\/div>\n<h2>Conclusion<\/h2>\n<p>In conclusion, animations can be a powerful tool for enhancing the user experience on the web. \nThey can guide users through a website, improve the overall aesthetic, and improve usability. \nHowever, it is important to use animations thoughtfully and strategically to ensure that they do not have any negative impacts on the user experience. \nBy doing so, we can create engaging and effective websites that users will love.<\/p>\n<script>\n  \/\/ Orientation\n  function orientation() {\n    const orientationElement = document.querySelector('#orientation');\n    const orientationWrapper1 = orientationElement.querySelector('#wrapper-1');\n    const orientationWrapper2 = orientationElement.querySelector('#wrapper-2');\n    const orientationAction1 = orientationElement.querySelector('#button1');\n    const orientationAction2 = orientationElement.querySelector('#button2');\n    orientationAction1.addEventListener('click', function(e)\u00a0{\n      e.preventDefault();\n      orientationWrapper1.style.left = \"-100%\";\n      orientationWrapper2.style.left = \"0\";\n    });\n    orientationAction2.addEventListener('click', function(e)\u00a0{\n      e.preventDefault();\n      orientationWrapper1.style.left = \"0\";\n      orientationWrapper2.style.left = \"100%\";\n    });\n  }\n  \/\/ New Element \n  function newElement() {\n    const newElementButton = document.querySelector('#newElementAction');\n    const newElementContainer = document.querySelector('#newElement');\n    newElementButton.addEventListener('click', function(e)\u00a0{\n      newElementContainer.classList.toggle('active');\n    });\n  }\n  \/\/ modal\n  function modal() {\n    const modalBox = document.querySelector('.modal'),\n        modalTrigger = document.querySelector('.modal__trigger'),\n        modalClose = document.querySelector('.modal__close'),\n        modalTitle = document.querySelector('.modal__title'),\n        modalContent = document.querySelector('.modal__content'),\n        modalAction = document.querySelector('.modal__action');\n    modalTrigger.addEventListener('click', function(e) {\n      modalBox.classList.toggle('modal--active');\n      if(modalBox.attributes['aria-hidden'].value == \"true\") {\n        console.log(modalBox);\n        modalBox.setAttribute(\"aria-hidden\", \"false\");\n      } else {\n        console.log(modalBox);\n        modalBox.setAttribute(\"aria-hidden\", \"true\");\n      }\n      e.stopPropagation();\n    });\n    modalClose.addEventListener('click', function() {\n      modalBox.classList.remove('modal--active');\n      if(modalBox.attributes['aria-hidden'].value == \"true\") {\n        console.log(modalBox);\n        modalBox.setAttribute(\"aria-hidden\", \"false\");\n      } else {\n        console.log(modalBox);\n        modalBox.setAttribute(\"aria-hidden\", \"true\");\n      }\n    });\n  }\n  \/\/ Run functions\n  orientation();\n  newElement();\n  modal();\n<\/script>"],["Units on the Web","units-on-the-web","10\/03\/2023","css","2023\/03\/10\/units-on-the-web\/","<style>\n.box {\n    border: 2px solid black;\n    background: white;\n    color: black;\n    display: inline-block;\n    margin-bottom: 5px;\n    padding: 5px;\n    text-align: center;\n}\n.darkmode .box,\n.darkmode .grid .item {\n    border: 2px solid white;\n}\n.grid {\n    display: grid;\n    gap: 5px;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    grid-template-rows: 100px 200px 100px;\n    grid-template-areas:\n        \"head head blank side\"\n        \"main main blank side\"\n        \"footer footer footer footer\";\n<p>}\n.grid .item {\nborder: 2px solid black;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\ntext-align: center;\n}\n.grid .item.item-1 {\ngrid-area: head;<br \/>\n}\n.grid .item.item-2 {\ngrid-area: main;\n}\n.grid .item.item-2-5 {\ngrid-area: blank;\nborder: 0;\nbackground-color: #F9F7FF30;\nbackground: repeating-linear-gradient( -45deg, #00000010, #00000010 calc( 5px\/2), #F9F7FF30 calc( 5px\/2), #F9F7FF30 calc( 5px*2) );\n}\n.grid .item.item-3 {\ngrid-area: side;<br \/>\n}\n.grid .item.item-4 {\ngrid-area: footer;<br \/>\n}<\/p>\n<\/style>\n<h1>Units on the Web<\/h1>\n<p class='timestamp'><time datetime='10-03-2023'>10-03-2023<\/time><\/p>\n<hr>\n<p>In CSS, units are used to define the size, distance, and other dimensions of elements on a web page. There are several types of units in CSS:<\/p>\n<h2>Absolute length units<\/h2>\n<p>These units are fixed and do not change with screen resolution or zoom level. They include:<\/p>\n<table>\n<thead>\n<tr>\n<th>Unit<\/th>\n<th>Name<\/th>\n<th>Equivalent<\/th>\n<\/tr>\n<\/thead>\n<tbody>\n<tr>\n<td><code>1cm<\/code><\/td>\n<td>Centimeters<\/td>\n<td>37.8px<\/td>\n<\/tr>\n<tr>\n<td><code>1mm<\/code><\/td>\n<td>Millimeters<\/td>\n<td>3.78px<\/td>\n<\/tr>\n<tr>\n<td><code>1Q<\/code><\/td>\n<td>Quarter-millimeters<\/td>\n<td>0.95px<\/td>\n<\/tr>\n<tr>\n<td><code>1in<\/code><\/td>\n<td>Inches<\/td>\n<td>96px<\/td>\n<\/tr>\n<tr>\n<td><code>1pc<\/code><\/td>\n<td>Picas<\/td>\n<td>16px<\/td>\n<\/tr>\n<tr>\n<td><code>1pt<\/code><\/td>\n<td>Points<\/td>\n<td>1.33px<\/td>\n<\/tr>\n<tr>\n<td><code>1px<\/code><\/td>\n<td>Pixels<\/td>\n<td>1px<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<p>Pixel is the most commonly used absolute unit in CSS. It represents a single dot on a screen and is often used for precise measurements.<\/p>\n<p>You will rarely have use for other absolute units of length on the web, though there are cases where you might want to create a layout that translates well on print.\nUnder those conditions, real world measurements like inches, centimeters and even millimeters might come in handy.<\/p>\n<h3>Examples<\/h3>\n<p>The following examples have their <code>width<\/code> set to the respective units and measurements:<\/p>\n<div class=\"box\" style=\"background-color:#e6b0aa; width:3cm;\">3cm<\/div>\n<div class=\"box\" style=\"background-color:#f5b6b1; width:30mm;\">30mm<\/div>\n<div class=\"box\" style=\"background-color:#d7bce1; width:120Q;\">150Q<\/div>\n<div class=\"box\" style=\"background-color:#d2b4de; width:1.5in;\">1.5in<\/div>\n<div class=\"box\" style=\"background-color:#a9cce3; width:8pc;\">8pc<\/div>\n<div class=\"box\" style=\"background-color:#aed6f1; width:100pt;\">100pt<\/div>\n<div class=\"box\" style=\"background-color:#a3e4d7; width:100px;\">100px<\/div>\n<h2>Relative length units<\/h2>\n<p>These units are relative to other elements on the page or to the viewport size. They include:<\/p>\n<table>\n<thead>\n<tr>\n<th>Unit<\/th>\n<th>Relative to<\/th>\n<\/tr>\n<\/thead>\n<tbody>\n<tr>\n<td><code>vw<\/code><\/td>\n<td>% of the viewport's width<\/td>\n<\/tr>\n<tr>\n<td><code>vh<\/code><\/td>\n<td>% of the viewport's height<\/td>\n<\/tr>\n<tr>\n<td><code>vmin<\/code><\/td>\n<td>% of the viewport's smaller dimension<\/td>\n<\/tr>\n<tr>\n<td><code>vmax<\/code><\/td>\n<td>% of the viewport's larger dimension<\/td>\n<\/tr>\n<tr>\n<td><code>vb<\/code><\/td>\n<td>% of the size of the initial containing block in the direction of the root element's <em>block<\/em> axis<\/td>\n<\/tr>\n<tr>\n<td><code>vi<\/code><\/td>\n<td>% of the size of the initial containing block in the direction of the root element's <em>inline<\/em> axis<\/td>\n<\/tr>\n<tr>\n<td><code>svw<\/code> <code>svh<\/code><\/td>\n<td>% of the small viewport's width and height, respectively<\/td>\n<\/tr>\n<tr>\n<td><code>lvw<\/code> <code>lvh<\/code><\/td>\n<td>% of the large viewport's width and height, respectively<\/td>\n<\/tr>\n<tr>\n<td><code>dvw<\/code> <code>dvh<\/code><\/td>\n<td>% of the dynamic viewport's width and height, respectively<\/td>\n<\/tr>\n<tr>\n<td><code>%<\/code><\/td>\n<td>% of the parent element<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<h3>Examples<\/h3>\n<p>Note how(try resizing your browser window) the <code>width<\/code> of these elements change according to the size(height and width) of the viewport(your browser window):<\/p>\n<div class=\"box\" style=\"background-color:#e6b0aa; width:10vw;\">10vw<\/div>\n<div class=\"box\" style=\"background-color:#f5b6b1; width:10vh;\">10vh<\/div>\n<div class=\"box\" style=\"background-color:#d7bce1; width:10vmin;\">10vmin<\/div>\n<div class=\"box\" style=\"background-color:#d2b4de; width:10vmax;\">10vmax<\/div>\n<div class=\"box\" style=\"background-color:#a9cce3; width:10vb;\">10vb<\/div>\n<div class=\"box\" style=\"background-color:#aed6f1; width:10vi;\">10vi<\/div>\n<div class=\"box\" style=\"background-color:#a3e4d7; width:10svw;\">10svw<\/div>\n<div class=\"box\" style=\"background-color:#a2d9ce; width:10svh;\">10svh<\/div>\n<div class=\"box\" style=\"background-color:#d4efdf; width:10lvw;\">10lvw<\/div>\n<div class=\"box\" style=\"background-color:#d5f5e3; width:10lvh;\">10lvh<\/div>\n<div class=\"box\" style=\"background-color:#fbf3cf; width:10dvw;\">10dvw<\/div>\n<div class=\"box\" style=\"background-color:#fdebd0; width:10dvh;\">10dvh<\/div>\n<div class=\"box\" style=\"background-color:#f9e5d3; width:10%;\">10%<\/div>\n<h2>Font-relative length units<\/h2>\n<p>These units are used to define the size of text, and are relative to the font-size or line-height of the element. They include:<\/p>\n<table>\n<thead>\n<tr>\n<th>Unit<\/th>\n<th>Relative to<\/th>\n<\/tr>\n<\/thead>\n<tbody>\n<tr>\n<td><code>em<\/code><\/td>\n<td>Font size of the parent<\/td>\n<\/tr>\n<tr>\n<td><code>rem<\/code><\/td>\n<td>Font size of the root element<\/td>\n<\/tr>\n<tr>\n<td><code>lh<\/code><\/td>\n<td>Line height of the element<\/td>\n<\/tr>\n<tr>\n<td><code>rlh<\/code><\/td>\n<td>Line height of the root element<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<h3>Examples<\/h3>\n<p>These units are commonly used to define the font-size and width of elements:<\/p>\n<div class=\"box\" style=\"background-color:#e6b0aa; width:10em;\">10em<\/div>\n<div class=\"box\" style=\"background-color:#f5b6b1; width:10rem;\">10rem<\/div>\n<div class=\"box\" style=\"background-color:#d7bce1; width:10lh;\">10lh<\/div>\n<div class=\"box\" style=\"background-color:#d2b4de; width:10rlh;\">10rlh<\/div>\n<p><code>em<\/code> and <code>rem<\/code> are the two relative lengths you are most likely to encounter when sizing anything from boxes to text. \nIt's worth understanding how these work, and the differences between them. <\/p>\n<p>The below examples provide a demonstration.<\/p>\n<p>To start with, we set <em>16px<\/em> as the <code>font-size<\/code> on the <code>&lt;html&gt;<\/code> element:<\/p>\n<pre><code class=\"language-CSS\">html {\n    font-size: 16px;\n}<\/code><\/pre>\n<p>Thanks to the cascading nature of CSS, this means that the default <code>font-size<\/code> of our document is now <em>16px<\/em> \nand is thusly inherited by all elements that don't otherwise have a specified <code>font-size<\/code>.<\/p>\n<p>We can now use <code>em<\/code> and <code>rem<\/code> to directly reference this unit of measurement, as we've set 1em &amp; 1rem = 16px.<\/p>\n<p>So we can write CSS like this:<\/p>\n<pre><code class=\"language-CSS\">p {\n    font-size: 2rem \/* or 2 * 16px = 32px *\/\n}<\/code><\/pre>\n<p>Say we want to change this for a specific element, but not everywhere on the page. \nAll we need to do in this case, is reference the parent element(with <code>em<\/code>) instead of the root element(with <code>rem<\/code>) and update the pixel value of the parent accordingly:<\/p>\n<pre><code class=\"language-CSS\">.text-block {\n    font-size: 20px\n}\n.text-block p {\n    font-size: 2em \/* or 2 * 20px = 40px *\/\n}<\/code><\/pre>\n<p><code>em<\/code> and <code>rem<\/code> are very powerful tools when attempting to scale elements in relation to one another.<\/p>\n<h2>Other length units<\/h2>\n<p>CSS also supports other units such as the <code>ex<\/code> unit (relative to the x-height of the font), \nthe <code>ch<\/code> unit (relative to the width of the \"0\" character in the font), and the <code>fr<\/code> unit (used in CSS Grid Layout to distribute available space).<\/p>\n<table>\n<thead>\n<tr>\n<th>Unit<\/th>\n<th>Description<\/th>\n<\/tr>\n<\/thead>\n<tbody>\n<tr>\n<td><code>fr<\/code><\/td>\n<td>Used in CSS Grid Layout to distribute available space<\/td>\n<\/tr>\n<tr>\n<td><code>ex<\/code><\/td>\n<td>Relative to the x-height of the the element's font<\/td>\n<\/tr>\n<tr>\n<td><code>ch<\/code><\/td>\n<td>The advance measure (width) of the glyph \"0\" of the element's font.<\/td>\n<\/tr>\n<\/tbody>\n<\/table>\n<h3><code>fr<\/code>-unit<\/h3>\n<p>With CSS Grid Layout, we get a new flexible unit: the <code>fr<\/code> unit. \nThis is a fractional unit which means that <code>1fr<\/code> takes up 1 part of the available space.<\/p>\n<p>In the following example we're working with 4 columns which in turn means that <code>1fr<\/code> = <code>25%<\/code><\/p>\n<pre><code class=\"language-CSS\">.grid {\n    display: grid;\n    gap: 5px;\n\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n\n    grid-template-rows: 100px 200px 100px;\n    grid-template-areas:\n        \"head head . side\"\n        \"main main . side\"\n        \"footer footer footer footer\";\n}<\/code><\/pre>\n<div class=\"grid\">\n    <div class=\"item item-1\">head<br>&larr;2fr&rarr;<\/div>\n    <div class=\"item item-2\">main<br>&larr;2fr&rarr;<\/div>\n    <div class=\"item item-2-5\">&larr;1fr&rarr;<\/div>\n    <div class=\"item item-3\">side<br>&larr;1fr&rarr;<\/div>\n    <div class=\"item item-4\">footer<br>&larr;4fr&rarr;<\/div>\n<\/div>\n<h2>Conclusion<\/h2>\n<p>While you can accomplish a lot with knowledge of just a few of the units available to you, it is very beneficial to have a grasp of them all.<\/p>\n<p>Without insight into the different unit types, you couldn't do fun stuff like <a href=\"https:\/\/triss.dev\/blog\/2020\/05\/20\/fluid-typography\/\">fluid typography<\/a>:<\/p>\n<pre><code class=\"language-CSS\">html {\n    font-size: calc(16px + 6 * ((100vw - 320px) \/ 680));\n}<\/code><\/pre>"],["Weekly Widget - CSS Coupon","weekly-widget-css-coupon","27\/03\/2023","Weekly Widget","2023\/03\/27\/weekly-widget-css-coupon\/","<h1>Weekly Widget - CSS Coupon<\/h1>\n<p class='timestamp'><time datetime='27-03-2023'>27-03-2023<\/time><\/p>\n<hr>\n<p>I was looking some old work and stumbled upon a few widgets I found interesting. \nSo I'm officially introducing a new segment: <strong>Weekly Widget<\/strong>. <\/p>\n<p>I'll attempt to post an interesting snippet every week, for however long I keep digging up stuff worthy of posting.<\/p>\n<p>This week's widget is a simple CSS coupon:<\/p>\n<p class=\"codepen\" data-height=\"436.04296875\" data-default-tab=\"result\" data-slug-hash=\"jONKXZY\" data-user=\"triss90\" style=\"height: 436.04296875px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  <span>See the Pen <a href=\"https:\/\/codepen.io\/triss90\/pen\/jONKXZY\">\n  CSS Coupon<\/a> by Tristan  White (<a href=\"https:\/\/codepen.io\/triss90\">@triss90<\/a>)\n  on <a href=\"https:\/\/codepen.io\">CodePen<\/a>.<\/span>\n<\/p>\n<script async src=\"https:\/\/cpwebassets.codepen.io\/assets\/embed\/ei.js\"><\/script>"],["Aspect Ratio Revisited","aspect-ratio-revisited","28\/03\/2023","CSS","2023\/03\/28\/aspect-ratio-revisited\/","<style>\n  .result {\n    text-decoration-line: underline;\n    text-decoration-style: double;\n  }\n  .example {\n    width: 100%;\n    background-image: url('https:\/\/webbox.dev\/placeholder\/image.php?width=533&height=300&text=placeholder&textColor=162,252,162&backgroundColor=34,34,34');\n    background-size: cover;\n  }\n  .example-1 {\n    height: 0;\n    padding-top: 56.25%\n  }\n  .example-2 {\n    aspect-ratio: 16 \/ 9;\n  }\n<\/style>\n<h1>Aspect Ratio Revisited<\/h1>\n<p class='timestamp'><time datetime='28-03-2023'>28-03-2023<\/time><\/p>\n<hr>\n<p>Back in 2019 I wrote a short post about <a href=\"https:\/\/triss.dev\/blog\/2019\/06\/07\/maintaining-aspect-ration\/\">Maintaining Aspect Ratio<\/a> with CSS. <\/p>\n<p>The example I gave, took advantage of what is called the \"padding-hack\", \nwhich works by setting the <code>height<\/code> of an element to 0 and the <code>padding-top<\/code> \nto the percentage that represents the relation between width and height, i.e. the aspect ratio.<\/p>\n<p>To maintain an aspect ratio of 9:16 you would be setting the <code>padding-top<\/code> to 56.25% like so:<\/p>\n<pre><code>.element {\n  width: 100%;\n  background-image: url('https:\/\/webbox.dev\/placeholder\/image.php?width=533&amp;height=300&amp;text=placeholder&amp;textColor=162,252,162&amp;backgroundColor=34,34,34');\n  background-size: cover;\n\n  \/* Aspect Ratio *\/\n  height: 0;\n  padding-top: 56.25%\n}<\/code><\/pre>\n<p><strong>Result:<\/strong><\/p>\n<p><small>Resize window to see the effect of the applied aspect ratio<\/small><\/p>\n<div class=\"example example-1\"><\/div>\n<p>To calculate the percentage of your aspect ratio, simply divide the dimensions like so: ( 9 \/ 16 ) \u00d7 100 = <span class=result>56.25%<\/span>.<\/p>\n<h2>So what's new?<\/h2>\n<p>In the time since I posted this \"hack\", the CSS property <code>aspect-ratio<\/code> has gained full support in all major browsers, \nso we now have a much better way of defining aspect ratio.<\/p>\n<p>Using the CSS property <code>aspect-ratio<\/code> removes all the guesswork and calculations required. \nYou simply need to define your preferred aspect ratio like so:<\/p>\n<pre><code>.element {\n  width: 100%;\n  background-image: url('https:\/\/webbox.dev\/placeholder\/image.php?width=533&amp;height=300&amp;text=placeholder&amp;textColor=162,252,162&amp;backgroundColor=34,34,34');\n  background-size: cover;\n\n  \/* Aspect Ratio *\/\n  aspect-ratio: 16 \/ 9;\n}<\/code><\/pre>\n<p><strong>Result:<\/strong><\/p>\n<p><small>Resize window to see the effect of the applied aspect ratio<\/small><\/p>\n<div class=\"example example-2\"><\/div>\n<p>Note that whenever you want to use <code>aspect-ratio<\/code> you must only define one dimension, either width or height, \notherwise the aspect ratio will be overridden.<\/p>"],["Weekly Widget - CSS Skewed Graphic","weekly-widget-css-skewed-graphic","03\/04\/2023","Weekly Widget","2023\/04\/03\/weekly-widget-css-skewed-graphic\/","<h1>Weekly Widget - CSS Skewed Graphic<\/h1>\n<p class='timestamp'><time datetime='03-04-2023'>03-04-2023<\/time><\/p>\n<hr>\n<p>This week's widget is a simple skewed graphic, made with pure CSS, enjoy:<\/p>\n<p class=\"codepen\" data-height=\"807.54296875\" data-default-tab=\"result\" data-slug-hash=\"PoYyNrO\" data-user=\"triss90\" style=\"height: 700px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  <span>See the Pen <a href=\"https:\/\/codepen.io\/triss90\/pen\/PoYyNrO\">\n  CSS graphic<\/a> by Tristan  White (<a href=\"https:\/\/codepen.io\/triss90\">@triss90<\/a>)\n  on <a href=\"https:\/\/codepen.io\">CodePen<\/a>.<\/span>\n<\/p>\n<script async src=\"https:\/\/cpwebassets.codepen.io\/assets\/embed\/ei.js\"><\/script>"],["Weekly Widget - \"Toss\" Add to Cart Animation","weekly-widget-toss-cart-animation","10\/05\/2023","Weekly Widget","2023\/05\/10\/weekly-widget-toss-cart-animation\/","<h1>\"Toss\" Add to Cart Animation<\/h1>\n<p class='timestamp'><time datetime='10-05-2023'>10-05-2023<\/time><\/p>\n<hr>\n<p>This week's widget is a fancy add to cart animation, made with CSS and a bit of JS to make it interactable, enjoy:<\/p>\n<p class=\"codepen\" data-height=\"800\" data-default-tab=\"result\" data-slug-hash=\"vYEPxLY\" data-user=\"triss90\" style=\"height: 700px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  <span>See the Pen <a href=\"https:\/\/codepen.io\/triss90\/pen\/vYEPxLY\">\n  \"Toss\" Add to Cart Animation<\/a> by Tristan  White (<a href=\"https:\/\/codepen.io\/triss90\">@triss90<\/a>)\n  on <a href=\"https:\/\/codepen.io\">CodePen<\/a>.<\/span>\n<\/p>\n<script async src=\"https:\/\/cpwebassets.codepen.io\/assets\/embed\/ei.js\"><\/script>"],["Color systems with CSS color-mix","color-systems-with-css-color-mix","17\/05\/2023","CSS","2023\/05\/17\/color-systems-with-css-color-mix\/","<style>\n:root {\n  --primary: #e62739;\n  --primary-a90: color-mix(in srgb, var(--primary), transparent 10%);\n  --primary-a80: color-mix(in srgb, var(--primary), transparent 20%);\n  --primary-a50: color-mix(in srgb, var(--primary), transparent 50%);\n  --secondary: #21A8A3;\n  --secondary-a90: color-mix(in srgb, var(--secondary), transparent 10%);\n  --secondary-a80: color-mix(in srgb, var(--secondary), transparent 20%);\n  --secondary-a50: color-mix(in srgb, var(--secondary), transparent 50%);\n  --dark: #19191a;\n  --dark-a90: color-mix(in srgb, var(--dark), transparent 10%);\n  --dark-a80: color-mix(in srgb, var(--dark), transparent 20%);\n  --dark-a50: color-mix(in srgb, var(--dark), transparent 50%);\n  --light: #f1f1f1;\n  --light-a90: color-mix(in srgb, var(--light), transparent 10%);\n  --light-a80: color-mix(in srgb, var(--light), transparent 20%);\n  --light-a50: color-mix(in srgb, var(--light), transparent 50%);\n}\n.box-group {\n  display: flex;\n  margin-bottom: 1rem;\n  overflow: hidden;\n  border-radius: 0.5rem;\n  box-shadow: 0 0 10px rgba(0,0,0,0.2);\n}\n.box {\n  width: 25%;\n  aspect-ratio: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  font-size: 65%;\n  color: var(--light);\n}\n.box-group#light .box {\n  color: var(--dark);\n}\n<\/style>\n<h1>Color systems with CSS color-mix()<\/h1>\n<p class='timestamp'><time datetime='17-05-2023'>17-05-2023<\/time><\/p>\n<hr>\n<p>With the advent of CSS4, we're introduced to the <code>color-mix()<\/code> function, which offers a powerful tool for web designers and developers. This function allows the mixing of two colors in a specified color space, providing a high degree of control over the resultant color.<\/p>\n<p>The syntax for the <code>color-mix()<\/code> function is as follows:<\/p>\n<pre><code>color-mix(&lt;colorspace&gt; &lt;color&gt; [percentage], &lt;color&gt;)<\/code><\/pre>\n<p>The <code>&lt;colorspace&gt;<\/code> can be any one of <code>srgb<\/code>, <code>display-p3<\/code>, <code>a98-rgb<\/code>, <code>prophoto-rgb<\/code>, or <code>rec-2020<\/code>, each offering a different color gamut. The <code>&lt;color&gt;<\/code> values represent the two colors to be mixed, and the optional <code>[percentage]<\/code> value determines the proportion of the first color in the resultant color. If the <code>[percentage]<\/code> is not provided, the two colors are mixed equally.<\/p>\n<p>For example, mixing red and blue equally in the sRGB color space can be achieved as follows:<\/p>\n<pre><code class=\"language-CSS\">div {\n  background-color: color-mix(in srgb, red, blue);\n}<\/code><\/pre>\n<p><strong>Example:<\/strong><\/p>\n<div class=\"box\" style=\"background-color:color-mix(in srgb, red, blue); box-shadow: 0 0 10px rgba(0,0,0,0.2); border-radius: 0.5rem\"><\/div>\n<p>Or, to mix red and blue in the sRGB color space with red contributing 60% to the resultant color, you would use:<\/p>\n<pre><code class=\"language-CSS\">div {\n  background-color: color-mix(in srgb, red 60%, blue);\n}<\/code><\/pre>\n<p><strong>Example:<\/strong><\/p>\n<div class=\"box\" style=\"background-color: color-mix(in srgb, red 60%, blue); box-shadow: 0 0 10px rgba(0,0,0,0.2); border-radius: 0.5rem\"><\/div>\n<h2>Color System<\/h2>\n<p>A color framework for a web project is essentially a set of guidelines that help maintain consistency, improve user experience, and emphasize the visual identity of a web application or site. It involves a systematic approach to using color throughout a web project, from the user interface design to the branding.<\/p>\n<p>A color framework usually consists of a series of primary colors, secondary colors, dark and light colors, but also hues, or darker and lighter shades of these. <code>color-mix<\/code>can be used to achieve this while mainting very readable code:<\/p>\n<pre><code class=\"language-CSS\">:root {\n  --primary: #e62739;\n  --primary-a90: color-mix(in srgb, var(--primary), transparent 10%);\n  --primary-a80: color-mix(in srgb, var(--primary), transparent 20%);\n  --primary-a50: color-mix(in srgb, var(--primary), transparent 50%);\n\n  --secondary: #21A8A3;\n  --secondary-a90: color-mix(in srgb, var(--secondary), transparent 10%);\n  --secondary-a80: color-mix(in srgb, var(--secondary), transparent 20%);\n  --secondary-a50: color-mix(in srgb, var(--secondary), transparent 50%);\n\n  --dark: #19191a;\n  --dark-a90: color-mix(in srgb, var(--dark), transparent 10%);\n  --dark-a80: color-mix(in srgb, var(--dark), transparent 20%);\n  --dark-a50: color-mix(in srgb, var(--dark), transparent 50%);\n\n  --light: #f1f1f1;\n  --light-a90: color-mix(in srgb, var(--light), transparent 10%);\n  --light-a80: color-mix(in srgb, var(--light), transparent 20%);\n  --light-a50: color-mix(in srgb, var(--light), transparent 50%);\n}<\/code><\/pre>\n<p><strong>Example:<\/strong><\/p>\n<div class=\"box-group\">\n  <div class=\"box\" style=\"background-color: var(--primary)\">var(--primary<\/div>\n  <div class=\"box\" style=\"background-color: var(--primary-a90)\">var(--primary-a90)<\/div>\n  <div class=\"box\" style=\"background-color: var(--primary-a80)\">var(--primary-a80)<\/div>\n  <div class=\"box\" style=\"background-color: var(--primary-a50)\">var(--primary-a50)<\/div>\n<\/div>\n<div class=\"box-group\">\n  <div class=\"box\" style=\"background-color: var(--secondary)\">var(--secondary<\/div>\n  <div class=\"box\" style=\"background-color: var(--secondary-a90)\">var(--secondary-a90)<\/div>\n  <div class=\"box\" style=\"background-color: var(--secondary-a80)\">var(--secondary-a80)<\/div>\n  <div class=\"box\" style=\"background-color: var(--secondary-a50)\">var(--secondary-a50)<\/div>\n<\/div>\n<div class=\"box-group\">\n  <div class=\"box\" style=\"background-color: var(--dark)\">var(--dark<\/div>\n  <div class=\"box\" style=\"background-color: var(--dark-a90)\">var(--dark-a90)<\/div>\n  <div class=\"box\" style=\"background-color: var(--dark-a80)\">var(--dark-a80)<\/div>\n  <div class=\"box\" style=\"background-color: var(--dark-a50)\">var(--dark-a50)<\/div>\n<\/div>\n<div class=\"box-group\" id=\"light\">\n  <div class=\"box\" style=\"background-color: var(--light)\">var(--light<\/div>\n  <div class=\"box\" style=\"background-color: var(--light-a90)\">var(--light-a90)<\/div>\n  <div class=\"box\" style=\"background-color: var(--light-a80)\">var(--light-a80)<\/div>\n  <div class=\"box\" style=\"background-color: var(--light-a50)\">var(--light-a50)<\/div>\n<\/div>\n<h2>My color system template<\/h2>\n<p>Presented below is my standardized color system framework, which I employ as a foundational template for every new project I undertake. It seamlessly incorporates native support for both light and dark mode.<\/p>\n<pre><code class=\"language-CSS\">\/* Base color scheme (fallback) *\/\n:root {\n  --color-1: #e62739; \/* The primary color (var(--primary), var(--primary-a90), var(--primary-80), var(--primary-a50)) *\/\n  --color-2: #21A8A3; \/* The secondary color (var(--secondary), var(--secondary-a90), var(--secondary-80), var(--secondary-a50)) *\/\n  --color-3: #19191a; \/* Initial foreground color (var(--foreground), var(--foreground-a90), var(--foreground-80), var(--foreground-a50)) *\/\n  --color-4: #f1f1f1; \/* Initial background color (var(--background), var(--background-a90), var(--background-80), var(--background-a50)) *\/\n\n  --primary: var(--color-1);\n  --primary-a90: color-mix(in srgb, var(--primary), transparent 10%);\n  --primary-a80: color-mix(in srgb, var(--primary), transparent 20%);\n  --primary-a50: color-mix(in srgb, var(--primary), transparent 50%);\n\n  --secondary: var(--color-2);\n  --secondary-a90: color-mix(in srgb, var(--secondary), transparent 10%);\n  --secondary-a80: color-mix(in srgb, var(--secondary), transparent 20%);\n  --secondary-a50: color-mix(in srgb, var(--secondary), transparent 50%);\n\n  --foreground: var(--color-3);\n  --foreground-a90: color-mix(in srgb, var(--foreground), transparent 10%);\n  --foreground-a80: color-mix(in srgb, var(--foreground), transparent 20%);\n  --foreground-a50: color-mix(in srgb, var(--foreground), transparent 50%);\n\n  --background: var(--color-4);\n  --background-a90: color-mix(in srgb, var(--background), transparent 10%);\n  --background-a80: color-mix(in srgb, var(--background), transparent 20%);\n  --background-a50: color-mix(in srgb, var(--background), transparent 50%);\n}\n\n\/* lightmode or fallback if user has no preference *\/\n@media (prefers-color-scheme: light),(prefers-color-scheme: no-preference) {\n  :root {\n    --foreground: var(--color-3);\n    --foreground-a90: color-mix(in srgb, var(--foreground), transparent 10%);\n    --foreground-a80: color-mix(in srgb, var(--foreground), transparent 20%);\n    --foreground-a50: color-mix(in srgb, var(--foreground), transparent 50%);\n\n    --background: var(--color-4);\n    --background-a90: color-mix(in srgb, var(--background), transparent 10%);\n    --background-a80: color-mix(in srgb, var(--background), transparent 20%);\n    --background-a50: color-mix(in srgb, var(--background), transparent 50%);\n  }\n}\n\n\/* darkmode *\/\n@media (prefers-color-scheme: dark) {\n  :root {\n    --foreground: var(--color-4);\n    --foreground-a90: color-mix(in srgb, var(--foreground), transparent 10%);\n    --foreground-a80: color-mix(in srgb, var(--foreground), transparent 20%);\n    --foreground-a50: color-mix(in srgb, var(--foreground), transparent 50%);\n\n    --background: var(--color-3);\n    --background-a90: color-mix(in srgb, var(--background), transparent 10%);\n    --background-a80: color-mix(in srgb, var(--background), transparent 20%);\n    --background-a50: color-mix(in srgb, var(--background), transparent 50%);\n  }\n}<\/code><\/pre>"],["Weekly Widget - Animated Background","weekly-widget-animated-background","22\/05\/2023","Weekly Widget","2023\/05\/22\/weekly-widget-animated-background\/","<h1>Animated Background<\/h1>\n<p class='timestamp'><time datetime='22-05-2023'>22-05-2023<\/time><\/p>\n<hr>\n<p>This week's widget is a animated background with CSS. Note how the background color gradually shifts from a pure blue to a purple gradiant:<\/p>\n<p class=\"codepen\" data-height=\"715.390625\" data-default-tab=\"result\" data-slug-hash=\"KKwGKKQ\" data-user=\"triss90\" data-token=\"aa67671b3662cab49fb6bfb8668bf419\" style=\"height: 715.390625px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  <span>See the Pen <a href=\"https:\/\/codepen.io\/triss90\/pen\/KKwGKKQ\/aa67671b3662cab49fb6bfb8668bf419\">\n  Animating background<\/a> by Tristan  White (<a href=\"https:\/\/codepen.io\/triss90\">@triss90<\/a>)\n  on <a href=\"https:\/\/codepen.io\">CodePen<\/a>.<\/span>\n<\/p>\n<script async src=\"https:\/\/cpwebassets.codepen.io\/assets\/embed\/ei.js\"><\/script>\n<p>The effect is achieved by gradually shifting the CSS <code>background-position<\/code>.<\/p>"],["Weekly Widget - Datacenter Map","weekly-widget-datacenter-map","29\/05\/2023","Weekly Widget","2023\/05\/29\/weekly-widget-datacenter-map\/","<h1>Datacenter Map<\/h1>\n<p class='timestamp'><time datetime='29-05-2023'>29-05-2023<\/time><\/p>\n<hr>\n<p>The widget of the week is an animated datacenter map, designed using SVG, with a dotted pattern:<\/p>\n<p class=\"codepen\" data-height=\"684.7109375\" data-default-tab=\"result\" data-slug-hash=\"LYzYEEB\" data-user=\"triss90\" data-token=\"0502593416aafb25b971cacf7f05f5c8\" style=\"height: 684.7109375px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  <span>See the Pen <a href=\"https:\/\/codepen.io\/triss90\/pen\/LYzYEEB\/0502593416aafb25b971cacf7f05f5c8\">\n  Datacenters Map<\/a> by Tristan  White (<a href=\"https:\/\/codepen.io\/triss90\">@triss90<\/a>)\n  on <a href=\"https:\/\/codepen.io\">CodePen<\/a>.<\/span>\n<\/p>\n<script async src=\"https:\/\/cpwebassets.codepen.io\/assets\/embed\/ei.js\"><\/script>"],["ColorDrop Release 2023","colordrop-release-2023","30\/05\/2023","Weekly Widget","2023\/05\/30\/colordrop-release-2023\/","<h1>ColorDrop Release 2023<\/h1>\n<p class='timestamp'><time datetime='30-05-2023'>30-05-2023<\/time><\/p>\n<hr>\n<p>I am are thrilled to announce the launch of the all-new, redesigned <a href=\"https:\/\/colordop.io\">ColorDrop.io<\/a>!<\/p>\n<p>Over the past few months, I've been working tirelessly to enhance the ColorDrop experience, and I am now excited to present to you a stunningly refreshed interface, improved image scanning, an upgraded palette customization feature, and a vast library of new color palettes.<\/p>\n<h2>Introducing the New Interface<\/h2>\n<p>I have completely reimagined the ColorDrop interface, making it even more intuitive and user-friendly. It's now simpler than ever to navigate the site and create the perfect palette for your design projects.<\/p>\n<img alt=\"Image of the ColorDrop website\" src=\"https:\/\/triss.dev\/examples\/colordrop.png\" style=\"max-width: 100%; border: 2px solid #19191a; border-radius: 0.3rem;\">\n<h2>Improved Image Scanning<\/h2>\n<p>The image scanning feature has undergone an extensive upgrade. With the improved algorithm, you can now extract colors from your images with even greater accuracy, enhancing your creativity and design process.<\/p>\n<img alt=\"Image of the ColorDrop website\" src=\"https:\/\/triss.dev\/examples\/colordrop1.png\" style=\"max-width: 100%; border: 2px solid #19191a; border-radius: 0.3rem;\">\n<h2>Enhanced Palette Customization<\/h2>\n<p>I've listened to your feedback, and the palette customization feature has been revamped to give you even more control over your color combinations. Experimenting and tweaking until you find the ideal match for your project is now more enjoyable and efficient than ever before.<\/p>\n<img alt=\"Image of the ColorDrop website\" src=\"https:\/\/triss.dev\/examples\/colordrop2.png\" style=\"max-width: 100%; border: 2px solid #19191a; border-radius: 0.3rem;\">\n<h2>Fresh New Palettes<\/h2>\n<p>To fuel your inspiration, I've added a plethora of new color palettes. From bold and bright, to soft and soothing, there's something for every design aesthetic.<\/p>\n<h2>More Frequent Updates<\/h2>\n<p>I'm committed to continually enriching your ColorDrop experience. Going forward, I will be adding new color palettes much more frequently, ensuring that you always have fresh and current color combinations to inspire your projects.<\/p>\n<p>I believe that design is an ever-evolving journey, and I'm' here to provide you with the tools you need to express your creativity in the most vibrant ways possible. I am incredibly proud of the new ColorDrop, and can't wait for you to experience it.<\/p>\n<p>Start exploring the new <a href=\"https:\/\/colordop.io\">ColorDrop.io<\/a> now, and let your color journey begin. I'm excited to see the incredible designs you create!<\/p>\n<p>Thank you for your continued support and happy coloring!<\/p>\n<p>\/Tristan White<\/p>"],["Weekly Widget -  HSLA editor","weekly-widget-hsla-editor","05\/06\/2023","Weekly Widget","2023\/06\/05\/weekly-widget-hsla-editor\/","<h1>HSLA editor<\/h1>\n<p class='timestamp'><time datetime='05-06-2023'05-06-2023<\/time><\/p>\n<hr>\n<p>This week's widget is a simple HSLA color slider<\/p>\n<p class=\"codepen\" data-height=\"566.2734375\" data-default-tab=\"result\" data-slug-hash=\"JjbqWKK\" data-user=\"triss90\" style=\"height: 566.2734375px; box-sizing: border-box; display: flex; align-items: center; justify-content: center; border: 2px solid; margin: 1em 0; padding: 1em;\">\n  <span>See the Pen <a href=\"https:\/\/codepen.io\/triss90\/pen\/JjbqWKK\">\n  HSLA editor<\/a> by Tristan  White (<a href=\"https:\/\/codepen.io\/triss90\">@triss90<\/a>)\n  on <a href=\"https:\/\/codepen.io\">CodePen<\/a>.<\/span>\n<\/p>\n<script async src=\"https:\/\/cpwebassets.codepen.io\/assets\/embed\/ei.js\"><\/script>\n<p>HSLA colors in CSS can be used to define color properties for various elements in your web design. HSLA stands for Hue, Saturation, Lightness, and Alpha.<\/p>\n<p>Here's a breakdown of how each component of HSLA is used in CSS:<\/p>\n<ul>\n<li><strong>Hue (H)<\/strong>: This is the first parameter and represents the color itself. It's a degree on the color wheel; 0 (or 360) is red, 120 is green, and 240 is blue.<\/li>\n<li><strong>Saturation (S)<\/strong>: This is the second parameter and represents the amount of color, or the intensity. It's a percentage; 100% is full color, and 0% is a shade of grey.<\/li>\n<li><strong>Lightness (L)<\/strong>: This is the third parameter and represents the amount of white or black in the color. It's also a percentage; 0% lightness is black, 100% lightness is white, and 50% lightness is neither added white nor black.<\/li>\n<li><strong>Alpha (A)<\/strong>: This is the fourth parameter and represents the opacity of the color. An alpha value of 1 is completely opaque, and an alpha value of 0 is completely transparent.<\/li>\n<\/ul>\n<p>Here's how you can define HSLA color in CSS:<\/p>\n<pre><code class=\"language-CSS\">element {\n    background-color: hsla(120, 100%, 50%, 0.3);\n}<\/code><\/pre>\n<p>In the above example, the background-color of the element is set to a color with hue 120 (green), 100% saturation (full color), 50% lightness (neither light nor dark), and 0.3 alpha (somewhat transparent).<\/p>"]]